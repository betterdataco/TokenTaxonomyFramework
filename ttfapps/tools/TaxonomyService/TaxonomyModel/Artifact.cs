// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: artifact.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace IWA.TTF.Taxonomy.Model.Artifact {

  /// <summary>Holder for reflection information generated from artifact.proto</summary>
  public static partial class ArtifactReflection {

    #region Descriptor
    /// <summary>File descriptor for artifact.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ArtifactReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg5hcnRpZmFjdC5wcm90bxIXdGF4b25vbXkubW9kZWwuYXJ0aWZhY3QaGWdv",
            "b2dsZS9wcm90b2J1Zi9hbnkucHJvdG8i8QIKDkNsYXNzaWZpY2F0aW9uEjwK",
            "DXRlbXBsYXRlX3R5cGUYASABKA4yJS50YXhvbm9teS5tb2RlbC5hcnRpZmFj",
            "dC5UZW1wbGF0ZVR5cGUSNgoKdG9rZW5fdHlwZRgCIAEoDjIiLnRheG9ub215",
            "Lm1vZGVsLmFydGlmYWN0LlRva2VuVHlwZRI2Cgp0b2tlbl91bml0GAMgASgO",
            "MiIudGF4b25vbXkubW9kZWwuYXJ0aWZhY3QuVG9rZW5Vbml0EkgKE3JlcHJl",
            "c2VudGF0aW9uX3R5cGUYBCABKA4yKy50YXhvbm9teS5tb2RlbC5hcnRpZmFj",
            "dC5SZXByZXNlbnRhdGlvblR5cGUSNgoKdmFsdWVfdHlwZRgFIAEoDjIiLnRh",
            "eG9ub215Lm1vZGVsLmFydGlmYWN0LlZhbHVlVHlwZRIvCgZzdXBwbHkYBiAB",
            "KA4yHy50YXhvbm9teS5tb2RlbC5hcnRpZmFjdC5TdXBwbHkinwEKDkFydGlm",
            "YWN0U3ltYm9sEgoKAmlkGAEgASgJEjMKBHR5cGUYAiABKA4yJS50YXhvbm9t",
            "eS5tb2RlbC5hcnRpZmFjdC5BcnRpZmFjdFR5cGUSDgoGdmlzdWFsGAMgASgJ",
            "Eg8KB3Rvb2xpbmcYBCABKAkSDwoHdmVyc2lvbhgFIAEoCRIaChJ0ZW1wbGF0",
            "ZV92YWxpZGF0ZWQYBiABKAgiyAQKCEFydGlmYWN0EkAKD2FydGlmYWN0X3N5",
            "bWJvbBgBIAEoCzInLnRheG9ub215Lm1vZGVsLmFydGlmYWN0LkFydGlmYWN0",
            "U3ltYm9sEgwKBG5hbWUYAiABKAkSDwoHYWxpYXNlcxgDIAMoCRJIChNhcnRp",
            "ZmFjdF9kZWZpbml0aW9uGAQgASgLMisudGF4b25vbXkubW9kZWwuYXJ0aWZh",
            "Y3QuQXJ0aWZhY3REZWZpbml0aW9uEj8KDGRlcGVuZGVuY2llcxgFIAMoCzIp",
            "LnRheG9ub215Lm1vZGVsLmFydGlmYWN0LlN5bWJvbERlcGVuZGVuY3kSSgoZ",
            "aW5jb21wYXRpYmxlX3dpdGhfc3ltYm9scxgGIAMoCzInLnRheG9ub215Lm1v",
            "ZGVsLmFydGlmYWN0LkFydGlmYWN0U3ltYm9sEkcKFWluZmx1ZW5jZWRfYnlf",
            "c3ltYm9scxgHIAMoCzIoLnRheG9ub215Lm1vZGVsLmFydGlmYWN0LlN5bWJv",
            "bEluZmx1ZW5jZRITCgtjb250cm9sX3VyaRgIIAEoCRI9Cg5hcnRpZmFjdF9m",
            "aWxlcxgJIAMoCzIlLnRheG9ub215Lm1vZGVsLmFydGlmYWN0LkFydGlmYWN0",
            "RmlsZRIrCgRtYXBzGAogASgLMh0udGF4b25vbXkubW9kZWwuYXJ0aWZhY3Qu",
            "TWFwcxI6Cgxjb250cmlidXRvcnMYCyADKAsyJC50YXhvbm9teS5tb2RlbC5h",
            "cnRpZmFjdC5Db250cmlidXRvciKaAQoXQXJ0aWZhY3RSZWZlcmVuY2VWYWx1",
            "ZXMSEwoLY29udHJvbF91cmkYASABKAkSPQoOYXJ0aWZhY3RfZmlsZXMYAiAD",
            "KAsyJS50YXhvbm9teS5tb2RlbC5hcnRpZmFjdC5BcnRpZmFjdEZpbGUSKwoE",
            "bWFwcxgDIAEoCzIdLnRheG9ub215Lm1vZGVsLmFydGlmYWN0Lk1hcHMirwEK",
            "EUFydGlmYWN0UmVmZXJlbmNlEgoKAmlkGAEgASgJEjMKBHR5cGUYAiABKA4y",
            "JS50YXhvbm9teS5tb2RlbC5hcnRpZmFjdC5BcnRpZmFjdFR5cGUSFwoPcmVm",
            "ZXJlbmNlX25vdGVzGAMgASgJEkAKBnZhbHVlcxgEIAEoCzIwLnRheG9ub215",
            "Lm1vZGVsLmFydGlmYWN0LkFydGlmYWN0UmVmZXJlbmNlVmFsdWVzIpwBCg9T",
            "eW1ib2xJbmZsdWVuY2USEwoLZGVzY3JpcHRpb24YASABKAkSNwoGc3ltYm9s",
            "GAIgASgLMicudGF4b25vbXkubW9kZWwuYXJ0aWZhY3QuQXJ0aWZhY3RTeW1i",
            "b2wSOwoKYXBwbGllc190bxgDIAMoCzInLnRheG9ub215Lm1vZGVsLmFydGlm",
            "YWN0LkFydGlmYWN0U3ltYm9sIjEKC0NvbnRyaWJ1dG9yEgwKBG5hbWUYASAB",
            "KAkSFAoMb3JnYW5pemF0aW9uGAIgASgJImAKEFN5bWJvbERlcGVuZGVuY3kS",
            "EwoLZGVzY3JpcHRpb24YASABKAkSNwoGc3ltYm9sGAIgASgLMicudGF4b25v",
            "bXkubW9kZWwuYXJ0aWZhY3QuQXJ0aWZhY3RTeW1ib2wi0AEKEkFydGlmYWN0",
            "RGVmaW5pdGlvbhIcChRidXNpbmVzc19kZXNjcmlwdGlvbhgBIAEoCRIYChBi",
            "dXNpbmVzc19leGFtcGxlGAIgASgJEjsKCWFuYWxvZ2llcxgDIAMoCzIoLnRh",
            "eG9ub215Lm1vZGVsLmFydGlmYWN0LkFydGlmYWN0QW5hbG9neRIQCghjb21t",
            "ZW50cxgEIAEoCRIzCghhcnRpZmFjdBgFIAEoCzIhLnRheG9ub215Lm1vZGVs",
            "LmFydGlmYWN0LkFydGlmYWN0In4KD0FydGlmYWN0QW5hbG9neRIMCgRuYW1l",
            "GAEgASgJEhMKC2Rlc2NyaXB0aW9uGAIgASgJEkgKE2FydGlmYWN0X2RlZmlu",
            "aXRpb24YAyABKAsyKy50YXhvbm9teS5tb2RlbC5hcnRpZmFjdC5BcnRpZmFj",
            "dERlZmluaXRpb24ipAEKDEFydGlmYWN0RmlsZRI5Cgdjb250ZW50GAEgASgO",
            "MigudGF4b25vbXkubW9kZWwuYXJ0aWZhY3QuQXJ0aWZhY3RDb250ZW50EhEK",
            "CWZpbGVfbmFtZRgCIAEoCRIRCglmaWxlX2RhdGEYAyABKAwSMwoIYXJ0aWZh",
            "Y3QYBCABKAsyIS50YXhvbm9teS5tb2RlbC5hcnRpZmFjdC5BcnRpZmFjdCKH",
            "AgoETWFwcxI+Cg9jb2RlX3JlZmVyZW5jZXMYASADKAsyJS50YXhvbm9teS5t",
            "b2RlbC5hcnRpZmFjdC5NYXBSZWZlcmVuY2USSAoZaW1wbGVtZW50YXRpb25f",
            "cmVmZXJlbmNlcxgCIAMoCzIlLnRheG9ub215Lm1vZGVsLmFydGlmYWN0Lk1h",
            "cFJlZmVyZW5jZRJACglyZXNvdXJjZXMYAyADKAsyLS50YXhvbm9teS5tb2Rl",
            "bC5hcnRpZmFjdC5NYXBSZXNvdXJjZVJlZmVyZW5jZRIzCghhcnRpZmFjdBgE",
            "IAEoCzIhLnRheG9ub215Lm1vZGVsLmFydGlmYWN0LkFydGlmYWN0ItgBCgxN",
            "YXBSZWZlcmVuY2USOgoMbWFwcGluZ190eXBlGAEgASgOMiQudGF4b25vbXku",
            "bW9kZWwuYXJ0aWZhY3QuTWFwcGluZ1R5cGUSDAoEbmFtZRgCIAEoCRI5Cghw",
            "bGF0Zm9ybRgDIAEoDjInLnRheG9ub215Lm1vZGVsLmFydGlmYWN0LlRhcmdl",
            "dFBsYXRmb3JtEhYKDnJlZmVyZW5jZV9wYXRoGAQgASgJEisKBG1hcHMYBSAB",
            "KAsyHS50YXhvbm9teS5tb2RlbC5hcnRpZmFjdC5NYXBzIrkBChRNYXBSZXNv",
            "dXJjZVJlZmVyZW5jZRI6CgxtYXBwaW5nX3R5cGUYASABKA4yJC50YXhvbm9t",
            "eS5tb2RlbC5hcnRpZmFjdC5NYXBwaW5nVHlwZRIMCgRuYW1lGAIgASgJEhMK",
            "C2Rlc2NyaXB0aW9uGAMgASgJEhUKDXJlc291cmNlX3BhdGgYBCABKAkSKwoE",
            "bWFwcxgFIAEoCzIdLnRheG9ub215Lm1vZGVsLmFydGlmYWN0Lk1hcHMicQoS",
            "TmV3QXJ0aWZhY3RSZXF1ZXN0EjMKBHR5cGUYASABKA4yJS50YXhvbm9teS5t",
            "b2RlbC5hcnRpZmFjdC5BcnRpZmFjdFR5cGUSJgoIYXJ0aWZhY3QYAiABKAsy",
            "FC5nb29nbGUucHJvdG9idWYuQW55In4KE05ld0FydGlmYWN0UmVzcG9uc2US",
            "MwoEdHlwZRgBIAEoDjIlLnRheG9ub215Lm1vZGVsLmFydGlmYWN0LkFydGlm",
            "YWN0VHlwZRIyChRhcnRpZmFjdF90eXBlX29iamVjdBgCIAEoCzIULmdvb2ds",
            "ZS5wcm90b2J1Zi5BbnkigAEKFVVwZGF0ZUFydGlmYWN0UmVxdWVzdBIzCgR0",
            "eXBlGAEgASgOMiUudGF4b25vbXkubW9kZWwuYXJ0aWZhY3QuQXJ0aWZhY3RU",
            "eXBlEjIKFGFydGlmYWN0X3R5cGVfb2JqZWN0GAIgASgLMhQuZ29vZ2xlLnBy",
            "b3RvYnVmLkFueSKSAQoWVXBkYXRlQXJ0aWZhY3RSZXNwb25zZRIzCgR0eXBl",
            "GAEgASgOMiUudGF4b25vbXkubW9kZWwuYXJ0aWZhY3QuQXJ0aWZhY3RUeXBl",
            "Eg8KB3VwZGF0ZWQYAiABKAgSMgoUYXJ0aWZhY3RfdHlwZV9vYmplY3QYAyAB",
            "KAsyFC5nb29nbGUucHJvdG9idWYuQW55IlkKFURlbGV0ZUFydGlmYWN0UmVx",
            "dWVzdBJACg9hcnRpZmFjdF9zeW1ib2wYASABKAsyJy50YXhvbm9teS5tb2Rl",
            "bC5hcnRpZmFjdC5BcnRpZmFjdFN5bWJvbCIpChZEZWxldGVBcnRpZmFjdFJl",
            "c3BvbnNlEg8KB2RlbGV0ZWQYASABKAgiKAoPVG9rZW5UZW1wbGF0ZUlkEhUK",
            "DWRlZmluaXRpb25faWQYASABKAkiGAoKSWRlbnRpZmllchIKCgJpZBgBIAEo",
            "CSJIChVOZXdUZW1wbGF0ZURlZmluaXRpb24SGwoTdGVtcGxhdGVfZm9ybXVs",
            "YV9pZBgBIAEoCRISCgp0b2tlbl9uYW1lGAIgASgJIqgCChxJbml0aWFsaXpl",
            "TmV3QXJ0aWZhY3RSZXF1ZXN0EjwKDWFydGlmYWN0X3R5cGUYASABKA4yJS50",
            "YXhvbm9teS5tb2RlbC5hcnRpZmFjdC5BcnRpZmFjdFR5cGUSDAoEbmFtZRgC",
            "IAEoCRIOCgZzeW1ib2wYAyABKAkSPAoNdGVtcGxhdGVfdHlwZRgEIAEoDjIl",
            "LnRheG9ub215Lm1vZGVsLmFydGlmYWN0LlRlbXBsYXRlVHlwZRI2Cgp0b2tl",
            "bl90eXBlGAUgASgOMiIudGF4b25vbXkubW9kZWwuYXJ0aWZhY3QuVG9rZW5U",
            "eXBlEjYKCnRva2VuX3VuaXQYBiABKA4yIi50YXhvbm9teS5tb2RlbC5hcnRp",
            "ZmFjdC5Ub2tlblVuaXQihQEKHUluaXRpYWxpemVOZXdBcnRpZmFjdFJlc3Bv",
            "bnNlEjwKDWFydGlmYWN0X3R5cGUYASABKA4yJS50YXhvbm9teS5tb2RlbC5h",
            "cnRpZmFjdC5BcnRpZmFjdFR5cGUSJgoIYXJ0aWZhY3QYAiABKAsyFC5nb29n",
            "bGUucHJvdG9idWYuQW55Ii4KFENvbW1pdFVwZGF0ZXNSZXF1ZXN0EhYKDmNv",
            "bW1pdF9tZXNzYWdlGAEgASgJIicKFUNvbW1pdFVwZGF0ZXNSZXNwb25zZRIO",
            "CgZyZXN1bHQYASABKAkiEgoQSXNzdWVQdWxsUmVxdWVzdCIlChFJc3N1ZVB1",
            "bGxSZXNwb25zZRIQCghyZXNwb25zZRgBIAEoCSIWChRDb25maWd1cmF0aW9u",
            "UmVxdWVzdCJNChRTZXJ2aWNlQ29uZmlndXJhdGlvbhIRCglyZWFkX29ubHkY",
            "ASABKAgSDgoGZ2l0X2lkGAIgASgJEhIKCmdpdF9icmFuY2gYAyABKAki8wEK",
            "DFF1ZXJ5T3B0aW9ucxI8Cg1hcnRpZmFjdF90eXBlGAEgASgOMiUudGF4b25v",
            "bXkubW9kZWwuYXJ0aWZhY3QuQXJ0aWZhY3RUeXBlEhcKD21heF9pdGVtX3Jl",
            "dHVybhgCIAEoBRIXCg9sYXN0X2l0ZW1faW5kZXgYAyABKAUSGQoRYnlfY2xh",
            "c3NpZmljYXRpb24YBCABKAgSPwoOY2xhc3NpZmljYXRpb24YBSABKAsyJy50",
            "YXhvbm9teS5tb2RlbC5hcnRpZmFjdC5DbGFzc2lmaWNhdGlvbhIXCg9pbmNs",
            "dWRlX2h5YnJpZHMYBiABKAgi1AEKC1F1ZXJ5UmVzdWx0EjwKDWFydGlmYWN0",
            "X3R5cGUYASABKA4yJS50YXhvbm9teS5tb2RlbC5hcnRpZmFjdC5BcnRpZmFj",
            "dFR5cGUSGAoQZmlyc3RfaXRlbV9pbmRleBgCIAEoBRIXCg9sYXN0X2l0ZW1f",
            "aW5kZXgYAyABKAUSIQoZdG90YWxfaXRlbXNfaW5fY29sbGVjdGlvbhgEIAEo",
            "BRIxChNhcnRpZmFjdF9jb2xsZWN0aW9uGAUgASgLMhQuZ29vZ2xlLnByb3Rv",
            "YnVmLkFueSKEAgoORm9ybXVsYUdyYW1tYXISSQoUc2luZ2xlX3Rva2VuX2dy",
            "YW1tYXIYASABKAsyKy50YXhvbm9teS5tb2RlbC5hcnRpZmFjdC5TaW5nbGVU",
            "b2tlbkdyYW1tYXISQwoOaHlicmlkX2dyYW1tYXIYAiABKAsyKy50YXhvbm9t",
            "eS5tb2RlbC5hcnRpZmFjdC5IeWJyaWRUb2tlbkdyYW1tYXISYgobaHlicmlk",
            "X3dpdGhfaHlicmlkc19ncmFtbWFyGAMgASgLMj0udGF4b25vbXkubW9kZWwu",
            "YXJ0aWZhY3QuSHlicmlkVG9rZW5XaXRoSHlicmlkQ2hpbGRyZW5HcmFtbWFy",
            "IsIBChJIeWJyaWRUb2tlbkdyYW1tYXISOwoGcGFyZW50GAEgASgLMisudGF4",
            "b25vbXkubW9kZWwuYXJ0aWZhY3QuU2luZ2xlVG9rZW5HcmFtbWFyEhYKDmNo",
            "aWxkcmVuX3N0YXJ0GAIgASgJEkEKDGNoaWxkX3Rva2VucxgDIAMoCzIrLnRh",
            "eG9ub215Lm1vZGVsLmFydGlmYWN0LlNpbmdsZVRva2VuR3JhbW1hchIUCgxj",
            "aGlsZHJlbl9lbmQYBCABKAki6QEKJEh5YnJpZFRva2VuV2l0aEh5YnJpZENo",
            "aWxkcmVuR3JhbW1hchI7CgZwYXJlbnQYASABKAsyKy50YXhvbm9teS5tb2Rl",
            "bC5hcnRpZmFjdC5TaW5nbGVUb2tlbkdyYW1tYXISHQoVaHlicmlkX2NoaWxk",
            "cmVuX3N0YXJ0GAIgASgJEkgKE2h5YnJpZF9jaGlsZF90b2tlbnMYAyADKAsy",
            "Ky50YXhvbm9teS5tb2RlbC5hcnRpZmFjdC5IeWJyaWRUb2tlbkdyYW1tYXIS",
            "GwoTaHlicmlkX2NoaWxkcmVuX2VuZBgEIAEoCSLaAQoSU2luZ2xlVG9rZW5H",
            "cmFtbWFyEhMKC2dyb3VwX3N0YXJ0GAIgASgJEiEKGWJhc2VfdG9rZW5fdG9v",
            "bGluZ19zeW1ib2wYAyABKAkSOAoJYmVoYXZpb3JzGAQgASgLMiUudGF4b25v",
            "bXkubW9kZWwuYXJ0aWZhY3QuQmVoYXZpb3JMaXN0Ej8KDXByb3BlcnR5X3Nl",
            "dHMYBSABKAsyKC50YXhvbm9teS5tb2RlbC5hcnRpZmFjdC5Qcm9wZXJ0eVNl",
            "dExpc3QSEQoJZ3JvdXBfZW5kGAYgASgJIlYKDEJlaGF2aW9yTGlzdBISCgps",
            "aXN0X3N0YXJ0GAEgASgJEiAKGGJlaGF2aW9yX3Rvb2xpbmdfc3ltYm9scxgC",
            "IAMoCRIQCghsaXN0X2VuZBgDIAEoCSJqCg9Qcm9wZXJ0eVNldExpc3QSEgoK",
            "bGlzdF9zdGFydBgBIAEoCRJDCg1wcm9wZXJ0eV9zZXRzGAIgAygLMiwudGF4",
            "b25vbXkubW9kZWwuYXJ0aWZhY3QuUHJvcGVydHlTZXRMaXN0SXRlbSIyChNQ",
            "cm9wZXJ0eVNldExpc3RJdGVtEhsKE3Byb3BlcnR5X3NldF9zeW1ib2wYAiAB",
            "KAkqLAoMVGVtcGxhdGVUeXBlEhAKDFNJTkdMRV9UT0tFThAAEgoKBkhZQlJJ",
            "RBABKisKCVRva2VuVHlwZRIMCghGVU5HSUJMRRAAEhAKDE5PTl9GVU5HSUJM",
            "RRABKiwKElJlcHJlc2VudGF0aW9uVHlwZRIKCgZDT01NT04QABIKCgZVTklR",
            "VUUQASopCglWYWx1ZVR5cGUSDQoJSU5UUklOU0lDEAASDQoJUkVGRVJFTkNF",
            "EAEqNQoJVG9rZW5Vbml0Eg4KCkZSQUNUSU9OQUwQABIJCgVXSE9MRRABEg0K",
            "CVNJTkdMRVRPThACKkEKBlN1cHBseRIJCgVGSVhFRBAAEhMKD0NBUFBFRF9W",
            "QVJJQUJMRRABEgkKBUdBVEVEEAISDAoISU5GSU5JVEUQAyqPAQoMQXJ0aWZh",
            "Y3RUeXBlEggKBEJBU0UQABIMCghCRUhBVklPUhABEhIKDkJFSEFWSU9SX0dS",
            "T1VQEAISEAoMUFJPUEVSVFlfU0VUEAMSFAoQVEVNUExBVEVfRk9STVVMQRAE",
            "EhcKE1RFTVBMQVRFX0RFRklOSVRJT04QBRISCg5UT0tFTl9URU1QTEFURRAG",
            "KkIKD0FydGlmYWN0Q29udGVudBIOCgpERUZJTklUSU9OEAASCwoHQ09OVFJP",
            "TBABEgcKA1VNTBACEgkKBU9USEVSEAMqQAoLTWFwcGluZ1R5cGUSDwoLU09V",
            "UkNFX0NPREUQABISCg5JTVBMRU1FTlRBVElPThABEgwKCFJFU09VUkNFEAIq",
            "igEKDlRhcmdldFBsYXRmb3JtEhUKEUVUSEVSRVVNX1NPTElESVRZEAASEAoM",
            "Q0hBSU5DT0RFX0dPEAESEgoOQ0hBSU5DT0RFX0pBVkEQAhISCg5DSEFJTkNP",
            "REVfTk9ERRADEgkKBUNPUkRBEAQSCAoEREFNTBAFEhIKDk9USEVSX1BMQVRG",
            "T1JNEAZCSQojb3JnLml3YS50dGYudGF4b25vbXkubW9kZWwuYXJ0aWZhY3RQ",
            "AaoCH0lXQS5UVEYuVGF4b25vbXkuTW9kZWwuQXJ0aWZhY3RiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.AnyReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::IWA.TTF.Taxonomy.Model.Artifact.TemplateType), typeof(global::IWA.TTF.Taxonomy.Model.Artifact.TokenType), typeof(global::IWA.TTF.Taxonomy.Model.Artifact.RepresentationType), typeof(global::IWA.TTF.Taxonomy.Model.Artifact.ValueType), typeof(global::IWA.TTF.Taxonomy.Model.Artifact.TokenUnit), typeof(global::IWA.TTF.Taxonomy.Model.Artifact.Supply), typeof(global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactType), typeof(global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactContent), typeof(global::IWA.TTF.Taxonomy.Model.Artifact.MappingType), typeof(global::IWA.TTF.Taxonomy.Model.Artifact.TargetPlatform), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::IWA.TTF.Taxonomy.Model.Artifact.Classification), global::IWA.TTF.Taxonomy.Model.Artifact.Classification.Parser, new[]{ "TemplateType", "TokenType", "TokenUnit", "RepresentationType", "ValueType", "Supply" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactSymbol), global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactSymbol.Parser, new[]{ "Id", "Type", "Visual", "Tooling", "Version", "TemplateValidated" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::IWA.TTF.Taxonomy.Model.Artifact.Artifact), global::IWA.TTF.Taxonomy.Model.Artifact.Artifact.Parser, new[]{ "ArtifactSymbol", "Name", "Aliases", "ArtifactDefinition", "Dependencies", "IncompatibleWithSymbols", "InfluencedBySymbols", "ControlUri", "ArtifactFiles", "Maps", "Contributors" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactReferenceValues), global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactReferenceValues.Parser, new[]{ "ControlUri", "ArtifactFiles", "Maps" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactReference), global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactReference.Parser, new[]{ "Id", "Type", "ReferenceNotes", "Values" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::IWA.TTF.Taxonomy.Model.Artifact.SymbolInfluence), global::IWA.TTF.Taxonomy.Model.Artifact.SymbolInfluence.Parser, new[]{ "Description", "Symbol", "AppliesTo" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::IWA.TTF.Taxonomy.Model.Artifact.Contributor), global::IWA.TTF.Taxonomy.Model.Artifact.Contributor.Parser, new[]{ "Name", "Organization" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::IWA.TTF.Taxonomy.Model.Artifact.SymbolDependency), global::IWA.TTF.Taxonomy.Model.Artifact.SymbolDependency.Parser, new[]{ "Description", "Symbol" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactDefinition), global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactDefinition.Parser, new[]{ "BusinessDescription", "BusinessExample", "Analogies", "Comments", "Artifact" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactAnalogy), global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactAnalogy.Parser, new[]{ "Name", "Description", "ArtifactDefinition" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactFile), global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactFile.Parser, new[]{ "Content", "FileName", "FileData", "Artifact" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::IWA.TTF.Taxonomy.Model.Artifact.Maps), global::IWA.TTF.Taxonomy.Model.Artifact.Maps.Parser, new[]{ "CodeReferences", "ImplementationReferences", "Resources", "Artifact" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::IWA.TTF.Taxonomy.Model.Artifact.MapReference), global::IWA.TTF.Taxonomy.Model.Artifact.MapReference.Parser, new[]{ "MappingType", "Name", "Platform", "ReferencePath", "Maps" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::IWA.TTF.Taxonomy.Model.Artifact.MapResourceReference), global::IWA.TTF.Taxonomy.Model.Artifact.MapResourceReference.Parser, new[]{ "MappingType", "Name", "Description", "ResourcePath", "Maps" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::IWA.TTF.Taxonomy.Model.Artifact.NewArtifactRequest), global::IWA.TTF.Taxonomy.Model.Artifact.NewArtifactRequest.Parser, new[]{ "Type", "Artifact" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::IWA.TTF.Taxonomy.Model.Artifact.NewArtifactResponse), global::IWA.TTF.Taxonomy.Model.Artifact.NewArtifactResponse.Parser, new[]{ "Type", "ArtifactTypeObject" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::IWA.TTF.Taxonomy.Model.Artifact.UpdateArtifactRequest), global::IWA.TTF.Taxonomy.Model.Artifact.UpdateArtifactRequest.Parser, new[]{ "Type", "ArtifactTypeObject" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::IWA.TTF.Taxonomy.Model.Artifact.UpdateArtifactResponse), global::IWA.TTF.Taxonomy.Model.Artifact.UpdateArtifactResponse.Parser, new[]{ "Type", "Updated", "ArtifactTypeObject" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::IWA.TTF.Taxonomy.Model.Artifact.DeleteArtifactRequest), global::IWA.TTF.Taxonomy.Model.Artifact.DeleteArtifactRequest.Parser, new[]{ "ArtifactSymbol" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::IWA.TTF.Taxonomy.Model.Artifact.DeleteArtifactResponse), global::IWA.TTF.Taxonomy.Model.Artifact.DeleteArtifactResponse.Parser, new[]{ "Deleted" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::IWA.TTF.Taxonomy.Model.Artifact.TokenTemplateId), global::IWA.TTF.Taxonomy.Model.Artifact.TokenTemplateId.Parser, new[]{ "DefinitionId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::IWA.TTF.Taxonomy.Model.Artifact.Identifier), global::IWA.TTF.Taxonomy.Model.Artifact.Identifier.Parser, new[]{ "Id" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::IWA.TTF.Taxonomy.Model.Artifact.NewTemplateDefinition), global::IWA.TTF.Taxonomy.Model.Artifact.NewTemplateDefinition.Parser, new[]{ "TemplateFormulaId", "TokenName" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::IWA.TTF.Taxonomy.Model.Artifact.InitializeNewArtifactRequest), global::IWA.TTF.Taxonomy.Model.Artifact.InitializeNewArtifactRequest.Parser, new[]{ "ArtifactType", "Name", "Symbol", "TemplateType", "TokenType", "TokenUnit" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::IWA.TTF.Taxonomy.Model.Artifact.InitializeNewArtifactResponse), global::IWA.TTF.Taxonomy.Model.Artifact.InitializeNewArtifactResponse.Parser, new[]{ "ArtifactType", "Artifact" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::IWA.TTF.Taxonomy.Model.Artifact.CommitUpdatesRequest), global::IWA.TTF.Taxonomy.Model.Artifact.CommitUpdatesRequest.Parser, new[]{ "CommitMessage" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::IWA.TTF.Taxonomy.Model.Artifact.CommitUpdatesResponse), global::IWA.TTF.Taxonomy.Model.Artifact.CommitUpdatesResponse.Parser, new[]{ "Result" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::IWA.TTF.Taxonomy.Model.Artifact.IssuePullRequest), global::IWA.TTF.Taxonomy.Model.Artifact.IssuePullRequest.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::IWA.TTF.Taxonomy.Model.Artifact.IssuePullResponse), global::IWA.TTF.Taxonomy.Model.Artifact.IssuePullResponse.Parser, new[]{ "Response" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::IWA.TTF.Taxonomy.Model.Artifact.ConfigurationRequest), global::IWA.TTF.Taxonomy.Model.Artifact.ConfigurationRequest.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::IWA.TTF.Taxonomy.Model.Artifact.ServiceConfiguration), global::IWA.TTF.Taxonomy.Model.Artifact.ServiceConfiguration.Parser, new[]{ "ReadOnly", "GitId", "GitBranch" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::IWA.TTF.Taxonomy.Model.Artifact.QueryOptions), global::IWA.TTF.Taxonomy.Model.Artifact.QueryOptions.Parser, new[]{ "ArtifactType", "MaxItemReturn", "LastItemIndex", "ByClassification", "Classification", "IncludeHybrids" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::IWA.TTF.Taxonomy.Model.Artifact.QueryResult), global::IWA.TTF.Taxonomy.Model.Artifact.QueryResult.Parser, new[]{ "ArtifactType", "FirstItemIndex", "LastItemIndex", "TotalItemsInCollection", "ArtifactCollection" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::IWA.TTF.Taxonomy.Model.Artifact.FormulaGrammar), global::IWA.TTF.Taxonomy.Model.Artifact.FormulaGrammar.Parser, new[]{ "SingleTokenGrammar", "HybridGrammar", "HybridWithHybridsGrammar" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::IWA.TTF.Taxonomy.Model.Artifact.HybridTokenGrammar), global::IWA.TTF.Taxonomy.Model.Artifact.HybridTokenGrammar.Parser, new[]{ "Parent", "ChildrenStart", "ChildTokens", "ChildrenEnd" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::IWA.TTF.Taxonomy.Model.Artifact.HybridTokenWithHybridChildrenGrammar), global::IWA.TTF.Taxonomy.Model.Artifact.HybridTokenWithHybridChildrenGrammar.Parser, new[]{ "Parent", "HybridChildrenStart", "HybridChildTokens", "HybridChildrenEnd" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::IWA.TTF.Taxonomy.Model.Artifact.SingleTokenGrammar), global::IWA.TTF.Taxonomy.Model.Artifact.SingleTokenGrammar.Parser, new[]{ "GroupStart", "BaseTokenToolingSymbol", "Behaviors", "PropertySets", "GroupEnd" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::IWA.TTF.Taxonomy.Model.Artifact.BehaviorList), global::IWA.TTF.Taxonomy.Model.Artifact.BehaviorList.Parser, new[]{ "ListStart", "BehaviorToolingSymbols", "ListEnd" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::IWA.TTF.Taxonomy.Model.Artifact.PropertySetList), global::IWA.TTF.Taxonomy.Model.Artifact.PropertySetList.Parser, new[]{ "ListStart", "PropertySets" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::IWA.TTF.Taxonomy.Model.Artifact.PropertySetListItem), global::IWA.TTF.Taxonomy.Model.Artifact.PropertySetListItem.Parser, new[]{ "PropertySetSymbol" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  /// <summary>
  ///Token Templates can contain a single token definition or a hybrid, where they are nested tokens within the template.
  /// </summary>
  public enum TemplateType {
    [pbr::OriginalName("SINGLE_TOKEN")] SingleToken = 0,
    [pbr::OriginalName("HYBRID")] Hybrid = 1,
  }

  /// <summary>
  ///Fungible or Non-Fungible Token Base
  /// </summary>
  public enum TokenType {
    [pbr::OriginalName("FUNGIBLE")] Fungible = 0,
    [pbr::OriginalName("NON_FUNGIBLE")] NonFungible = 1,
  }

  /// <summary>
  ///Tokens and Property Sets can have either a common representation, sometimes called account or balance tokens, or unique representation, or UTXO (unspent transaction output). This distinction might seem subtle but is important when considering how tokens can be traced and if they can have isolated and unique properties. A property set with a common representation type will share the property values for all tokens in the class, where a unique representation will allow for each instance to have its own value.
  /// </summary>
  public enum RepresentationType {
    /// <summary>
    ///account or balance, non-fungible are always common
    /// </summary>
    [pbr::OriginalName("COMMON")] Common = 0,
    /// <summary>
    ///UTXO
    /// </summary>
    [pbr::OriginalName("UNIQUE")] Unique = 1,
  }

  /// <summary>
  ///Intrinsic or Reference indicates if the token itself is a value, like a crypto currency, or if it references a value elsewhere, like a property title.
  /// </summary>
  public enum ValueType {
    /// <summary>
    ///pure digital
    /// </summary>
    [pbr::OriginalName("INTRINSIC")] Intrinsic = 0,
    /// <summary>
    ///digital representation of value elsewhere
    /// </summary>
    [pbr::OriginalName("REFERENCE")] Reference = 1,
  }

  /// <summary>
  ///Fractional, Whole or Singleton indicates if a token can be divided into smaller fractions, usually represented as decimals, or if there can be a quantity greater than 1. For example, a 1 dollar bill can sub-divided to 2 decimal places and can be broken into four .25 cent coins, or a number of different variation of coins, and is thus Fractional. Whole means no subdivision allowed, just whole numbers quantities, and a Singleton has a quantity of 1 with no subdivision.
  /// </summary>
  public enum TokenUnit {
    /// <summary>
    ///Supports subdivision
    /// </summary>
    [pbr::OriginalName("FRACTIONAL")] Fractional = 0,
    /// <summary>
    ///Not divisible
    /// </summary>
    [pbr::OriginalName("WHOLE")] Whole = 1,
    /// <summary>
    ///Not divisible and quantity of 1
    /// </summary>
    [pbr::OriginalName("SINGLETON")] Singleton = 2,
  }

  /// <summary>
  ///Supply indicates how many token instances, usually counted as whole instances, a token class can have during its lifetime. 
  /// </summary>
  public enum Supply {
    /// <summary>
    ///A token class that is fixed may issue an initial quantity upon creation, tokens cannot be removed or added to the supply.
    /// </summary>
    [pbr::OriginalName("FIXED")] Fixed = 0,
    /// <summary>
    ///A capped-variable supply will allow for a maximum number of tokens to exist at any given time, with quantities added and removed within the quantity cap. 
    /// </summary>
    [pbr::OriginalName("CAPPED_VARIABLE")] CappedVariable = 1,
    /// <summary>
    ///A gated supply is common in crypto-currencies, where tranches of tokens are issued at certain points in time or events. A gated supply indicates up front the quantities in each tranche and when the tranche is issued that will represent the total quantity for the class, like a cap.
    /// </summary>
    [pbr::OriginalName("GATED")] Gated = 2,
    /// <summary>
    ///Infinite supply indicates that tokens in the class can be created and removed with no cap and also potentially reflect negative supply for certain business cases.
    /// </summary>
    [pbr::OriginalName("INFINITE")] Infinite = 3,
  }

  /// <summary>
  ///Available ArtifactTypes
  /// </summary>
  public enum ArtifactType {
    [pbr::OriginalName("BASE")] Base = 0,
    [pbr::OriginalName("BEHAVIOR")] Behavior = 1,
    [pbr::OriginalName("BEHAVIOR_GROUP")] BehaviorGroup = 2,
    [pbr::OriginalName("PROPERTY_SET")] PropertySet = 3,
    [pbr::OriginalName("TEMPLATE_FORMULA")] TemplateFormula = 4,
    [pbr::OriginalName("TEMPLATE_DEFINITION")] TemplateDefinition = 5,
    [pbr::OriginalName("TOKEN_TEMPLATE")] TokenTemplate = 6,
  }

  /// <summary>
  ///Content type for included files in the artifact's folder.
  /// </summary>
  public enum ArtifactContent {
    /// <summary>
    ///json serialized from proto
    /// </summary>
    [pbr::OriginalName("DEFINITION")] Definition = 0,
    /// <summary>
    ///proto source
    /// </summary>
    [pbr::OriginalName("CONTROL")] Control = 1,
    /// <summary>
    ///md or other host UML
    /// </summary>
    [pbr::OriginalName("UML")] Uml = 2,
    /// <summary>
    ///any, pptx, docx, pdf
    /// </summary>
    [pbr::OriginalName("OTHER")] Other = 3,
  }

  /// <summary>
  ///A reference or mapping type to an extension.
  /// </summary>
  public enum MappingType {
    /// <summary>
    ///Source code for the artifact.
    /// </summary>
    [pbr::OriginalName("SOURCE_CODE")] SourceCode = 0,
    /// <summary>
    ///Finish implementation or solution of the token specification.
    /// </summary>
    [pbr::OriginalName("IMPLEMENTATION")] Implementation = 1,
    /// <summary>
    ///To an external informational source like a regulatory framework or related issue
    /// </summary>
    [pbr::OriginalName("RESOURCE")] Resource = 2,
  }

  /// <summary>
  ///Target Platforms at the time of launch.
  /// </summary>
  public enum TargetPlatform {
    [pbr::OriginalName("ETHEREUM_SOLIDITY")] EthereumSolidity = 0,
    [pbr::OriginalName("CHAINCODE_GO")] ChaincodeGo = 1,
    [pbr::OriginalName("CHAINCODE_JAVA")] ChaincodeJava = 2,
    [pbr::OriginalName("CHAINCODE_NODE")] ChaincodeNode = 3,
    [pbr::OriginalName("CORDA")] Corda = 4,
    [pbr::OriginalName("DAML")] Daml = 5,
    /// <summary>
    ///Instead of adding to this list, this can catch all lanugages and platforms not present at launch.
    /// </summary>
    [pbr::OriginalName("OTHER_PLATFORM")] OtherPlatform = 6,
  }

  #endregion

  #region Messages
  /// <summary>
  ///Classification uses these variable settings at runtime to determine what classification a token template or specification is in. These values are pulled from the TemplateFormula and TemplateDefintion.BaseToken
  /// </summary>
  public sealed partial class Classification : pb::IMessage<Classification>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Classification> _parser = new pb::MessageParser<Classification>(() => new Classification());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Classification> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Classification() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Classification(Classification other) : this() {
      templateType_ = other.templateType_;
      tokenType_ = other.tokenType_;
      tokenUnit_ = other.tokenUnit_;
      representationType_ = other.representationType_;
      valueType_ = other.valueType_;
      supply_ = other.supply_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Classification Clone() {
      return new Classification(this);
    }

    /// <summary>Field number for the "template_type" field.</summary>
    public const int TemplateTypeFieldNumber = 1;
    private global::IWA.TTF.Taxonomy.Model.Artifact.TemplateType templateType_ = global::IWA.TTF.Taxonomy.Model.Artifact.TemplateType.SingleToken;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::IWA.TTF.Taxonomy.Model.Artifact.TemplateType TemplateType {
      get { return templateType_; }
      set {
        templateType_ = value;
      }
    }

    /// <summary>Field number for the "token_type" field.</summary>
    public const int TokenTypeFieldNumber = 2;
    private global::IWA.TTF.Taxonomy.Model.Artifact.TokenType tokenType_ = global::IWA.TTF.Taxonomy.Model.Artifact.TokenType.Fungible;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::IWA.TTF.Taxonomy.Model.Artifact.TokenType TokenType {
      get { return tokenType_; }
      set {
        tokenType_ = value;
      }
    }

    /// <summary>Field number for the "token_unit" field.</summary>
    public const int TokenUnitFieldNumber = 3;
    private global::IWA.TTF.Taxonomy.Model.Artifact.TokenUnit tokenUnit_ = global::IWA.TTF.Taxonomy.Model.Artifact.TokenUnit.Fractional;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::IWA.TTF.Taxonomy.Model.Artifact.TokenUnit TokenUnit {
      get { return tokenUnit_; }
      set {
        tokenUnit_ = value;
      }
    }

    /// <summary>Field number for the "representation_type" field.</summary>
    public const int RepresentationTypeFieldNumber = 4;
    private global::IWA.TTF.Taxonomy.Model.Artifact.RepresentationType representationType_ = global::IWA.TTF.Taxonomy.Model.Artifact.RepresentationType.Common;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::IWA.TTF.Taxonomy.Model.Artifact.RepresentationType RepresentationType {
      get { return representationType_; }
      set {
        representationType_ = value;
      }
    }

    /// <summary>Field number for the "value_type" field.</summary>
    public const int ValueTypeFieldNumber = 5;
    private global::IWA.TTF.Taxonomy.Model.Artifact.ValueType valueType_ = global::IWA.TTF.Taxonomy.Model.Artifact.ValueType.Intrinsic;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::IWA.TTF.Taxonomy.Model.Artifact.ValueType ValueType {
      get { return valueType_; }
      set {
        valueType_ = value;
      }
    }

    /// <summary>Field number for the "supply" field.</summary>
    public const int SupplyFieldNumber = 6;
    private global::IWA.TTF.Taxonomy.Model.Artifact.Supply supply_ = global::IWA.TTF.Taxonomy.Model.Artifact.Supply.Fixed;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::IWA.TTF.Taxonomy.Model.Artifact.Supply Supply {
      get { return supply_; }
      set {
        supply_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Classification);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Classification other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TemplateType != other.TemplateType) return false;
      if (TokenType != other.TokenType) return false;
      if (TokenUnit != other.TokenUnit) return false;
      if (RepresentationType != other.RepresentationType) return false;
      if (ValueType != other.ValueType) return false;
      if (Supply != other.Supply) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TemplateType != global::IWA.TTF.Taxonomy.Model.Artifact.TemplateType.SingleToken) hash ^= TemplateType.GetHashCode();
      if (TokenType != global::IWA.TTF.Taxonomy.Model.Artifact.TokenType.Fungible) hash ^= TokenType.GetHashCode();
      if (TokenUnit != global::IWA.TTF.Taxonomy.Model.Artifact.TokenUnit.Fractional) hash ^= TokenUnit.GetHashCode();
      if (RepresentationType != global::IWA.TTF.Taxonomy.Model.Artifact.RepresentationType.Common) hash ^= RepresentationType.GetHashCode();
      if (ValueType != global::IWA.TTF.Taxonomy.Model.Artifact.ValueType.Intrinsic) hash ^= ValueType.GetHashCode();
      if (Supply != global::IWA.TTF.Taxonomy.Model.Artifact.Supply.Fixed) hash ^= Supply.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (TemplateType != global::IWA.TTF.Taxonomy.Model.Artifact.TemplateType.SingleToken) {
        output.WriteRawTag(8);
        output.WriteEnum((int) TemplateType);
      }
      if (TokenType != global::IWA.TTF.Taxonomy.Model.Artifact.TokenType.Fungible) {
        output.WriteRawTag(16);
        output.WriteEnum((int) TokenType);
      }
      if (TokenUnit != global::IWA.TTF.Taxonomy.Model.Artifact.TokenUnit.Fractional) {
        output.WriteRawTag(24);
        output.WriteEnum((int) TokenUnit);
      }
      if (RepresentationType != global::IWA.TTF.Taxonomy.Model.Artifact.RepresentationType.Common) {
        output.WriteRawTag(32);
        output.WriteEnum((int) RepresentationType);
      }
      if (ValueType != global::IWA.TTF.Taxonomy.Model.Artifact.ValueType.Intrinsic) {
        output.WriteRawTag(40);
        output.WriteEnum((int) ValueType);
      }
      if (Supply != global::IWA.TTF.Taxonomy.Model.Artifact.Supply.Fixed) {
        output.WriteRawTag(48);
        output.WriteEnum((int) Supply);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (TemplateType != global::IWA.TTF.Taxonomy.Model.Artifact.TemplateType.SingleToken) {
        output.WriteRawTag(8);
        output.WriteEnum((int) TemplateType);
      }
      if (TokenType != global::IWA.TTF.Taxonomy.Model.Artifact.TokenType.Fungible) {
        output.WriteRawTag(16);
        output.WriteEnum((int) TokenType);
      }
      if (TokenUnit != global::IWA.TTF.Taxonomy.Model.Artifact.TokenUnit.Fractional) {
        output.WriteRawTag(24);
        output.WriteEnum((int) TokenUnit);
      }
      if (RepresentationType != global::IWA.TTF.Taxonomy.Model.Artifact.RepresentationType.Common) {
        output.WriteRawTag(32);
        output.WriteEnum((int) RepresentationType);
      }
      if (ValueType != global::IWA.TTF.Taxonomy.Model.Artifact.ValueType.Intrinsic) {
        output.WriteRawTag(40);
        output.WriteEnum((int) ValueType);
      }
      if (Supply != global::IWA.TTF.Taxonomy.Model.Artifact.Supply.Fixed) {
        output.WriteRawTag(48);
        output.WriteEnum((int) Supply);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TemplateType != global::IWA.TTF.Taxonomy.Model.Artifact.TemplateType.SingleToken) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) TemplateType);
      }
      if (TokenType != global::IWA.TTF.Taxonomy.Model.Artifact.TokenType.Fungible) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) TokenType);
      }
      if (TokenUnit != global::IWA.TTF.Taxonomy.Model.Artifact.TokenUnit.Fractional) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) TokenUnit);
      }
      if (RepresentationType != global::IWA.TTF.Taxonomy.Model.Artifact.RepresentationType.Common) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) RepresentationType);
      }
      if (ValueType != global::IWA.TTF.Taxonomy.Model.Artifact.ValueType.Intrinsic) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ValueType);
      }
      if (Supply != global::IWA.TTF.Taxonomy.Model.Artifact.Supply.Fixed) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Supply);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Classification other) {
      if (other == null) {
        return;
      }
      if (other.TemplateType != global::IWA.TTF.Taxonomy.Model.Artifact.TemplateType.SingleToken) {
        TemplateType = other.TemplateType;
      }
      if (other.TokenType != global::IWA.TTF.Taxonomy.Model.Artifact.TokenType.Fungible) {
        TokenType = other.TokenType;
      }
      if (other.TokenUnit != global::IWA.TTF.Taxonomy.Model.Artifact.TokenUnit.Fractional) {
        TokenUnit = other.TokenUnit;
      }
      if (other.RepresentationType != global::IWA.TTF.Taxonomy.Model.Artifact.RepresentationType.Common) {
        RepresentationType = other.RepresentationType;
      }
      if (other.ValueType != global::IWA.TTF.Taxonomy.Model.Artifact.ValueType.Intrinsic) {
        ValueType = other.ValueType;
      }
      if (other.Supply != global::IWA.TTF.Taxonomy.Model.Artifact.Supply.Fixed) {
        Supply = other.Supply;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TemplateType = (global::IWA.TTF.Taxonomy.Model.Artifact.TemplateType) input.ReadEnum();
            break;
          }
          case 16: {
            TokenType = (global::IWA.TTF.Taxonomy.Model.Artifact.TokenType) input.ReadEnum();
            break;
          }
          case 24: {
            TokenUnit = (global::IWA.TTF.Taxonomy.Model.Artifact.TokenUnit) input.ReadEnum();
            break;
          }
          case 32: {
            RepresentationType = (global::IWA.TTF.Taxonomy.Model.Artifact.RepresentationType) input.ReadEnum();
            break;
          }
          case 40: {
            ValueType = (global::IWA.TTF.Taxonomy.Model.Artifact.ValueType) input.ReadEnum();
            break;
          }
          case 48: {
            Supply = (global::IWA.TTF.Taxonomy.Model.Artifact.Supply) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            TemplateType = (global::IWA.TTF.Taxonomy.Model.Artifact.TemplateType) input.ReadEnum();
            break;
          }
          case 16: {
            TokenType = (global::IWA.TTF.Taxonomy.Model.Artifact.TokenType) input.ReadEnum();
            break;
          }
          case 24: {
            TokenUnit = (global::IWA.TTF.Taxonomy.Model.Artifact.TokenUnit) input.ReadEnum();
            break;
          }
          case 32: {
            RepresentationType = (global::IWA.TTF.Taxonomy.Model.Artifact.RepresentationType) input.ReadEnum();
            break;
          }
          case 40: {
            ValueType = (global::IWA.TTF.Taxonomy.Model.Artifact.ValueType) input.ReadEnum();
            break;
          }
          case 48: {
            Supply = (global::IWA.TTF.Taxonomy.Model.Artifact.Supply) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///Applied to each artifact
  /// </summary>
  public sealed partial class ArtifactSymbol : pb::IMessage<ArtifactSymbol>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ArtifactSymbol> _parser = new pb::MessageParser<ArtifactSymbol>(() => new ArtifactSymbol());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ArtifactSymbol> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ArtifactSymbol() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ArtifactSymbol(ArtifactSymbol other) : this() {
      id_ = other.id_;
      type_ = other.type_;
      visual_ = other.visual_;
      tooling_ = other.tooling_;
      version_ = other.version_;
      templateValidated_ = other.templateValidated_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ArtifactSymbol Clone() {
      return new ArtifactSymbol(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    /// <summary>
    ///Unique identifier GUID/UUID - should be generated when the artifact is created. Must be unique throughout the framework.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 2;
    private global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactType type_ = global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactType.Base;
    /// <summary>
    ///Artifact Type
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "visual" field.</summary>
    public const int VisualFieldNumber = 3;
    private string visual_ = "";
    /// <summary>
    ///Symbol for single artifact and formula for templates
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Visual {
      get { return visual_; }
      set {
        visual_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "tooling" field.</summary>
    public const int ToolingFieldNumber = 4;
    private string tooling_ = "";
    /// <summary>
    ///Symbol for single artifact and formula for templates
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Tooling {
      get { return tooling_; }
      set {
        tooling_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "version" field.</summary>
    public const int VersionFieldNumber = 5;
    private string version_ = "";
    /// <summary>
    ///For visualization, not guaranteed to be accurate.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Version {
      get { return version_; }
      set {
        version_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "template_validated" field.</summary>
    public const int TemplateValidatedFieldNumber = 6;
    private bool templateValidated_;
    /// <summary>
    ///For templates only
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool TemplateValidated {
      get { return templateValidated_; }
      set {
        templateValidated_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ArtifactSymbol);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ArtifactSymbol other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Type != other.Type) return false;
      if (Visual != other.Visual) return false;
      if (Tooling != other.Tooling) return false;
      if (Version != other.Version) return false;
      if (TemplateValidated != other.TemplateValidated) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Type != global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactType.Base) hash ^= Type.GetHashCode();
      if (Visual.Length != 0) hash ^= Visual.GetHashCode();
      if (Tooling.Length != 0) hash ^= Tooling.GetHashCode();
      if (Version.Length != 0) hash ^= Version.GetHashCode();
      if (TemplateValidated != false) hash ^= TemplateValidated.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Type != global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactType.Base) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Type);
      }
      if (Visual.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Visual);
      }
      if (Tooling.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Tooling);
      }
      if (Version.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Version);
      }
      if (TemplateValidated != false) {
        output.WriteRawTag(48);
        output.WriteBool(TemplateValidated);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Type != global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactType.Base) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Type);
      }
      if (Visual.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Visual);
      }
      if (Tooling.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Tooling);
      }
      if (Version.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Version);
      }
      if (TemplateValidated != false) {
        output.WriteRawTag(48);
        output.WriteBool(TemplateValidated);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Type != global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactType.Base) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (Visual.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Visual);
      }
      if (Tooling.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Tooling);
      }
      if (Version.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Version);
      }
      if (TemplateValidated != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ArtifactSymbol other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Type != global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactType.Base) {
        Type = other.Type;
      }
      if (other.Visual.Length != 0) {
        Visual = other.Visual;
      }
      if (other.Tooling.Length != 0) {
        Tooling = other.Tooling;
      }
      if (other.Version.Length != 0) {
        Version = other.Version;
      }
      if (other.TemplateValidated != false) {
        TemplateValidated = other.TemplateValidated;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 16: {
            Type = (global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactType) input.ReadEnum();
            break;
          }
          case 26: {
            Visual = input.ReadString();
            break;
          }
          case 34: {
            Tooling = input.ReadString();
            break;
          }
          case 42: {
            Version = input.ReadString();
            break;
          }
          case 48: {
            TemplateValidated = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 16: {
            Type = (global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactType) input.ReadEnum();
            break;
          }
          case 26: {
            Visual = input.ReadString();
            break;
          }
          case 34: {
            Tooling = input.ReadString();
            break;
          }
          case 42: {
            Version = input.ReadString();
            break;
          }
          case 48: {
            TemplateValidated = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///Contains artifact metadata structure
  /// </summary>
  public sealed partial class Artifact : pb::IMessage<Artifact>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Artifact> _parser = new pb::MessageParser<Artifact>(() => new Artifact());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Artifact> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Artifact() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Artifact(Artifact other) : this() {
      artifactSymbol_ = other.artifactSymbol_ != null ? other.artifactSymbol_.Clone() : null;
      name_ = other.name_;
      aliases_ = other.aliases_.Clone();
      artifactDefinition_ = other.artifactDefinition_ != null ? other.artifactDefinition_.Clone() : null;
      dependencies_ = other.dependencies_.Clone();
      incompatibleWithSymbols_ = other.incompatibleWithSymbols_.Clone();
      influencedBySymbols_ = other.influencedBySymbols_.Clone();
      controlUri_ = other.controlUri_;
      artifactFiles_ = other.artifactFiles_.Clone();
      maps_ = other.maps_ != null ? other.maps_.Clone() : null;
      contributors_ = other.contributors_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Artifact Clone() {
      return new Artifact(this);
    }

    /// <summary>Field number for the "artifact_symbol" field.</summary>
    public const int ArtifactSymbolFieldNumber = 1;
    private global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactSymbol artifactSymbol_;
    /// <summary>
    ///Contains the unique identifier for the artifact.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactSymbol ArtifactSymbol {
      get { return artifactSymbol_; }
      set {
        artifactSymbol_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    /// <summary>
    ///This is the display and folder name for the artifact
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "aliases" field.</summary>
    public const int AliasesFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_aliases_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> aliases_ = new pbc::RepeatedField<string>();
    /// <summary>
    ///List other names this artifact is know by in other industry contexts.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Aliases {
      get { return aliases_; }
    }

    /// <summary>Field number for the "artifact_definition" field.</summary>
    public const int ArtifactDefinitionFieldNumber = 4;
    private global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactDefinition artifactDefinition_;
    /// <summary>
    ///Descriptive meta data about the artifact
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactDefinition ArtifactDefinition {
      get { return artifactDefinition_; }
      set {
        artifactDefinition_ = value;
      }
    }

    /// <summary>Field number for the "dependencies" field.</summary>
    public const int DependenciesFieldNumber = 5;
    private static readonly pb::FieldCodec<global::IWA.TTF.Taxonomy.Model.Artifact.SymbolDependency> _repeated_dependencies_codec
        = pb::FieldCodec.ForMessage(42, global::IWA.TTF.Taxonomy.Model.Artifact.SymbolDependency.Parser);
    private readonly pbc::RepeatedField<global::IWA.TTF.Taxonomy.Model.Artifact.SymbolDependency> dependencies_ = new pbc::RepeatedField<global::IWA.TTF.Taxonomy.Model.Artifact.SymbolDependency>();
    /// <summary>
    ///Typically used for a BehaviorGroups or Behaviors that have a dependency on other artifacts.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::IWA.TTF.Taxonomy.Model.Artifact.SymbolDependency> Dependencies {
      get { return dependencies_; }
    }

    /// <summary>Field number for the "incompatible_with_symbols" field.</summary>
    public const int IncompatibleWithSymbolsFieldNumber = 6;
    private static readonly pb::FieldCodec<global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactSymbol> _repeated_incompatibleWithSymbols_codec
        = pb::FieldCodec.ForMessage(50, global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactSymbol.Parser);
    private readonly pbc::RepeatedField<global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactSymbol> incompatibleWithSymbols_ = new pbc::RepeatedField<global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactSymbol>();
    /// <summary>
    ///For behaviors that have opposites, or if the base token, behavior or property-sets with conflicts.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactSymbol> IncompatibleWithSymbols {
      get { return incompatibleWithSymbols_; }
    }

    /// <summary>Field number for the "influenced_by_symbols" field.</summary>
    public const int InfluencedBySymbolsFieldNumber = 7;
    private static readonly pb::FieldCodec<global::IWA.TTF.Taxonomy.Model.Artifact.SymbolInfluence> _repeated_influencedBySymbols_codec
        = pb::FieldCodec.ForMessage(58, global::IWA.TTF.Taxonomy.Model.Artifact.SymbolInfluence.Parser);
    private readonly pbc::RepeatedField<global::IWA.TTF.Taxonomy.Model.Artifact.SymbolInfluence> influencedBySymbols_ = new pbc::RepeatedField<global::IWA.TTF.Taxonomy.Model.Artifact.SymbolInfluence>();
    /// <summary>
    ///List know influences for behaviors that are primarly influence behaviors. Like Roles or Delegable.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::IWA.TTF.Taxonomy.Model.Artifact.SymbolInfluence> InfluencedBySymbols {
      get { return influencedBySymbols_; }
    }

    /// <summary>Field number for the "control_uri" field.</summary>
    public const int ControlUriFieldNumber = 8;
    private string controlUri_ = "";
    /// <summary>
    ///Optional source code uri used for codegen tools
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ControlUri {
      get { return controlUri_; }
      set {
        controlUri_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "artifact_files" field.</summary>
    public const int ArtifactFilesFieldNumber = 9;
    private static readonly pb::FieldCodec<global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactFile> _repeated_artifactFiles_codec
        = pb::FieldCodec.ForMessage(74, global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactFile.Parser);
    private readonly pbc::RepeatedField<global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactFile> artifactFiles_ = new pbc::RepeatedField<global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactFile>();
    /// <summary>
    ///Includes proto, markdown or other files located in the artifact version folder.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactFile> ArtifactFiles {
      get { return artifactFiles_; }
    }

    /// <summary>Field number for the "maps" field.</summary>
    public const int MapsFieldNumber = 10;
    private global::IWA.TTF.Taxonomy.Model.Artifact.Maps maps_;
    /// <summary>
    ///Can be overriden by ArtifactReferenceValues loop through the files and read them in as bytes to produce a complete artifact object model instance.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::IWA.TTF.Taxonomy.Model.Artifact.Maps Maps {
      get { return maps_; }
      set {
        maps_ = value;
      }
    }

    /// <summary>Field number for the "contributors" field.</summary>
    public const int ContributorsFieldNumber = 11;
    private static readonly pb::FieldCodec<global::IWA.TTF.Taxonomy.Model.Artifact.Contributor> _repeated_contributors_codec
        = pb::FieldCodec.ForMessage(90, global::IWA.TTF.Taxonomy.Model.Artifact.Contributor.Parser);
    private readonly pbc::RepeatedField<global::IWA.TTF.Taxonomy.Model.Artifact.Contributor> contributors_ = new pbc::RepeatedField<global::IWA.TTF.Taxonomy.Model.Artifact.Contributor>();
    /// <summary>
    ///List of contributors to the artifact.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::IWA.TTF.Taxonomy.Model.Artifact.Contributor> Contributors {
      get { return contributors_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Artifact);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Artifact other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ArtifactSymbol, other.ArtifactSymbol)) return false;
      if (Name != other.Name) return false;
      if(!aliases_.Equals(other.aliases_)) return false;
      if (!object.Equals(ArtifactDefinition, other.ArtifactDefinition)) return false;
      if(!dependencies_.Equals(other.dependencies_)) return false;
      if(!incompatibleWithSymbols_.Equals(other.incompatibleWithSymbols_)) return false;
      if(!influencedBySymbols_.Equals(other.influencedBySymbols_)) return false;
      if (ControlUri != other.ControlUri) return false;
      if(!artifactFiles_.Equals(other.artifactFiles_)) return false;
      if (!object.Equals(Maps, other.Maps)) return false;
      if(!contributors_.Equals(other.contributors_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (artifactSymbol_ != null) hash ^= ArtifactSymbol.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      hash ^= aliases_.GetHashCode();
      if (artifactDefinition_ != null) hash ^= ArtifactDefinition.GetHashCode();
      hash ^= dependencies_.GetHashCode();
      hash ^= incompatibleWithSymbols_.GetHashCode();
      hash ^= influencedBySymbols_.GetHashCode();
      if (ControlUri.Length != 0) hash ^= ControlUri.GetHashCode();
      hash ^= artifactFiles_.GetHashCode();
      if (maps_ != null) hash ^= Maps.GetHashCode();
      hash ^= contributors_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (artifactSymbol_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ArtifactSymbol);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      aliases_.WriteTo(output, _repeated_aliases_codec);
      if (artifactDefinition_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(ArtifactDefinition);
      }
      dependencies_.WriteTo(output, _repeated_dependencies_codec);
      incompatibleWithSymbols_.WriteTo(output, _repeated_incompatibleWithSymbols_codec);
      influencedBySymbols_.WriteTo(output, _repeated_influencedBySymbols_codec);
      if (ControlUri.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(ControlUri);
      }
      artifactFiles_.WriteTo(output, _repeated_artifactFiles_codec);
      if (maps_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(Maps);
      }
      contributors_.WriteTo(output, _repeated_contributors_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (artifactSymbol_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ArtifactSymbol);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      aliases_.WriteTo(ref output, _repeated_aliases_codec);
      if (artifactDefinition_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(ArtifactDefinition);
      }
      dependencies_.WriteTo(ref output, _repeated_dependencies_codec);
      incompatibleWithSymbols_.WriteTo(ref output, _repeated_incompatibleWithSymbols_codec);
      influencedBySymbols_.WriteTo(ref output, _repeated_influencedBySymbols_codec);
      if (ControlUri.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(ControlUri);
      }
      artifactFiles_.WriteTo(ref output, _repeated_artifactFiles_codec);
      if (maps_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(Maps);
      }
      contributors_.WriteTo(ref output, _repeated_contributors_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (artifactSymbol_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ArtifactSymbol);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      size += aliases_.CalculateSize(_repeated_aliases_codec);
      if (artifactDefinition_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ArtifactDefinition);
      }
      size += dependencies_.CalculateSize(_repeated_dependencies_codec);
      size += incompatibleWithSymbols_.CalculateSize(_repeated_incompatibleWithSymbols_codec);
      size += influencedBySymbols_.CalculateSize(_repeated_influencedBySymbols_codec);
      if (ControlUri.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ControlUri);
      }
      size += artifactFiles_.CalculateSize(_repeated_artifactFiles_codec);
      if (maps_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Maps);
      }
      size += contributors_.CalculateSize(_repeated_contributors_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Artifact other) {
      if (other == null) {
        return;
      }
      if (other.artifactSymbol_ != null) {
        if (artifactSymbol_ == null) {
          ArtifactSymbol = new global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactSymbol();
        }
        ArtifactSymbol.MergeFrom(other.ArtifactSymbol);
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      aliases_.Add(other.aliases_);
      if (other.artifactDefinition_ != null) {
        if (artifactDefinition_ == null) {
          ArtifactDefinition = new global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactDefinition();
        }
        ArtifactDefinition.MergeFrom(other.ArtifactDefinition);
      }
      dependencies_.Add(other.dependencies_);
      incompatibleWithSymbols_.Add(other.incompatibleWithSymbols_);
      influencedBySymbols_.Add(other.influencedBySymbols_);
      if (other.ControlUri.Length != 0) {
        ControlUri = other.ControlUri;
      }
      artifactFiles_.Add(other.artifactFiles_);
      if (other.maps_ != null) {
        if (maps_ == null) {
          Maps = new global::IWA.TTF.Taxonomy.Model.Artifact.Maps();
        }
        Maps.MergeFrom(other.Maps);
      }
      contributors_.Add(other.contributors_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (artifactSymbol_ == null) {
              ArtifactSymbol = new global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactSymbol();
            }
            input.ReadMessage(ArtifactSymbol);
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            aliases_.AddEntriesFrom(input, _repeated_aliases_codec);
            break;
          }
          case 34: {
            if (artifactDefinition_ == null) {
              ArtifactDefinition = new global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactDefinition();
            }
            input.ReadMessage(ArtifactDefinition);
            break;
          }
          case 42: {
            dependencies_.AddEntriesFrom(input, _repeated_dependencies_codec);
            break;
          }
          case 50: {
            incompatibleWithSymbols_.AddEntriesFrom(input, _repeated_incompatibleWithSymbols_codec);
            break;
          }
          case 58: {
            influencedBySymbols_.AddEntriesFrom(input, _repeated_influencedBySymbols_codec);
            break;
          }
          case 66: {
            ControlUri = input.ReadString();
            break;
          }
          case 74: {
            artifactFiles_.AddEntriesFrom(input, _repeated_artifactFiles_codec);
            break;
          }
          case 82: {
            if (maps_ == null) {
              Maps = new global::IWA.TTF.Taxonomy.Model.Artifact.Maps();
            }
            input.ReadMessage(Maps);
            break;
          }
          case 90: {
            contributors_.AddEntriesFrom(input, _repeated_contributors_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (artifactSymbol_ == null) {
              ArtifactSymbol = new global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactSymbol();
            }
            input.ReadMessage(ArtifactSymbol);
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            aliases_.AddEntriesFrom(ref input, _repeated_aliases_codec);
            break;
          }
          case 34: {
            if (artifactDefinition_ == null) {
              ArtifactDefinition = new global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactDefinition();
            }
            input.ReadMessage(ArtifactDefinition);
            break;
          }
          case 42: {
            dependencies_.AddEntriesFrom(ref input, _repeated_dependencies_codec);
            break;
          }
          case 50: {
            incompatibleWithSymbols_.AddEntriesFrom(ref input, _repeated_incompatibleWithSymbols_codec);
            break;
          }
          case 58: {
            influencedBySymbols_.AddEntriesFrom(ref input, _repeated_influencedBySymbols_codec);
            break;
          }
          case 66: {
            ControlUri = input.ReadString();
            break;
          }
          case 74: {
            artifactFiles_.AddEntriesFrom(ref input, _repeated_artifactFiles_codec);
            break;
          }
          case 82: {
            if (maps_ == null) {
              Maps = new global::IWA.TTF.Taxonomy.Model.Artifact.Maps();
            }
            input.ReadMessage(Maps);
            break;
          }
          case 90: {
            contributors_.AddEntriesFrom(ref input, _repeated_contributors_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///Reference or mapping metadata.
  /// </summary>
  public sealed partial class ArtifactReferenceValues : pb::IMessage<ArtifactReferenceValues>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ArtifactReferenceValues> _parser = new pb::MessageParser<ArtifactReferenceValues>(() => new ArtifactReferenceValues());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ArtifactReferenceValues> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ArtifactReferenceValues() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ArtifactReferenceValues(ArtifactReferenceValues other) : this() {
      controlUri_ = other.controlUri_;
      artifactFiles_ = other.artifactFiles_.Clone();
      maps_ = other.maps_ != null ? other.maps_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ArtifactReferenceValues Clone() {
      return new ArtifactReferenceValues(this);
    }

    /// <summary>Field number for the "control_uri" field.</summary>
    public const int ControlUriFieldNumber = 1;
    private string controlUri_ = "";
    /// <summary>
    ///can be a URL, DID, etc.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ControlUri {
      get { return controlUri_; }
      set {
        controlUri_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "artifact_files" field.</summary>
    public const int ArtifactFilesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactFile> _repeated_artifactFiles_codec
        = pb::FieldCodec.ForMessage(18, global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactFile.Parser);
    private readonly pbc::RepeatedField<global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactFile> artifactFiles_ = new pbc::RepeatedField<global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactFile>();
    /// <summary>
    ///Collection of files in the artifact's folder that can be looped through the files and read them in as bytes to produce a complete artifact object model instance.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactFile> ArtifactFiles {
      get { return artifactFiles_; }
    }

    /// <summary>Field number for the "maps" field.</summary>
    public const int MapsFieldNumber = 3;
    private global::IWA.TTF.Taxonomy.Model.Artifact.Maps maps_;
    /// <summary>
    ///For optional navigation.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::IWA.TTF.Taxonomy.Model.Artifact.Maps Maps {
      get { return maps_; }
      set {
        maps_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ArtifactReferenceValues);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ArtifactReferenceValues other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ControlUri != other.ControlUri) return false;
      if(!artifactFiles_.Equals(other.artifactFiles_)) return false;
      if (!object.Equals(Maps, other.Maps)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ControlUri.Length != 0) hash ^= ControlUri.GetHashCode();
      hash ^= artifactFiles_.GetHashCode();
      if (maps_ != null) hash ^= Maps.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ControlUri.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ControlUri);
      }
      artifactFiles_.WriteTo(output, _repeated_artifactFiles_codec);
      if (maps_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Maps);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ControlUri.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ControlUri);
      }
      artifactFiles_.WriteTo(ref output, _repeated_artifactFiles_codec);
      if (maps_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Maps);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ControlUri.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ControlUri);
      }
      size += artifactFiles_.CalculateSize(_repeated_artifactFiles_codec);
      if (maps_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Maps);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ArtifactReferenceValues other) {
      if (other == null) {
        return;
      }
      if (other.ControlUri.Length != 0) {
        ControlUri = other.ControlUri;
      }
      artifactFiles_.Add(other.artifactFiles_);
      if (other.maps_ != null) {
        if (maps_ == null) {
          Maps = new global::IWA.TTF.Taxonomy.Model.Artifact.Maps();
        }
        Maps.MergeFrom(other.Maps);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ControlUri = input.ReadString();
            break;
          }
          case 18: {
            artifactFiles_.AddEntriesFrom(input, _repeated_artifactFiles_codec);
            break;
          }
          case 26: {
            if (maps_ == null) {
              Maps = new global::IWA.TTF.Taxonomy.Model.Artifact.Maps();
            }
            input.ReadMessage(Maps);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ControlUri = input.ReadString();
            break;
          }
          case 18: {
            artifactFiles_.AddEntriesFrom(ref input, _repeated_artifactFiles_codec);
            break;
          }
          case 26: {
            if (maps_ == null) {
              Maps = new global::IWA.TTF.Taxonomy.Model.Artifact.Maps();
            }
            input.ReadMessage(Maps);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///A reference to another artifact, either TemplateBranch to TemplateBranch, or ArtifactInstance to Artifact.
  /// </summary>
  public sealed partial class ArtifactReference : pb::IMessage<ArtifactReference>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ArtifactReference> _parser = new pb::MessageParser<ArtifactReference>(() => new ArtifactReference());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ArtifactReference> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ArtifactReference() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ArtifactReference(ArtifactReference other) : this() {
      id_ = other.id_;
      type_ = other.type_;
      referenceNotes_ = other.referenceNotes_;
      values_ = other.values_ != null ? other.values_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ArtifactReference Clone() {
      return new ArtifactReference(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    /// <summary>
    ///This is to another Artifact's ArtifactSymbol.Id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 2;
    private global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactType type_ = global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactType.Base;
    /// <summary>
    ///ArtifactType
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "reference_notes" field.</summary>
    public const int ReferenceNotesFieldNumber = 3;
    private string referenceNotes_ = "";
    /// <summary>
    ///Notes about the reference.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ReferenceNotes {
      get { return referenceNotes_; }
      set {
        referenceNotes_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "values" field.</summary>
    public const int ValuesFieldNumber = 4;
    private global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactReferenceValues values_;
    /// <summary>
    ///Values for this reference
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactReferenceValues Values {
      get { return values_; }
      set {
        values_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ArtifactReference);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ArtifactReference other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Type != other.Type) return false;
      if (ReferenceNotes != other.ReferenceNotes) return false;
      if (!object.Equals(Values, other.Values)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Type != global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactType.Base) hash ^= Type.GetHashCode();
      if (ReferenceNotes.Length != 0) hash ^= ReferenceNotes.GetHashCode();
      if (values_ != null) hash ^= Values.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Type != global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactType.Base) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Type);
      }
      if (ReferenceNotes.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ReferenceNotes);
      }
      if (values_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Values);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Type != global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactType.Base) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Type);
      }
      if (ReferenceNotes.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ReferenceNotes);
      }
      if (values_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Values);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Type != global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactType.Base) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (ReferenceNotes.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ReferenceNotes);
      }
      if (values_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Values);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ArtifactReference other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Type != global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactType.Base) {
        Type = other.Type;
      }
      if (other.ReferenceNotes.Length != 0) {
        ReferenceNotes = other.ReferenceNotes;
      }
      if (other.values_ != null) {
        if (values_ == null) {
          Values = new global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactReferenceValues();
        }
        Values.MergeFrom(other.Values);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 16: {
            Type = (global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactType) input.ReadEnum();
            break;
          }
          case 26: {
            ReferenceNotes = input.ReadString();
            break;
          }
          case 34: {
            if (values_ == null) {
              Values = new global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactReferenceValues();
            }
            input.ReadMessage(Values);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 16: {
            Type = (global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactType) input.ReadEnum();
            break;
          }
          case 26: {
            ReferenceNotes = input.ReadString();
            break;
          }
          case 34: {
            if (values_ == null) {
              Values = new global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactReferenceValues();
            }
            input.ReadMessage(Values);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///Reference to influencing artifact
  /// </summary>
  public sealed partial class SymbolInfluence : pb::IMessage<SymbolInfluence>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SymbolInfluence> _parser = new pb::MessageParser<SymbolInfluence>(() => new SymbolInfluence());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SymbolInfluence> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SymbolInfluence() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SymbolInfluence(SymbolInfluence other) : this() {
      description_ = other.description_;
      symbol_ = other.symbol_ != null ? other.symbol_.Clone() : null;
      appliesTo_ = other.appliesTo_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SymbolInfluence Clone() {
      return new SymbolInfluence(this);
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 1;
    private string description_ = "";
    /// <summary>
    ///Describe how the symbol influences this artifact, like non-divisible or delegable.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "symbol" field.</summary>
    public const int SymbolFieldNumber = 2;
    private global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactSymbol symbol_;
    /// <summary>
    ///The ArtifactSymbol of the influencer.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactSymbol Symbol {
      get { return symbol_; }
      set {
        symbol_ = value;
      }
    }

    /// <summary>Field number for the "applies_to" field.</summary>
    public const int AppliesToFieldNumber = 3;
    private static readonly pb::FieldCodec<global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactSymbol> _repeated_appliesTo_codec
        = pb::FieldCodec.ForMessage(26, global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactSymbol.Parser);
    private readonly pbc::RepeatedField<global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactSymbol> appliesTo_ = new pbc::RepeatedField<global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactSymbol>();
    /// <summary>
    ///List of behaviors or property-sets that are influenced by this symbol.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactSymbol> AppliesTo {
      get { return appliesTo_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SymbolInfluence);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SymbolInfluence other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Description != other.Description) return false;
      if (!object.Equals(Symbol, other.Symbol)) return false;
      if(!appliesTo_.Equals(other.appliesTo_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (symbol_ != null) hash ^= Symbol.GetHashCode();
      hash ^= appliesTo_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Description.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Description);
      }
      if (symbol_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Symbol);
      }
      appliesTo_.WriteTo(output, _repeated_appliesTo_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Description.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Description);
      }
      if (symbol_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Symbol);
      }
      appliesTo_.WriteTo(ref output, _repeated_appliesTo_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (symbol_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Symbol);
      }
      size += appliesTo_.CalculateSize(_repeated_appliesTo_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SymbolInfluence other) {
      if (other == null) {
        return;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      if (other.symbol_ != null) {
        if (symbol_ == null) {
          Symbol = new global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactSymbol();
        }
        Symbol.MergeFrom(other.Symbol);
      }
      appliesTo_.Add(other.appliesTo_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Description = input.ReadString();
            break;
          }
          case 18: {
            if (symbol_ == null) {
              Symbol = new global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactSymbol();
            }
            input.ReadMessage(Symbol);
            break;
          }
          case 26: {
            appliesTo_.AddEntriesFrom(input, _repeated_appliesTo_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Description = input.ReadString();
            break;
          }
          case 18: {
            if (symbol_ == null) {
              Symbol = new global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactSymbol();
            }
            input.ReadMessage(Symbol);
            break;
          }
          case 26: {
            appliesTo_.AddEntriesFrom(ref input, _repeated_appliesTo_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///Artifact Contributor.
  /// </summary>
  public sealed partial class Contributor : pb::IMessage<Contributor>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Contributor> _parser = new pb::MessageParser<Contributor>(() => new Contributor());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Contributor> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Contributor() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Contributor(Contributor other) : this() {
      name_ = other.name_;
      organization_ = other.organization_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Contributor Clone() {
      return new Contributor(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    ///Person's name
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "organization" field.</summary>
    public const int OrganizationFieldNumber = 2;
    private string organization_ = "";
    /// <summary>
    ///Member organization
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Organization {
      get { return organization_; }
      set {
        organization_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Contributor);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Contributor other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Organization != other.Organization) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Organization.Length != 0) hash ^= Organization.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Organization.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Organization);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Organization.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Organization);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Organization.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Organization);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Contributor other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Organization.Length != 0) {
        Organization = other.Organization;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Organization = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Organization = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///An artifact may have a dependency, if listed it will be validated and included in compositions.
  /// </summary>
  public sealed partial class SymbolDependency : pb::IMessage<SymbolDependency>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SymbolDependency> _parser = new pb::MessageParser<SymbolDependency>(() => new SymbolDependency());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SymbolDependency> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SymbolDependency() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SymbolDependency(SymbolDependency other) : this() {
      description_ = other.description_;
      symbol_ = other.symbol_ != null ? other.symbol_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SymbolDependency Clone() {
      return new SymbolDependency(this);
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 1;
    private string description_ = "";
    /// <summary>
    ///Describe how the symbol influences this artifact, like non-divisible or delegable.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "symbol" field.</summary>
    public const int SymbolFieldNumber = 2;
    private global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactSymbol symbol_;
    /// <summary>
    ///Symbol of the dependency.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactSymbol Symbol {
      get { return symbol_; }
      set {
        symbol_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SymbolDependency);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SymbolDependency other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Description != other.Description) return false;
      if (!object.Equals(Symbol, other.Symbol)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (symbol_ != null) hash ^= Symbol.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Description.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Description);
      }
      if (symbol_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Symbol);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Description.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Description);
      }
      if (symbol_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Symbol);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (symbol_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Symbol);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SymbolDependency other) {
      if (other == null) {
        return;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      if (other.symbol_ != null) {
        if (symbol_ == null) {
          Symbol = new global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactSymbol();
        }
        Symbol.MergeFrom(other.Symbol);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Description = input.ReadString();
            break;
          }
          case 18: {
            if (symbol_ == null) {
              Symbol = new global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactSymbol();
            }
            input.ReadMessage(Symbol);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Description = input.ReadString();
            break;
          }
          case 18: {
            if (symbol_ == null) {
              Symbol = new global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactSymbol();
            }
            input.ReadMessage(Symbol);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///The definition should contain non-technical descriptions of the artifact.
  /// </summary>
  public sealed partial class ArtifactDefinition : pb::IMessage<ArtifactDefinition>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ArtifactDefinition> _parser = new pb::MessageParser<ArtifactDefinition>(() => new ArtifactDefinition());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ArtifactDefinition> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ArtifactDefinition() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ArtifactDefinition(ArtifactDefinition other) : this() {
      businessDescription_ = other.businessDescription_;
      businessExample_ = other.businessExample_;
      analogies_ = other.analogies_.Clone();
      comments_ = other.comments_;
      artifact_ = other.artifact_ != null ? other.artifact_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ArtifactDefinition Clone() {
      return new ArtifactDefinition(this);
    }

    /// <summary>Field number for the "business_description" field.</summary>
    public const int BusinessDescriptionFieldNumber = 1;
    private string businessDescription_ = "";
    /// <summary>
    ///A description of the business use case.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BusinessDescription {
      get { return businessDescription_; }
      set {
        businessDescription_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "business_example" field.</summary>
    public const int BusinessExampleFieldNumber = 2;
    private string businessExample_ = "";
    /// <summary>
    ///Provide an existing real world example.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BusinessExample {
      get { return businessExample_; }
      set {
        businessExample_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "analogies" field.</summary>
    public const int AnalogiesFieldNumber = 3;
    private static readonly pb::FieldCodec<global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactAnalogy> _repeated_analogies_codec
        = pb::FieldCodec.ForMessage(26, global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactAnalogy.Parser);
    private readonly pbc::RepeatedField<global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactAnalogy> analogies_ = new pbc::RepeatedField<global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactAnalogy>();
    /// <summary>
    ///Provide analogies to add to the understanding of the artifact.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactAnalogy> Analogies {
      get { return analogies_; }
    }

    /// <summary>Field number for the "comments" field.</summary>
    public const int CommentsFieldNumber = 4;
    private string comments_ = "";
    /// <summary>
    ///Should contain contextual information, debates or nuanced information.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Comments {
      get { return comments_; }
      set {
        comments_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "artifact" field.</summary>
    public const int ArtifactFieldNumber = 5;
    private global::IWA.TTF.Taxonomy.Model.Artifact.Artifact artifact_;
    /// <summary>
    ///Navigation to parent
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::IWA.TTF.Taxonomy.Model.Artifact.Artifact Artifact {
      get { return artifact_; }
      set {
        artifact_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ArtifactDefinition);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ArtifactDefinition other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BusinessDescription != other.BusinessDescription) return false;
      if (BusinessExample != other.BusinessExample) return false;
      if(!analogies_.Equals(other.analogies_)) return false;
      if (Comments != other.Comments) return false;
      if (!object.Equals(Artifact, other.Artifact)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (BusinessDescription.Length != 0) hash ^= BusinessDescription.GetHashCode();
      if (BusinessExample.Length != 0) hash ^= BusinessExample.GetHashCode();
      hash ^= analogies_.GetHashCode();
      if (Comments.Length != 0) hash ^= Comments.GetHashCode();
      if (artifact_ != null) hash ^= Artifact.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (BusinessDescription.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(BusinessDescription);
      }
      if (BusinessExample.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(BusinessExample);
      }
      analogies_.WriteTo(output, _repeated_analogies_codec);
      if (Comments.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Comments);
      }
      if (artifact_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Artifact);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (BusinessDescription.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(BusinessDescription);
      }
      if (BusinessExample.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(BusinessExample);
      }
      analogies_.WriteTo(ref output, _repeated_analogies_codec);
      if (Comments.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Comments);
      }
      if (artifact_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Artifact);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (BusinessDescription.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BusinessDescription);
      }
      if (BusinessExample.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BusinessExample);
      }
      size += analogies_.CalculateSize(_repeated_analogies_codec);
      if (Comments.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Comments);
      }
      if (artifact_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Artifact);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ArtifactDefinition other) {
      if (other == null) {
        return;
      }
      if (other.BusinessDescription.Length != 0) {
        BusinessDescription = other.BusinessDescription;
      }
      if (other.BusinessExample.Length != 0) {
        BusinessExample = other.BusinessExample;
      }
      analogies_.Add(other.analogies_);
      if (other.Comments.Length != 0) {
        Comments = other.Comments;
      }
      if (other.artifact_ != null) {
        if (artifact_ == null) {
          Artifact = new global::IWA.TTF.Taxonomy.Model.Artifact.Artifact();
        }
        Artifact.MergeFrom(other.Artifact);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            BusinessDescription = input.ReadString();
            break;
          }
          case 18: {
            BusinessExample = input.ReadString();
            break;
          }
          case 26: {
            analogies_.AddEntriesFrom(input, _repeated_analogies_codec);
            break;
          }
          case 34: {
            Comments = input.ReadString();
            break;
          }
          case 42: {
            if (artifact_ == null) {
              Artifact = new global::IWA.TTF.Taxonomy.Model.Artifact.Artifact();
            }
            input.ReadMessage(Artifact);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            BusinessDescription = input.ReadString();
            break;
          }
          case 18: {
            BusinessExample = input.ReadString();
            break;
          }
          case 26: {
            analogies_.AddEntriesFrom(ref input, _repeated_analogies_codec);
            break;
          }
          case 34: {
            Comments = input.ReadString();
            break;
          }
          case 42: {
            if (artifact_ == null) {
              Artifact = new global::IWA.TTF.Taxonomy.Model.Artifact.Artifact();
            }
            input.ReadMessage(Artifact);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///An analogy outside of blockchains and tokens of this artifact.
  /// </summary>
  public sealed partial class ArtifactAnalogy : pb::IMessage<ArtifactAnalogy>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ArtifactAnalogy> _parser = new pb::MessageParser<ArtifactAnalogy>(() => new ArtifactAnalogy());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ArtifactAnalogy> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ArtifactAnalogy() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ArtifactAnalogy(ArtifactAnalogy other) : this() {
      name_ = other.name_;
      description_ = other.description_;
      artifactDefinition_ = other.artifactDefinition_ != null ? other.artifactDefinition_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ArtifactAnalogy Clone() {
      return new ArtifactAnalogy(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    ///Analogy name
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 2;
    private string description_ = "";
    /// <summary>
    ///Descrive scenarios, etc.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "artifact_definition" field.</summary>
    public const int ArtifactDefinitionFieldNumber = 3;
    private global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactDefinition artifactDefinition_;
    /// <summary>
    ///Navigation to parent
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactDefinition ArtifactDefinition {
      get { return artifactDefinition_; }
      set {
        artifactDefinition_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ArtifactAnalogy);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ArtifactAnalogy other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Description != other.Description) return false;
      if (!object.Equals(ArtifactDefinition, other.ArtifactDefinition)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (artifactDefinition_ != null) hash ^= ArtifactDefinition.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Description);
      }
      if (artifactDefinition_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(ArtifactDefinition);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Description);
      }
      if (artifactDefinition_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(ArtifactDefinition);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (artifactDefinition_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ArtifactDefinition);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ArtifactAnalogy other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      if (other.artifactDefinition_ != null) {
        if (artifactDefinition_ == null) {
          ArtifactDefinition = new global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactDefinition();
        }
        ArtifactDefinition.MergeFrom(other.ArtifactDefinition);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Description = input.ReadString();
            break;
          }
          case 26: {
            if (artifactDefinition_ == null) {
              ArtifactDefinition = new global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactDefinition();
            }
            input.ReadMessage(ArtifactDefinition);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Description = input.ReadString();
            break;
          }
          case 26: {
            if (artifactDefinition_ == null) {
              ArtifactDefinition = new global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactDefinition();
            }
            input.ReadMessage(ArtifactDefinition);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///Artifact Files are files other than the serialized json that can include protos, markdown, etc.
  /// </summary>
  public sealed partial class ArtifactFile : pb::IMessage<ArtifactFile>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ArtifactFile> _parser = new pb::MessageParser<ArtifactFile>(() => new ArtifactFile());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ArtifactFile> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ArtifactFile() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ArtifactFile(ArtifactFile other) : this() {
      content_ = other.content_;
      fileName_ = other.fileName_;
      fileData_ = other.fileData_;
      artifact_ = other.artifact_ != null ? other.artifact_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ArtifactFile Clone() {
      return new ArtifactFile(this);
    }

    /// <summary>Field number for the "content" field.</summary>
    public const int ContentFieldNumber = 1;
    private global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactContent content_ = global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactContent.Definition;
    /// <summary>
    ///Type of content in the file.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactContent Content {
      get { return content_; }
      set {
        content_ = value;
      }
    }

    /// <summary>Field number for the "file_name" field.</summary>
    public const int FileNameFieldNumber = 2;
    private string fileName_ = "";
    /// <summary>
    ///File name
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FileName {
      get { return fileName_; }
      set {
        fileName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "file_data" field.</summary>
    public const int FileDataFieldNumber = 3;
    private pb::ByteString fileData_ = pb::ByteString.Empty;
    /// <summary>
    ///An optional byte array of the file contents.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString FileData {
      get { return fileData_; }
      set {
        fileData_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "artifact" field.</summary>
    public const int ArtifactFieldNumber = 4;
    private global::IWA.TTF.Taxonomy.Model.Artifact.Artifact artifact_;
    /// <summary>
    ///Navigation to parent
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::IWA.TTF.Taxonomy.Model.Artifact.Artifact Artifact {
      get { return artifact_; }
      set {
        artifact_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ArtifactFile);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ArtifactFile other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Content != other.Content) return false;
      if (FileName != other.FileName) return false;
      if (FileData != other.FileData) return false;
      if (!object.Equals(Artifact, other.Artifact)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Content != global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactContent.Definition) hash ^= Content.GetHashCode();
      if (FileName.Length != 0) hash ^= FileName.GetHashCode();
      if (FileData.Length != 0) hash ^= FileData.GetHashCode();
      if (artifact_ != null) hash ^= Artifact.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Content != global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactContent.Definition) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Content);
      }
      if (FileName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(FileName);
      }
      if (FileData.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(FileData);
      }
      if (artifact_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Artifact);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Content != global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactContent.Definition) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Content);
      }
      if (FileName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(FileName);
      }
      if (FileData.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(FileData);
      }
      if (artifact_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Artifact);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Content != global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactContent.Definition) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Content);
      }
      if (FileName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FileName);
      }
      if (FileData.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(FileData);
      }
      if (artifact_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Artifact);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ArtifactFile other) {
      if (other == null) {
        return;
      }
      if (other.Content != global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactContent.Definition) {
        Content = other.Content;
      }
      if (other.FileName.Length != 0) {
        FileName = other.FileName;
      }
      if (other.FileData.Length != 0) {
        FileData = other.FileData;
      }
      if (other.artifact_ != null) {
        if (artifact_ == null) {
          Artifact = new global::IWA.TTF.Taxonomy.Model.Artifact.Artifact();
        }
        Artifact.MergeFrom(other.Artifact);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Content = (global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactContent) input.ReadEnum();
            break;
          }
          case 18: {
            FileName = input.ReadString();
            break;
          }
          case 26: {
            FileData = input.ReadBytes();
            break;
          }
          case 34: {
            if (artifact_ == null) {
              Artifact = new global::IWA.TTF.Taxonomy.Model.Artifact.Artifact();
            }
            input.ReadMessage(Artifact);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Content = (global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactContent) input.ReadEnum();
            break;
          }
          case 18: {
            FileName = input.ReadString();
            break;
          }
          case 26: {
            FileData = input.ReadBytes();
            break;
          }
          case 34: {
            if (artifact_ == null) {
              Artifact = new global::IWA.TTF.Taxonomy.Model.Artifact.Artifact();
            }
            input.ReadMessage(Artifact);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///Maps are references for an artifact.
  /// </summary>
  public sealed partial class Maps : pb::IMessage<Maps>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Maps> _parser = new pb::MessageParser<Maps>(() => new Maps());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Maps> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Maps() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Maps(Maps other) : this() {
      codeReferences_ = other.codeReferences_.Clone();
      implementationReferences_ = other.implementationReferences_.Clone();
      resources_ = other.resources_.Clone();
      artifact_ = other.artifact_ != null ? other.artifact_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Maps Clone() {
      return new Maps(this);
    }

    /// <summary>Field number for the "code_references" field.</summary>
    public const int CodeReferencesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::IWA.TTF.Taxonomy.Model.Artifact.MapReference> _repeated_codeReferences_codec
        = pb::FieldCodec.ForMessage(10, global::IWA.TTF.Taxonomy.Model.Artifact.MapReference.Parser);
    private readonly pbc::RepeatedField<global::IWA.TTF.Taxonomy.Model.Artifact.MapReference> codeReferences_ = new pbc::RepeatedField<global::IWA.TTF.Taxonomy.Model.Artifact.MapReference>();
    /// <summary>
    ///References to code.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::IWA.TTF.Taxonomy.Model.Artifact.MapReference> CodeReferences {
      get { return codeReferences_; }
    }

    /// <summary>Field number for the "implementation_references" field.</summary>
    public const int ImplementationReferencesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::IWA.TTF.Taxonomy.Model.Artifact.MapReference> _repeated_implementationReferences_codec
        = pb::FieldCodec.ForMessage(18, global::IWA.TTF.Taxonomy.Model.Artifact.MapReference.Parser);
    private readonly pbc::RepeatedField<global::IWA.TTF.Taxonomy.Model.Artifact.MapReference> implementationReferences_ = new pbc::RepeatedField<global::IWA.TTF.Taxonomy.Model.Artifact.MapReference>();
    /// <summary>
    ///References to implementations or solutions.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::IWA.TTF.Taxonomy.Model.Artifact.MapReference> ImplementationReferences {
      get { return implementationReferences_; }
    }

    /// <summary>Field number for the "resources" field.</summary>
    public const int ResourcesFieldNumber = 3;
    private static readonly pb::FieldCodec<global::IWA.TTF.Taxonomy.Model.Artifact.MapResourceReference> _repeated_resources_codec
        = pb::FieldCodec.ForMessage(26, global::IWA.TTF.Taxonomy.Model.Artifact.MapResourceReference.Parser);
    private readonly pbc::RepeatedField<global::IWA.TTF.Taxonomy.Model.Artifact.MapResourceReference> resources_ = new pbc::RepeatedField<global::IWA.TTF.Taxonomy.Model.Artifact.MapResourceReference>();
    /// <summary>
    ///Reference to external frameworks, legal guidance, etc.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::IWA.TTF.Taxonomy.Model.Artifact.MapResourceReference> Resources {
      get { return resources_; }
    }

    /// <summary>Field number for the "artifact" field.</summary>
    public const int ArtifactFieldNumber = 4;
    private global::IWA.TTF.Taxonomy.Model.Artifact.Artifact artifact_;
    /// <summary>
    ///Navigation to parent
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::IWA.TTF.Taxonomy.Model.Artifact.Artifact Artifact {
      get { return artifact_; }
      set {
        artifact_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Maps);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Maps other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!codeReferences_.Equals(other.codeReferences_)) return false;
      if(!implementationReferences_.Equals(other.implementationReferences_)) return false;
      if(!resources_.Equals(other.resources_)) return false;
      if (!object.Equals(Artifact, other.Artifact)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= codeReferences_.GetHashCode();
      hash ^= implementationReferences_.GetHashCode();
      hash ^= resources_.GetHashCode();
      if (artifact_ != null) hash ^= Artifact.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      codeReferences_.WriteTo(output, _repeated_codeReferences_codec);
      implementationReferences_.WriteTo(output, _repeated_implementationReferences_codec);
      resources_.WriteTo(output, _repeated_resources_codec);
      if (artifact_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Artifact);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      codeReferences_.WriteTo(ref output, _repeated_codeReferences_codec);
      implementationReferences_.WriteTo(ref output, _repeated_implementationReferences_codec);
      resources_.WriteTo(ref output, _repeated_resources_codec);
      if (artifact_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Artifact);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += codeReferences_.CalculateSize(_repeated_codeReferences_codec);
      size += implementationReferences_.CalculateSize(_repeated_implementationReferences_codec);
      size += resources_.CalculateSize(_repeated_resources_codec);
      if (artifact_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Artifact);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Maps other) {
      if (other == null) {
        return;
      }
      codeReferences_.Add(other.codeReferences_);
      implementationReferences_.Add(other.implementationReferences_);
      resources_.Add(other.resources_);
      if (other.artifact_ != null) {
        if (artifact_ == null) {
          Artifact = new global::IWA.TTF.Taxonomy.Model.Artifact.Artifact();
        }
        Artifact.MergeFrom(other.Artifact);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            codeReferences_.AddEntriesFrom(input, _repeated_codeReferences_codec);
            break;
          }
          case 18: {
            implementationReferences_.AddEntriesFrom(input, _repeated_implementationReferences_codec);
            break;
          }
          case 26: {
            resources_.AddEntriesFrom(input, _repeated_resources_codec);
            break;
          }
          case 34: {
            if (artifact_ == null) {
              Artifact = new global::IWA.TTF.Taxonomy.Model.Artifact.Artifact();
            }
            input.ReadMessage(Artifact);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            codeReferences_.AddEntriesFrom(ref input, _repeated_codeReferences_codec);
            break;
          }
          case 18: {
            implementationReferences_.AddEntriesFrom(ref input, _repeated_implementationReferences_codec);
            break;
          }
          case 26: {
            resources_.AddEntriesFrom(ref input, _repeated_resources_codec);
            break;
          }
          case 34: {
            if (artifact_ == null) {
              Artifact = new global::IWA.TTF.Taxonomy.Model.Artifact.Artifact();
            }
            input.ReadMessage(Artifact);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///Data for a Mapping
  /// </summary>
  public sealed partial class MapReference : pb::IMessage<MapReference>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MapReference> _parser = new pb::MessageParser<MapReference>(() => new MapReference());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MapReference> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MapReference() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MapReference(MapReference other) : this() {
      mappingType_ = other.mappingType_;
      name_ = other.name_;
      platform_ = other.platform_;
      referencePath_ = other.referencePath_;
      maps_ = other.maps_ != null ? other.maps_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MapReference Clone() {
      return new MapReference(this);
    }

    /// <summary>Field number for the "mapping_type" field.</summary>
    public const int MappingTypeFieldNumber = 1;
    private global::IWA.TTF.Taxonomy.Model.Artifact.MappingType mappingType_ = global::IWA.TTF.Taxonomy.Model.Artifact.MappingType.SourceCode;
    /// <summary>
    ///Mapping Type
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::IWA.TTF.Taxonomy.Model.Artifact.MappingType MappingType {
      get { return mappingType_; }
      set {
        mappingType_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    /// <summary>
    ///Name of the mapping, can include a description.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "platform" field.</summary>
    public const int PlatformFieldNumber = 3;
    private global::IWA.TTF.Taxonomy.Model.Artifact.TargetPlatform platform_ = global::IWA.TTF.Taxonomy.Model.Artifact.TargetPlatform.EthereumSolidity;
    /// <summary>
    ///Targeted Platform
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::IWA.TTF.Taxonomy.Model.Artifact.TargetPlatform Platform {
      get { return platform_; }
      set {
        platform_ = value;
      }
    }

    /// <summary>Field number for the "reference_path" field.</summary>
    public const int ReferencePathFieldNumber = 4;
    private string referencePath_ = "";
    /// <summary>
    ///Path, URL, DiD, etc.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ReferencePath {
      get { return referencePath_; }
      set {
        referencePath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "maps" field.</summary>
    public const int MapsFieldNumber = 5;
    private global::IWA.TTF.Taxonomy.Model.Artifact.Maps maps_;
    /// <summary>
    ///Navigation to parent
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::IWA.TTF.Taxonomy.Model.Artifact.Maps Maps {
      get { return maps_; }
      set {
        maps_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MapReference);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MapReference other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MappingType != other.MappingType) return false;
      if (Name != other.Name) return false;
      if (Platform != other.Platform) return false;
      if (ReferencePath != other.ReferencePath) return false;
      if (!object.Equals(Maps, other.Maps)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MappingType != global::IWA.TTF.Taxonomy.Model.Artifact.MappingType.SourceCode) hash ^= MappingType.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Platform != global::IWA.TTF.Taxonomy.Model.Artifact.TargetPlatform.EthereumSolidity) hash ^= Platform.GetHashCode();
      if (ReferencePath.Length != 0) hash ^= ReferencePath.GetHashCode();
      if (maps_ != null) hash ^= Maps.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (MappingType != global::IWA.TTF.Taxonomy.Model.Artifact.MappingType.SourceCode) {
        output.WriteRawTag(8);
        output.WriteEnum((int) MappingType);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Platform != global::IWA.TTF.Taxonomy.Model.Artifact.TargetPlatform.EthereumSolidity) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Platform);
      }
      if (ReferencePath.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ReferencePath);
      }
      if (maps_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Maps);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (MappingType != global::IWA.TTF.Taxonomy.Model.Artifact.MappingType.SourceCode) {
        output.WriteRawTag(8);
        output.WriteEnum((int) MappingType);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Platform != global::IWA.TTF.Taxonomy.Model.Artifact.TargetPlatform.EthereumSolidity) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Platform);
      }
      if (ReferencePath.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ReferencePath);
      }
      if (maps_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Maps);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MappingType != global::IWA.TTF.Taxonomy.Model.Artifact.MappingType.SourceCode) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) MappingType);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Platform != global::IWA.TTF.Taxonomy.Model.Artifact.TargetPlatform.EthereumSolidity) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Platform);
      }
      if (ReferencePath.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ReferencePath);
      }
      if (maps_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Maps);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MapReference other) {
      if (other == null) {
        return;
      }
      if (other.MappingType != global::IWA.TTF.Taxonomy.Model.Artifact.MappingType.SourceCode) {
        MappingType = other.MappingType;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Platform != global::IWA.TTF.Taxonomy.Model.Artifact.TargetPlatform.EthereumSolidity) {
        Platform = other.Platform;
      }
      if (other.ReferencePath.Length != 0) {
        ReferencePath = other.ReferencePath;
      }
      if (other.maps_ != null) {
        if (maps_ == null) {
          Maps = new global::IWA.TTF.Taxonomy.Model.Artifact.Maps();
        }
        Maps.MergeFrom(other.Maps);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MappingType = (global::IWA.TTF.Taxonomy.Model.Artifact.MappingType) input.ReadEnum();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 24: {
            Platform = (global::IWA.TTF.Taxonomy.Model.Artifact.TargetPlatform) input.ReadEnum();
            break;
          }
          case 34: {
            ReferencePath = input.ReadString();
            break;
          }
          case 42: {
            if (maps_ == null) {
              Maps = new global::IWA.TTF.Taxonomy.Model.Artifact.Maps();
            }
            input.ReadMessage(Maps);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            MappingType = (global::IWA.TTF.Taxonomy.Model.Artifact.MappingType) input.ReadEnum();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 24: {
            Platform = (global::IWA.TTF.Taxonomy.Model.Artifact.TargetPlatform) input.ReadEnum();
            break;
          }
          case 34: {
            ReferencePath = input.ReadString();
            break;
          }
          case 42: {
            if (maps_ == null) {
              Maps = new global::IWA.TTF.Taxonomy.Model.Artifact.Maps();
            }
            input.ReadMessage(Maps);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///A reference to external an resource.
  /// </summary>
  public sealed partial class MapResourceReference : pb::IMessage<MapResourceReference>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MapResourceReference> _parser = new pb::MessageParser<MapResourceReference>(() => new MapResourceReference());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MapResourceReference> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MapResourceReference() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MapResourceReference(MapResourceReference other) : this() {
      mappingType_ = other.mappingType_;
      name_ = other.name_;
      description_ = other.description_;
      resourcePath_ = other.resourcePath_;
      maps_ = other.maps_ != null ? other.maps_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MapResourceReference Clone() {
      return new MapResourceReference(this);
    }

    /// <summary>Field number for the "mapping_type" field.</summary>
    public const int MappingTypeFieldNumber = 1;
    private global::IWA.TTF.Taxonomy.Model.Artifact.MappingType mappingType_ = global::IWA.TTF.Taxonomy.Model.Artifact.MappingType.SourceCode;
    /// <summary>
    ///Type of mapping
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::IWA.TTF.Taxonomy.Model.Artifact.MappingType MappingType {
      get { return mappingType_; }
      set {
        mappingType_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    /// <summary>
    ///Name of the reference.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 3;
    private string description_ = "";
    /// <summary>
    ///Description of the reference, can be helpful if there are many references.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "resource_path" field.</summary>
    public const int ResourcePathFieldNumber = 4;
    private string resourcePath_ = "";
    /// <summary>
    ///Path, URL, DiD, etc.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ResourcePath {
      get { return resourcePath_; }
      set {
        resourcePath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "maps" field.</summary>
    public const int MapsFieldNumber = 5;
    private global::IWA.TTF.Taxonomy.Model.Artifact.Maps maps_;
    /// <summary>
    ///Navigation to parent
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::IWA.TTF.Taxonomy.Model.Artifact.Maps Maps {
      get { return maps_; }
      set {
        maps_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MapResourceReference);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MapResourceReference other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MappingType != other.MappingType) return false;
      if (Name != other.Name) return false;
      if (Description != other.Description) return false;
      if (ResourcePath != other.ResourcePath) return false;
      if (!object.Equals(Maps, other.Maps)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MappingType != global::IWA.TTF.Taxonomy.Model.Artifact.MappingType.SourceCode) hash ^= MappingType.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (ResourcePath.Length != 0) hash ^= ResourcePath.GetHashCode();
      if (maps_ != null) hash ^= Maps.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (MappingType != global::IWA.TTF.Taxonomy.Model.Artifact.MappingType.SourceCode) {
        output.WriteRawTag(8);
        output.WriteEnum((int) MappingType);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Description);
      }
      if (ResourcePath.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ResourcePath);
      }
      if (maps_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Maps);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (MappingType != global::IWA.TTF.Taxonomy.Model.Artifact.MappingType.SourceCode) {
        output.WriteRawTag(8);
        output.WriteEnum((int) MappingType);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Description);
      }
      if (ResourcePath.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ResourcePath);
      }
      if (maps_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Maps);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MappingType != global::IWA.TTF.Taxonomy.Model.Artifact.MappingType.SourceCode) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) MappingType);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (ResourcePath.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ResourcePath);
      }
      if (maps_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Maps);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MapResourceReference other) {
      if (other == null) {
        return;
      }
      if (other.MappingType != global::IWA.TTF.Taxonomy.Model.Artifact.MappingType.SourceCode) {
        MappingType = other.MappingType;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      if (other.ResourcePath.Length != 0) {
        ResourcePath = other.ResourcePath;
      }
      if (other.maps_ != null) {
        if (maps_ == null) {
          Maps = new global::IWA.TTF.Taxonomy.Model.Artifact.Maps();
        }
        Maps.MergeFrom(other.Maps);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MappingType = (global::IWA.TTF.Taxonomy.Model.Artifact.MappingType) input.ReadEnum();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            Description = input.ReadString();
            break;
          }
          case 34: {
            ResourcePath = input.ReadString();
            break;
          }
          case 42: {
            if (maps_ == null) {
              Maps = new global::IWA.TTF.Taxonomy.Model.Artifact.Maps();
            }
            input.ReadMessage(Maps);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            MappingType = (global::IWA.TTF.Taxonomy.Model.Artifact.MappingType) input.ReadEnum();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            Description = input.ReadString();
            break;
          }
          case 34: {
            ResourcePath = input.ReadString();
            break;
          }
          case 42: {
            if (maps_ == null) {
              Maps = new global::IWA.TTF.Taxonomy.Model.Artifact.Maps();
            }
            input.ReadMessage(Maps);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///These is a command message that is used to communicate with the Taxonomy Service to submit a newly created object to be persisted.
  /// </summary>
  public sealed partial class NewArtifactRequest : pb::IMessage<NewArtifactRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<NewArtifactRequest> _parser = new pb::MessageParser<NewArtifactRequest>(() => new NewArtifactRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NewArtifactRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NewArtifactRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NewArtifactRequest(NewArtifactRequest other) : this() {
      type_ = other.type_;
      artifact_ = other.artifact_ != null ? other.artifact_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NewArtifactRequest Clone() {
      return new NewArtifactRequest(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactType type_ = global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactType.Base;
    /// <summary>
    ///ArtifactType contained in the artifact property.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "artifact" field.</summary>
    public const int ArtifactFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Any artifact_;
    /// <summary>
    ///An Any Packed artifact that will be Unpacked as the ArtifactType on the Service side.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Any Artifact {
      get { return artifact_; }
      set {
        artifact_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NewArtifactRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NewArtifactRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (!object.Equals(Artifact, other.Artifact)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactType.Base) hash ^= Type.GetHashCode();
      if (artifact_ != null) hash ^= Artifact.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Type != global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactType.Base) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (artifact_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Artifact);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Type != global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactType.Base) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (artifact_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Artifact);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactType.Base) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (artifact_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Artifact);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NewArtifactRequest other) {
      if (other == null) {
        return;
      }
      if (other.Type != global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactType.Base) {
        Type = other.Type;
      }
      if (other.artifact_ != null) {
        if (artifact_ == null) {
          Artifact = new global::Google.Protobuf.WellKnownTypes.Any();
        }
        Artifact.MergeFrom(other.Artifact);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = (global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactType) input.ReadEnum();
            break;
          }
          case 18: {
            if (artifact_ == null) {
              Artifact = new global::Google.Protobuf.WellKnownTypes.Any();
            }
            input.ReadMessage(Artifact);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Type = (global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactType) input.ReadEnum();
            break;
          }
          case 18: {
            if (artifact_ == null) {
              Artifact = new global::Google.Protobuf.WellKnownTypes.Any();
            }
            input.ReadMessage(Artifact);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///Expected Response from the NewArtifactRequest
  /// </summary>
  public sealed partial class NewArtifactResponse : pb::IMessage<NewArtifactResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<NewArtifactResponse> _parser = new pb::MessageParser<NewArtifactResponse>(() => new NewArtifactResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NewArtifactResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NewArtifactResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NewArtifactResponse(NewArtifactResponse other) : this() {
      type_ = other.type_;
      artifactTypeObject_ = other.artifactTypeObject_ != null ? other.artifactTypeObject_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NewArtifactResponse Clone() {
      return new NewArtifactResponse(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactType type_ = global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactType.Base;
    /// <summary>
    ///What ArtifactType is contained in the ArtifactTypeObject property.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "artifact_type_object" field.</summary>
    public const int ArtifactTypeObjectFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Any artifactTypeObject_;
    /// <summary>
    ///Unpack this based on ArtifactType
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Any ArtifactTypeObject {
      get { return artifactTypeObject_; }
      set {
        artifactTypeObject_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NewArtifactResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NewArtifactResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (!object.Equals(ArtifactTypeObject, other.ArtifactTypeObject)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactType.Base) hash ^= Type.GetHashCode();
      if (artifactTypeObject_ != null) hash ^= ArtifactTypeObject.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Type != global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactType.Base) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (artifactTypeObject_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ArtifactTypeObject);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Type != global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactType.Base) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (artifactTypeObject_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ArtifactTypeObject);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactType.Base) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (artifactTypeObject_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ArtifactTypeObject);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NewArtifactResponse other) {
      if (other == null) {
        return;
      }
      if (other.Type != global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactType.Base) {
        Type = other.Type;
      }
      if (other.artifactTypeObject_ != null) {
        if (artifactTypeObject_ == null) {
          ArtifactTypeObject = new global::Google.Protobuf.WellKnownTypes.Any();
        }
        ArtifactTypeObject.MergeFrom(other.ArtifactTypeObject);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = (global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactType) input.ReadEnum();
            break;
          }
          case 18: {
            if (artifactTypeObject_ == null) {
              ArtifactTypeObject = new global::Google.Protobuf.WellKnownTypes.Any();
            }
            input.ReadMessage(ArtifactTypeObject);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Type = (global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactType) input.ReadEnum();
            break;
          }
          case 18: {
            if (artifactTypeObject_ == null) {
              ArtifactTypeObject = new global::Google.Protobuf.WellKnownTypes.Any();
            }
            input.ReadMessage(ArtifactTypeObject);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///These is a command message that is used to communicate with the Taxonomy Service to submit an update to an existing object to be persisted.
  /// </summary>
  public sealed partial class UpdateArtifactRequest : pb::IMessage<UpdateArtifactRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UpdateArtifactRequest> _parser = new pb::MessageParser<UpdateArtifactRequest>(() => new UpdateArtifactRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateArtifactRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateArtifactRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateArtifactRequest(UpdateArtifactRequest other) : this() {
      type_ = other.type_;
      artifactTypeObject_ = other.artifactTypeObject_ != null ? other.artifactTypeObject_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateArtifactRequest Clone() {
      return new UpdateArtifactRequest(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactType type_ = global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactType.Base;
    /// <summary>
    ///The ArtifactType packed into the ArtifactTypeObject
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "artifact_type_object" field.</summary>
    public const int ArtifactTypeObjectFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Any artifactTypeObject_;
    /// <summary>
    ///Unpack from Any to this type.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Any ArtifactTypeObject {
      get { return artifactTypeObject_; }
      set {
        artifactTypeObject_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateArtifactRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateArtifactRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (!object.Equals(ArtifactTypeObject, other.ArtifactTypeObject)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactType.Base) hash ^= Type.GetHashCode();
      if (artifactTypeObject_ != null) hash ^= ArtifactTypeObject.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Type != global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactType.Base) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (artifactTypeObject_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ArtifactTypeObject);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Type != global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactType.Base) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (artifactTypeObject_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ArtifactTypeObject);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactType.Base) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (artifactTypeObject_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ArtifactTypeObject);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateArtifactRequest other) {
      if (other == null) {
        return;
      }
      if (other.Type != global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactType.Base) {
        Type = other.Type;
      }
      if (other.artifactTypeObject_ != null) {
        if (artifactTypeObject_ == null) {
          ArtifactTypeObject = new global::Google.Protobuf.WellKnownTypes.Any();
        }
        ArtifactTypeObject.MergeFrom(other.ArtifactTypeObject);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = (global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactType) input.ReadEnum();
            break;
          }
          case 18: {
            if (artifactTypeObject_ == null) {
              ArtifactTypeObject = new global::Google.Protobuf.WellKnownTypes.Any();
            }
            input.ReadMessage(ArtifactTypeObject);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Type = (global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactType) input.ReadEnum();
            break;
          }
          case 18: {
            if (artifactTypeObject_ == null) {
              ArtifactTypeObject = new global::Google.Protobuf.WellKnownTypes.Any();
            }
            input.ReadMessage(ArtifactTypeObject);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///Expected Response from the UpdateArtifactRequest
  /// </summary>
  public sealed partial class UpdateArtifactResponse : pb::IMessage<UpdateArtifactResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UpdateArtifactResponse> _parser = new pb::MessageParser<UpdateArtifactResponse>(() => new UpdateArtifactResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateArtifactResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateArtifactResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateArtifactResponse(UpdateArtifactResponse other) : this() {
      type_ = other.type_;
      updated_ = other.updated_;
      artifactTypeObject_ = other.artifactTypeObject_ != null ? other.artifactTypeObject_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateArtifactResponse Clone() {
      return new UpdateArtifactResponse(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactType type_ = global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactType.Base;
    /// <summary>
    ///The ArtifactType packed into the ArtifactTypeObject
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "updated" field.</summary>
    public const int UpdatedFieldNumber = 2;
    private bool updated_;
    /// <summary>
    ///Successfuly updated the artifact.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Updated {
      get { return updated_; }
      set {
        updated_ = value;
      }
    }

    /// <summary>Field number for the "artifact_type_object" field.</summary>
    public const int ArtifactTypeObjectFieldNumber = 3;
    private global::Google.Protobuf.WellKnownTypes.Any artifactTypeObject_;
    /// <summary>
    ///Unpack this based on ArtifactType
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Any ArtifactTypeObject {
      get { return artifactTypeObject_; }
      set {
        artifactTypeObject_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateArtifactResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateArtifactResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (Updated != other.Updated) return false;
      if (!object.Equals(ArtifactTypeObject, other.ArtifactTypeObject)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactType.Base) hash ^= Type.GetHashCode();
      if (Updated != false) hash ^= Updated.GetHashCode();
      if (artifactTypeObject_ != null) hash ^= ArtifactTypeObject.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Type != global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactType.Base) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (Updated != false) {
        output.WriteRawTag(16);
        output.WriteBool(Updated);
      }
      if (artifactTypeObject_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(ArtifactTypeObject);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Type != global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactType.Base) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (Updated != false) {
        output.WriteRawTag(16);
        output.WriteBool(Updated);
      }
      if (artifactTypeObject_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(ArtifactTypeObject);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactType.Base) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (Updated != false) {
        size += 1 + 1;
      }
      if (artifactTypeObject_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ArtifactTypeObject);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateArtifactResponse other) {
      if (other == null) {
        return;
      }
      if (other.Type != global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactType.Base) {
        Type = other.Type;
      }
      if (other.Updated != false) {
        Updated = other.Updated;
      }
      if (other.artifactTypeObject_ != null) {
        if (artifactTypeObject_ == null) {
          ArtifactTypeObject = new global::Google.Protobuf.WellKnownTypes.Any();
        }
        ArtifactTypeObject.MergeFrom(other.ArtifactTypeObject);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = (global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactType) input.ReadEnum();
            break;
          }
          case 16: {
            Updated = input.ReadBool();
            break;
          }
          case 26: {
            if (artifactTypeObject_ == null) {
              ArtifactTypeObject = new global::Google.Protobuf.WellKnownTypes.Any();
            }
            input.ReadMessage(ArtifactTypeObject);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Type = (global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactType) input.ReadEnum();
            break;
          }
          case 16: {
            Updated = input.ReadBool();
            break;
          }
          case 26: {
            if (artifactTypeObject_ == null) {
              ArtifactTypeObject = new global::Google.Protobuf.WellKnownTypes.Any();
            }
            input.ReadMessage(ArtifactTypeObject);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///Command to delete an artifact.
  /// </summary>
  public sealed partial class DeleteArtifactRequest : pb::IMessage<DeleteArtifactRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DeleteArtifactRequest> _parser = new pb::MessageParser<DeleteArtifactRequest>(() => new DeleteArtifactRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteArtifactRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteArtifactRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteArtifactRequest(DeleteArtifactRequest other) : this() {
      artifactSymbol_ = other.artifactSymbol_ != null ? other.artifactSymbol_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteArtifactRequest Clone() {
      return new DeleteArtifactRequest(this);
    }

    /// <summary>Field number for the "artifact_symbol" field.</summary>
    public const int ArtifactSymbolFieldNumber = 1;
    private global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactSymbol artifactSymbol_;
    /// <summary>
    ///Include the ArtifactSymbol.Id property value to indicate what artifact to delete.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactSymbol ArtifactSymbol {
      get { return artifactSymbol_; }
      set {
        artifactSymbol_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteArtifactRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteArtifactRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ArtifactSymbol, other.ArtifactSymbol)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (artifactSymbol_ != null) hash ^= ArtifactSymbol.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (artifactSymbol_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ArtifactSymbol);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (artifactSymbol_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ArtifactSymbol);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (artifactSymbol_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ArtifactSymbol);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteArtifactRequest other) {
      if (other == null) {
        return;
      }
      if (other.artifactSymbol_ != null) {
        if (artifactSymbol_ == null) {
          ArtifactSymbol = new global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactSymbol();
        }
        ArtifactSymbol.MergeFrom(other.ArtifactSymbol);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (artifactSymbol_ == null) {
              ArtifactSymbol = new global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactSymbol();
            }
            input.ReadMessage(ArtifactSymbol);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (artifactSymbol_ == null) {
              ArtifactSymbol = new global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactSymbol();
            }
            input.ReadMessage(ArtifactSymbol);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///Expected response from the DeleteArtifactRequest.
  /// </summary>
  public sealed partial class DeleteArtifactResponse : pb::IMessage<DeleteArtifactResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DeleteArtifactResponse> _parser = new pb::MessageParser<DeleteArtifactResponse>(() => new DeleteArtifactResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteArtifactResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteArtifactResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteArtifactResponse(DeleteArtifactResponse other) : this() {
      deleted_ = other.deleted_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteArtifactResponse Clone() {
      return new DeleteArtifactResponse(this);
    }

    /// <summary>Field number for the "deleted" field.</summary>
    public const int DeletedFieldNumber = 1;
    private bool deleted_;
    /// <summary>
    ///Successful deletion indicator.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Deleted {
      get { return deleted_; }
      set {
        deleted_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteArtifactResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteArtifactResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Deleted != other.Deleted) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Deleted != false) hash ^= Deleted.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Deleted != false) {
        output.WriteRawTag(8);
        output.WriteBool(Deleted);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Deleted != false) {
        output.WriteRawTag(8);
        output.WriteBool(Deleted);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Deleted != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteArtifactResponse other) {
      if (other == null) {
        return;
      }
      if (other.Deleted != false) {
        Deleted = other.Deleted;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Deleted = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Deleted = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///Used to query for a TemplateDefinition and to Build the TemplateSpecification
  /// </summary>
  public sealed partial class TokenTemplateId : pb::IMessage<TokenTemplateId>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TokenTemplateId> _parser = new pb::MessageParser<TokenTemplateId>(() => new TokenTemplateId());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TokenTemplateId> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TokenTemplateId() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TokenTemplateId(TokenTemplateId other) : this() {
      definitionId_ = other.definitionId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TokenTemplateId Clone() {
      return new TokenTemplateId(this);
    }

    /// <summary>Field number for the "definition_id" field.</summary>
    public const int DefinitionIdFieldNumber = 1;
    private string definitionId_ = "";
    /// <summary>
    ///TemplateDefinition.Artifact.ArtifactSymbol.Id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DefinitionId {
      get { return definitionId_; }
      set {
        definitionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TokenTemplateId);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TokenTemplateId other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DefinitionId != other.DefinitionId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (DefinitionId.Length != 0) hash ^= DefinitionId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (DefinitionId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(DefinitionId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (DefinitionId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(DefinitionId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (DefinitionId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DefinitionId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TokenTemplateId other) {
      if (other == null) {
        return;
      }
      if (other.DefinitionId.Length != 0) {
        DefinitionId = other.DefinitionId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            DefinitionId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            DefinitionId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///Generic argument for fetching an artifact by its ArtifactSymbol.Id
  /// </summary>
  public sealed partial class Identifier : pb::IMessage<Identifier>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Identifier> _parser = new pb::MessageParser<Identifier>(() => new Identifier());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Identifier> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Identifier() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Identifier(Identifier other) : this() {
      id_ = other.id_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Identifier Clone() {
      return new Identifier(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    /// <summary>
    ///Artifact Id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Identifier);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Identifier other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Identifier other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///Command to create a new TemplateDefinition from a TemplateFormula Id.
  /// </summary>
  public sealed partial class NewTemplateDefinition : pb::IMessage<NewTemplateDefinition>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<NewTemplateDefinition> _parser = new pb::MessageParser<NewTemplateDefinition>(() => new NewTemplateDefinition());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NewTemplateDefinition> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NewTemplateDefinition() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NewTemplateDefinition(NewTemplateDefinition other) : this() {
      templateFormulaId_ = other.templateFormulaId_;
      tokenName_ = other.tokenName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NewTemplateDefinition Clone() {
      return new NewTemplateDefinition(this);
    }

    /// <summary>Field number for the "template_formula_id" field.</summary>
    public const int TemplateFormulaIdFieldNumber = 1;
    private string templateFormulaId_ = "";
    /// <summary>
    ///TemplateFormula Id to create the definition from.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TemplateFormulaId {
      get { return templateFormulaId_; }
      set {
        templateFormulaId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "token_name" field.</summary>
    public const int TokenNameFieldNumber = 2;
    private string tokenName_ = "";
    /// <summary>
    ///Name of the TemplateDefinition, this will be the Definition and Specification Name.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TokenName {
      get { return tokenName_; }
      set {
        tokenName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NewTemplateDefinition);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NewTemplateDefinition other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TemplateFormulaId != other.TemplateFormulaId) return false;
      if (TokenName != other.TokenName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TemplateFormulaId.Length != 0) hash ^= TemplateFormulaId.GetHashCode();
      if (TokenName.Length != 0) hash ^= TokenName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (TemplateFormulaId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(TemplateFormulaId);
      }
      if (TokenName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(TokenName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (TemplateFormulaId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(TemplateFormulaId);
      }
      if (TokenName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(TokenName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TemplateFormulaId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TemplateFormulaId);
      }
      if (TokenName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TokenName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NewTemplateDefinition other) {
      if (other == null) {
        return;
      }
      if (other.TemplateFormulaId.Length != 0) {
        TemplateFormulaId = other.TemplateFormulaId;
      }
      if (other.TokenName.Length != 0) {
        TokenName = other.TokenName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            TemplateFormulaId = input.ReadString();
            break;
          }
          case 18: {
            TokenName = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            TemplateFormulaId = input.ReadString();
            break;
          }
          case 18: {
            TokenName = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///Initialize a new artifact.
  /// </summary>
  public sealed partial class InitializeNewArtifactRequest : pb::IMessage<InitializeNewArtifactRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<InitializeNewArtifactRequest> _parser = new pb::MessageParser<InitializeNewArtifactRequest>(() => new InitializeNewArtifactRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InitializeNewArtifactRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InitializeNewArtifactRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InitializeNewArtifactRequest(InitializeNewArtifactRequest other) : this() {
      artifactType_ = other.artifactType_;
      name_ = other.name_;
      symbol_ = other.symbol_;
      templateType_ = other.templateType_;
      tokenType_ = other.tokenType_;
      tokenUnit_ = other.tokenUnit_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InitializeNewArtifactRequest Clone() {
      return new InitializeNewArtifactRequest(this);
    }

    /// <summary>Field number for the "artifact_type" field.</summary>
    public const int ArtifactTypeFieldNumber = 1;
    private global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactType artifactType_ = global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactType.Base;
    /// <summary>
    ///New artifact type
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactType ArtifactType {
      get { return artifactType_; }
      set {
        artifactType_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    /// <summary>
    ///New Artifact Name
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "symbol" field.</summary>
    public const int SymbolFieldNumber = 3;
    private string symbol_ = "";
    /// <summary>
    ///Value Ignored if a TemplateFormula
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Symbol {
      get { return symbol_; }
      set {
        symbol_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "template_type" field.</summary>
    public const int TemplateTypeFieldNumber = 4;
    private global::IWA.TTF.Taxonomy.Model.Artifact.TemplateType templateType_ = global::IWA.TTF.Taxonomy.Model.Artifact.TemplateType.SingleToken;
    /// <summary>
    ///Value Ignored if not a TemplateFormula
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::IWA.TTF.Taxonomy.Model.Artifact.TemplateType TemplateType {
      get { return templateType_; }
      set {
        templateType_ = value;
      }
    }

    /// <summary>Field number for the "token_type" field.</summary>
    public const int TokenTypeFieldNumber = 5;
    private global::IWA.TTF.Taxonomy.Model.Artifact.TokenType tokenType_ = global::IWA.TTF.Taxonomy.Model.Artifact.TokenType.Fungible;
    /// <summary>
    ///Value Ignored if not a TemplateFormula
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::IWA.TTF.Taxonomy.Model.Artifact.TokenType TokenType {
      get { return tokenType_; }
      set {
        tokenType_ = value;
      }
    }

    /// <summary>Field number for the "token_unit" field.</summary>
    public const int TokenUnitFieldNumber = 6;
    private global::IWA.TTF.Taxonomy.Model.Artifact.TokenUnit tokenUnit_ = global::IWA.TTF.Taxonomy.Model.Artifact.TokenUnit.Fractional;
    /// <summary>
    ///Value Ignored if not a TemplateFormula
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::IWA.TTF.Taxonomy.Model.Artifact.TokenUnit TokenUnit {
      get { return tokenUnit_; }
      set {
        tokenUnit_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InitializeNewArtifactRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InitializeNewArtifactRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ArtifactType != other.ArtifactType) return false;
      if (Name != other.Name) return false;
      if (Symbol != other.Symbol) return false;
      if (TemplateType != other.TemplateType) return false;
      if (TokenType != other.TokenType) return false;
      if (TokenUnit != other.TokenUnit) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ArtifactType != global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactType.Base) hash ^= ArtifactType.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Symbol.Length != 0) hash ^= Symbol.GetHashCode();
      if (TemplateType != global::IWA.TTF.Taxonomy.Model.Artifact.TemplateType.SingleToken) hash ^= TemplateType.GetHashCode();
      if (TokenType != global::IWA.TTF.Taxonomy.Model.Artifact.TokenType.Fungible) hash ^= TokenType.GetHashCode();
      if (TokenUnit != global::IWA.TTF.Taxonomy.Model.Artifact.TokenUnit.Fractional) hash ^= TokenUnit.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ArtifactType != global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactType.Base) {
        output.WriteRawTag(8);
        output.WriteEnum((int) ArtifactType);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Symbol.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Symbol);
      }
      if (TemplateType != global::IWA.TTF.Taxonomy.Model.Artifact.TemplateType.SingleToken) {
        output.WriteRawTag(32);
        output.WriteEnum((int) TemplateType);
      }
      if (TokenType != global::IWA.TTF.Taxonomy.Model.Artifact.TokenType.Fungible) {
        output.WriteRawTag(40);
        output.WriteEnum((int) TokenType);
      }
      if (TokenUnit != global::IWA.TTF.Taxonomy.Model.Artifact.TokenUnit.Fractional) {
        output.WriteRawTag(48);
        output.WriteEnum((int) TokenUnit);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ArtifactType != global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactType.Base) {
        output.WriteRawTag(8);
        output.WriteEnum((int) ArtifactType);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Symbol.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Symbol);
      }
      if (TemplateType != global::IWA.TTF.Taxonomy.Model.Artifact.TemplateType.SingleToken) {
        output.WriteRawTag(32);
        output.WriteEnum((int) TemplateType);
      }
      if (TokenType != global::IWA.TTF.Taxonomy.Model.Artifact.TokenType.Fungible) {
        output.WriteRawTag(40);
        output.WriteEnum((int) TokenType);
      }
      if (TokenUnit != global::IWA.TTF.Taxonomy.Model.Artifact.TokenUnit.Fractional) {
        output.WriteRawTag(48);
        output.WriteEnum((int) TokenUnit);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ArtifactType != global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactType.Base) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ArtifactType);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Symbol.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Symbol);
      }
      if (TemplateType != global::IWA.TTF.Taxonomy.Model.Artifact.TemplateType.SingleToken) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) TemplateType);
      }
      if (TokenType != global::IWA.TTF.Taxonomy.Model.Artifact.TokenType.Fungible) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) TokenType);
      }
      if (TokenUnit != global::IWA.TTF.Taxonomy.Model.Artifact.TokenUnit.Fractional) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) TokenUnit);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InitializeNewArtifactRequest other) {
      if (other == null) {
        return;
      }
      if (other.ArtifactType != global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactType.Base) {
        ArtifactType = other.ArtifactType;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Symbol.Length != 0) {
        Symbol = other.Symbol;
      }
      if (other.TemplateType != global::IWA.TTF.Taxonomy.Model.Artifact.TemplateType.SingleToken) {
        TemplateType = other.TemplateType;
      }
      if (other.TokenType != global::IWA.TTF.Taxonomy.Model.Artifact.TokenType.Fungible) {
        TokenType = other.TokenType;
      }
      if (other.TokenUnit != global::IWA.TTF.Taxonomy.Model.Artifact.TokenUnit.Fractional) {
        TokenUnit = other.TokenUnit;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ArtifactType = (global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactType) input.ReadEnum();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            Symbol = input.ReadString();
            break;
          }
          case 32: {
            TemplateType = (global::IWA.TTF.Taxonomy.Model.Artifact.TemplateType) input.ReadEnum();
            break;
          }
          case 40: {
            TokenType = (global::IWA.TTF.Taxonomy.Model.Artifact.TokenType) input.ReadEnum();
            break;
          }
          case 48: {
            TokenUnit = (global::IWA.TTF.Taxonomy.Model.Artifact.TokenUnit) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ArtifactType = (global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactType) input.ReadEnum();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            Symbol = input.ReadString();
            break;
          }
          case 32: {
            TemplateType = (global::IWA.TTF.Taxonomy.Model.Artifact.TemplateType) input.ReadEnum();
            break;
          }
          case 40: {
            TokenType = (global::IWA.TTF.Taxonomy.Model.Artifact.TokenType) input.ReadEnum();
            break;
          }
          case 48: {
            TokenUnit = (global::IWA.TTF.Taxonomy.Model.Artifact.TokenUnit) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///Response expected from a InitializeNewArtifactRequest.
  /// </summary>
  public sealed partial class InitializeNewArtifactResponse : pb::IMessage<InitializeNewArtifactResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<InitializeNewArtifactResponse> _parser = new pb::MessageParser<InitializeNewArtifactResponse>(() => new InitializeNewArtifactResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InitializeNewArtifactResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactReflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InitializeNewArtifactResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InitializeNewArtifactResponse(InitializeNewArtifactResponse other) : this() {
      artifactType_ = other.artifactType_;
      artifact_ = other.artifact_ != null ? other.artifact_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InitializeNewArtifactResponse Clone() {
      return new InitializeNewArtifactResponse(this);
    }

    /// <summary>Field number for the "artifact_type" field.</summary>
    public const int ArtifactTypeFieldNumber = 1;
    private global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactType artifactType_ = global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactType.Base;
    /// <summary>
    ///ArtifactType contained in the artifact property.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactType ArtifactType {
      get { return artifactType_; }
      set {
        artifactType_ = value;
      }
    }

    /// <summary>Field number for the "artifact" field.</summary>
    public const int ArtifactFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Any artifact_;
    /// <summary>
    ///Unpack this as the ArtifactType indicated.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Any Artifact {
      get { return artifact_; }
      set {
        artifact_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InitializeNewArtifactResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InitializeNewArtifactResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ArtifactType != other.ArtifactType) return false;
      if (!object.Equals(Artifact, other.Artifact)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ArtifactType != global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactType.Base) hash ^= ArtifactType.GetHashCode();
      if (artifact_ != null) hash ^= Artifact.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ArtifactType != global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactType.Base) {
        output.WriteRawTag(8);
        output.WriteEnum((int) ArtifactType);
      }
      if (artifact_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Artifact);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ArtifactType != global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactType.Base) {
        output.WriteRawTag(8);
        output.WriteEnum((int) ArtifactType);
      }
      if (artifact_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Artifact);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ArtifactType != global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactType.Base) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ArtifactType);
      }
      if (artifact_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Artifact);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InitializeNewArtifactResponse other) {
      if (other == null) {
        return;
      }
      if (other.ArtifactType != global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactType.Base) {
        ArtifactType = other.ArtifactType;
      }
      if (other.artifact_ != null) {
        if (artifact_ == null) {
          Artifact = new global::Google.Protobuf.WellKnownTypes.Any();
        }
        Artifact.MergeFrom(other.Artifact);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ArtifactType = (global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactType) input.ReadEnum();
            break;
          }
          case 18: {
            if (artifact_ == null) {
              Artifact = new global::Google.Protobuf.WellKnownTypes.Any();
            }
            input.ReadMessage(Artifact);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ArtifactType = (global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactType) input.ReadEnum();
            break;
          }
          case 18: {
            if (artifact_ == null) {
              Artifact = new global::Google.Protobuf.WellKnownTypes.Any();
            }
            input.ReadMessage(Artifact);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///Command for issuing a Commit on the local git.
  /// </summary>
  public sealed partial class CommitUpdatesRequest : pb::IMessage<CommitUpdatesRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CommitUpdatesRequest> _parser = new pb::MessageParser<CommitUpdatesRequest>(() => new CommitUpdatesRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CommitUpdatesRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactReflection.Descriptor.MessageTypes[25]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommitUpdatesRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommitUpdatesRequest(CommitUpdatesRequest other) : this() {
      commitMessage_ = other.commitMessage_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommitUpdatesRequest Clone() {
      return new CommitUpdatesRequest(this);
    }

    /// <summary>Field number for the "commit_message" field.</summary>
    public const int CommitMessageFieldNumber = 1;
    private string commitMessage_ = "";
    /// <summary>
    ///Message for the commit.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CommitMessage {
      get { return commitMessage_; }
      set {
        commitMessage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CommitUpdatesRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CommitUpdatesRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CommitMessage != other.CommitMessage) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CommitMessage.Length != 0) hash ^= CommitMessage.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (CommitMessage.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(CommitMessage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (CommitMessage.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(CommitMessage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CommitMessage.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CommitMessage);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CommitUpdatesRequest other) {
      if (other == null) {
        return;
      }
      if (other.CommitMessage.Length != 0) {
        CommitMessage = other.CommitMessage;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            CommitMessage = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            CommitMessage = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///Expected response from the commit request.
  /// </summary>
  public sealed partial class CommitUpdatesResponse : pb::IMessage<CommitUpdatesResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CommitUpdatesResponse> _parser = new pb::MessageParser<CommitUpdatesResponse>(() => new CommitUpdatesResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CommitUpdatesResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactReflection.Descriptor.MessageTypes[26]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommitUpdatesResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommitUpdatesResponse(CommitUpdatesResponse other) : this() {
      result_ = other.result_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommitUpdatesResponse Clone() {
      return new CommitUpdatesResponse(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private string result_ = "";
    /// <summary>
    ///Output of the commit request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Result {
      get { return result_; }
      set {
        result_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CommitUpdatesResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CommitUpdatesResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Result.Length != 0) hash ^= Result.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Result.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Result);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Result.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Result);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Result.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Result);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CommitUpdatesResponse other) {
      if (other == null) {
        return;
      }
      if (other.Result.Length != 0) {
        Result = other.Result;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Result = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Result = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///Command to create a pull request
  /// </summary>
  public sealed partial class IssuePullRequest : pb::IMessage<IssuePullRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<IssuePullRequest> _parser = new pb::MessageParser<IssuePullRequest>(() => new IssuePullRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<IssuePullRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactReflection.Descriptor.MessageTypes[27]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IssuePullRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IssuePullRequest(IssuePullRequest other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IssuePullRequest Clone() {
      return new IssuePullRequest(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as IssuePullRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(IssuePullRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(IssuePullRequest other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  /// <summary>
  ///Expected response from the PullRequest
  /// </summary>
  public sealed partial class IssuePullResponse : pb::IMessage<IssuePullResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<IssuePullResponse> _parser = new pb::MessageParser<IssuePullResponse>(() => new IssuePullResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<IssuePullResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactReflection.Descriptor.MessageTypes[28]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IssuePullResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IssuePullResponse(IssuePullResponse other) : this() {
      response_ = other.response_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IssuePullResponse Clone() {
      return new IssuePullResponse(this);
    }

    /// <summary>Field number for the "response" field.</summary>
    public const int ResponseFieldNumber = 1;
    private string response_ = "";
    /// <summary>
    ///Output of the pull request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Response {
      get { return response_; }
      set {
        response_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as IssuePullResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(IssuePullResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Response != other.Response) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Response.Length != 0) hash ^= Response.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Response.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Response);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Response.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Response);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Response.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Response);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(IssuePullResponse other) {
      if (other == null) {
        return;
      }
      if (other.Response.Length != 0) {
        Response = other.Response;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Response = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Response = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///Command to retrieve the Service configuration.
  /// </summary>
  public sealed partial class ConfigurationRequest : pb::IMessage<ConfigurationRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ConfigurationRequest> _parser = new pb::MessageParser<ConfigurationRequest>(() => new ConfigurationRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ConfigurationRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactReflection.Descriptor.MessageTypes[29]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConfigurationRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConfigurationRequest(ConfigurationRequest other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConfigurationRequest Clone() {
      return new ConfigurationRequest(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ConfigurationRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ConfigurationRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ConfigurationRequest other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  /// <summary>
  ///Expected output from the ConfigurationRequest.
  /// </summary>
  public sealed partial class ServiceConfiguration : pb::IMessage<ServiceConfiguration>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ServiceConfiguration> _parser = new pb::MessageParser<ServiceConfiguration>(() => new ServiceConfiguration());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ServiceConfiguration> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactReflection.Descriptor.MessageTypes[30]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServiceConfiguration() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServiceConfiguration(ServiceConfiguration other) : this() {
      readOnly_ = other.readOnly_;
      gitId_ = other.gitId_;
      gitBranch_ = other.gitBranch_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServiceConfiguration Clone() {
      return new ServiceConfiguration(this);
    }

    /// <summary>Field number for the "read_only" field.</summary>
    public const int ReadOnlyFieldNumber = 1;
    private bool readOnly_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool ReadOnly {
      get { return readOnly_; }
      set {
        readOnly_ = value;
      }
    }

    /// <summary>Field number for the "git_id" field.</summary>
    public const int GitIdFieldNumber = 2;
    private string gitId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GitId {
      get { return gitId_; }
      set {
        gitId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "git_branch" field.</summary>
    public const int GitBranchFieldNumber = 3;
    private string gitBranch_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GitBranch {
      get { return gitBranch_; }
      set {
        gitBranch_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ServiceConfiguration);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ServiceConfiguration other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ReadOnly != other.ReadOnly) return false;
      if (GitId != other.GitId) return false;
      if (GitBranch != other.GitBranch) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ReadOnly != false) hash ^= ReadOnly.GetHashCode();
      if (GitId.Length != 0) hash ^= GitId.GetHashCode();
      if (GitBranch.Length != 0) hash ^= GitBranch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ReadOnly != false) {
        output.WriteRawTag(8);
        output.WriteBool(ReadOnly);
      }
      if (GitId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(GitId);
      }
      if (GitBranch.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(GitBranch);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ReadOnly != false) {
        output.WriteRawTag(8);
        output.WriteBool(ReadOnly);
      }
      if (GitId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(GitId);
      }
      if (GitBranch.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(GitBranch);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ReadOnly != false) {
        size += 1 + 1;
      }
      if (GitId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GitId);
      }
      if (GitBranch.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GitBranch);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ServiceConfiguration other) {
      if (other == null) {
        return;
      }
      if (other.ReadOnly != false) {
        ReadOnly = other.ReadOnly;
      }
      if (other.GitId.Length != 0) {
        GitId = other.GitId;
      }
      if (other.GitBranch.Length != 0) {
        GitBranch = other.GitBranch;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ReadOnly = input.ReadBool();
            break;
          }
          case 18: {
            GitId = input.ReadString();
            break;
          }
          case 26: {
            GitBranch = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ReadOnly = input.ReadBool();
            break;
          }
          case 18: {
            GitId = input.ReadString();
            break;
          }
          case 26: {
            GitBranch = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///Query options are used to issue generic query instructions.
  /// </summary>
  public sealed partial class QueryOptions : pb::IMessage<QueryOptions>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<QueryOptions> _parser = new pb::MessageParser<QueryOptions>(() => new QueryOptions());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QueryOptions> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactReflection.Descriptor.MessageTypes[31]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryOptions() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryOptions(QueryOptions other) : this() {
      artifactType_ = other.artifactType_;
      maxItemReturn_ = other.maxItemReturn_;
      lastItemIndex_ = other.lastItemIndex_;
      byClassification_ = other.byClassification_;
      classification_ = other.classification_ != null ? other.classification_.Clone() : null;
      includeHybrids_ = other.includeHybrids_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryOptions Clone() {
      return new QueryOptions(this);
    }

    /// <summary>Field number for the "artifact_type" field.</summary>
    public const int ArtifactTypeFieldNumber = 1;
    private global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactType artifactType_ = global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactType.Base;
    /// <summary>
    ///Query for artifact of this type.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactType ArtifactType {
      get { return artifactType_; }
      set {
        artifactType_ = value;
      }
    }

    /// <summary>Field number for the "max_item_return" field.</summary>
    public const int MaxItemReturnFieldNumber = 2;
    private int maxItemReturn_;
    /// <summary>
    ///If there are many expected returns, limit return window to this number and enable paging.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MaxItemReturn {
      get { return maxItemReturn_; }
      set {
        maxItemReturn_ = value;
      }
    }

    /// <summary>Field number for the "last_item_index" field.</summary>
    public const int LastItemIndexFieldNumber = 3;
    private int lastItemIndex_;
    /// <summary>
    ///Set to the QuertResult.LastItemIndex from the previous QueryResult. Manually override from QueryResult FirstItemIndex + count in results array
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int LastItemIndex {
      get { return lastItemIndex_; }
      set {
        lastItemIndex_ = value;
      }
    }

    /// <summary>Field number for the "by_classification" field.</summary>
    public const int ByClassificationFieldNumber = 4;
    private bool byClassification_;
    /// <summary>
    ///If true, the TemplateClassification value will apply, if false, it will search all templates.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool ByClassification {
      get { return byClassification_; }
      set {
        byClassification_ = value;
      }
    }

    /// <summary>Field number for the "classification" field.</summary>
    public const int ClassificationFieldNumber = 5;
    private global::IWA.TTF.Taxonomy.Model.Artifact.Classification classification_;
    /// <summary>
    ///Only if quering templates
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::IWA.TTF.Taxonomy.Model.Artifact.Classification Classification {
      get { return classification_; }
      set {
        classification_ = value;
      }
    }

    /// <summary>Field number for the "include_hybrids" field.</summary>
    public const int IncludeHybridsFieldNumber = 6;
    private bool includeHybrids_;
    /// <summary>
    ///Only if quering templates
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IncludeHybrids {
      get { return includeHybrids_; }
      set {
        includeHybrids_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QueryOptions);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QueryOptions other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ArtifactType != other.ArtifactType) return false;
      if (MaxItemReturn != other.MaxItemReturn) return false;
      if (LastItemIndex != other.LastItemIndex) return false;
      if (ByClassification != other.ByClassification) return false;
      if (!object.Equals(Classification, other.Classification)) return false;
      if (IncludeHybrids != other.IncludeHybrids) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ArtifactType != global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactType.Base) hash ^= ArtifactType.GetHashCode();
      if (MaxItemReturn != 0) hash ^= MaxItemReturn.GetHashCode();
      if (LastItemIndex != 0) hash ^= LastItemIndex.GetHashCode();
      if (ByClassification != false) hash ^= ByClassification.GetHashCode();
      if (classification_ != null) hash ^= Classification.GetHashCode();
      if (IncludeHybrids != false) hash ^= IncludeHybrids.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ArtifactType != global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactType.Base) {
        output.WriteRawTag(8);
        output.WriteEnum((int) ArtifactType);
      }
      if (MaxItemReturn != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(MaxItemReturn);
      }
      if (LastItemIndex != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(LastItemIndex);
      }
      if (ByClassification != false) {
        output.WriteRawTag(32);
        output.WriteBool(ByClassification);
      }
      if (classification_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Classification);
      }
      if (IncludeHybrids != false) {
        output.WriteRawTag(48);
        output.WriteBool(IncludeHybrids);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ArtifactType != global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactType.Base) {
        output.WriteRawTag(8);
        output.WriteEnum((int) ArtifactType);
      }
      if (MaxItemReturn != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(MaxItemReturn);
      }
      if (LastItemIndex != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(LastItemIndex);
      }
      if (ByClassification != false) {
        output.WriteRawTag(32);
        output.WriteBool(ByClassification);
      }
      if (classification_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Classification);
      }
      if (IncludeHybrids != false) {
        output.WriteRawTag(48);
        output.WriteBool(IncludeHybrids);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ArtifactType != global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactType.Base) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ArtifactType);
      }
      if (MaxItemReturn != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxItemReturn);
      }
      if (LastItemIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LastItemIndex);
      }
      if (ByClassification != false) {
        size += 1 + 1;
      }
      if (classification_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Classification);
      }
      if (IncludeHybrids != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QueryOptions other) {
      if (other == null) {
        return;
      }
      if (other.ArtifactType != global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactType.Base) {
        ArtifactType = other.ArtifactType;
      }
      if (other.MaxItemReturn != 0) {
        MaxItemReturn = other.MaxItemReturn;
      }
      if (other.LastItemIndex != 0) {
        LastItemIndex = other.LastItemIndex;
      }
      if (other.ByClassification != false) {
        ByClassification = other.ByClassification;
      }
      if (other.classification_ != null) {
        if (classification_ == null) {
          Classification = new global::IWA.TTF.Taxonomy.Model.Artifact.Classification();
        }
        Classification.MergeFrom(other.Classification);
      }
      if (other.IncludeHybrids != false) {
        IncludeHybrids = other.IncludeHybrids;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ArtifactType = (global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactType) input.ReadEnum();
            break;
          }
          case 16: {
            MaxItemReturn = input.ReadInt32();
            break;
          }
          case 24: {
            LastItemIndex = input.ReadInt32();
            break;
          }
          case 32: {
            ByClassification = input.ReadBool();
            break;
          }
          case 42: {
            if (classification_ == null) {
              Classification = new global::IWA.TTF.Taxonomy.Model.Artifact.Classification();
            }
            input.ReadMessage(Classification);
            break;
          }
          case 48: {
            IncludeHybrids = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ArtifactType = (global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactType) input.ReadEnum();
            break;
          }
          case 16: {
            MaxItemReturn = input.ReadInt32();
            break;
          }
          case 24: {
            LastItemIndex = input.ReadInt32();
            break;
          }
          case 32: {
            ByClassification = input.ReadBool();
            break;
          }
          case 42: {
            if (classification_ == null) {
              Classification = new global::IWA.TTF.Taxonomy.Model.Artifact.Classification();
            }
            input.ReadMessage(Classification);
            break;
          }
          case 48: {
            IncludeHybrids = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///Expected results from a Query
  /// </summary>
  public sealed partial class QueryResult : pb::IMessage<QueryResult>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<QueryResult> _parser = new pb::MessageParser<QueryResult>(() => new QueryResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QueryResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactReflection.Descriptor.MessageTypes[32]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryResult(QueryResult other) : this() {
      artifactType_ = other.artifactType_;
      firstItemIndex_ = other.firstItemIndex_;
      lastItemIndex_ = other.lastItemIndex_;
      totalItemsInCollection_ = other.totalItemsInCollection_;
      artifactCollection_ = other.artifactCollection_ != null ? other.artifactCollection_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryResult Clone() {
      return new QueryResult(this);
    }

    /// <summary>Field number for the "artifact_type" field.</summary>
    public const int ArtifactTypeFieldNumber = 1;
    private global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactType artifactType_ = global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactType.Base;
    /// <summary>
    ///ArtifactType returned.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactType ArtifactType {
      get { return artifactType_; }
      set {
        artifactType_ = value;
      }
    }

    /// <summary>Field number for the "first_item_index" field.</summary>
    public const int FirstItemIndexFieldNumber = 2;
    private int firstItemIndex_;
    /// <summary>
    ///If paging through artifacts of type
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int FirstItemIndex {
      get { return firstItemIndex_; }
      set {
        firstItemIndex_ = value;
      }
    }

    /// <summary>Field number for the "last_item_index" field.</summary>
    public const int LastItemIndexFieldNumber = 3;
    private int lastItemIndex_;
    /// <summary>
    ///If paging, this is the +1 for the next page.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int LastItemIndex {
      get { return lastItemIndex_; }
      set {
        lastItemIndex_ = value;
      }
    }

    /// <summary>Field number for the "total_items_in_collection" field.</summary>
    public const int TotalItemsInCollectionFieldNumber = 4;
    private int totalItemsInCollection_;
    /// <summary>
    ///Total count in the collection if iterating through all the items on the service of the specified type.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TotalItemsInCollection {
      get { return totalItemsInCollection_; }
      set {
        totalItemsInCollection_ = value;
      }
    }

    /// <summary>Field number for the "artifact_collection" field.</summary>
    public const int ArtifactCollectionFieldNumber = 5;
    private global::Google.Protobuf.WellKnownTypes.Any artifactCollection_;
    /// <summary>
    ///Deserialize to the collection object for the ArtifactType, i.e. Base will be a Bases, Behavior will be Behaviors, etc.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Any ArtifactCollection {
      get { return artifactCollection_; }
      set {
        artifactCollection_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QueryResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QueryResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ArtifactType != other.ArtifactType) return false;
      if (FirstItemIndex != other.FirstItemIndex) return false;
      if (LastItemIndex != other.LastItemIndex) return false;
      if (TotalItemsInCollection != other.TotalItemsInCollection) return false;
      if (!object.Equals(ArtifactCollection, other.ArtifactCollection)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ArtifactType != global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactType.Base) hash ^= ArtifactType.GetHashCode();
      if (FirstItemIndex != 0) hash ^= FirstItemIndex.GetHashCode();
      if (LastItemIndex != 0) hash ^= LastItemIndex.GetHashCode();
      if (TotalItemsInCollection != 0) hash ^= TotalItemsInCollection.GetHashCode();
      if (artifactCollection_ != null) hash ^= ArtifactCollection.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ArtifactType != global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactType.Base) {
        output.WriteRawTag(8);
        output.WriteEnum((int) ArtifactType);
      }
      if (FirstItemIndex != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(FirstItemIndex);
      }
      if (LastItemIndex != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(LastItemIndex);
      }
      if (TotalItemsInCollection != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(TotalItemsInCollection);
      }
      if (artifactCollection_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(ArtifactCollection);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ArtifactType != global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactType.Base) {
        output.WriteRawTag(8);
        output.WriteEnum((int) ArtifactType);
      }
      if (FirstItemIndex != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(FirstItemIndex);
      }
      if (LastItemIndex != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(LastItemIndex);
      }
      if (TotalItemsInCollection != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(TotalItemsInCollection);
      }
      if (artifactCollection_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(ArtifactCollection);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ArtifactType != global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactType.Base) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ArtifactType);
      }
      if (FirstItemIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FirstItemIndex);
      }
      if (LastItemIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LastItemIndex);
      }
      if (TotalItemsInCollection != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TotalItemsInCollection);
      }
      if (artifactCollection_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ArtifactCollection);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QueryResult other) {
      if (other == null) {
        return;
      }
      if (other.ArtifactType != global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactType.Base) {
        ArtifactType = other.ArtifactType;
      }
      if (other.FirstItemIndex != 0) {
        FirstItemIndex = other.FirstItemIndex;
      }
      if (other.LastItemIndex != 0) {
        LastItemIndex = other.LastItemIndex;
      }
      if (other.TotalItemsInCollection != 0) {
        TotalItemsInCollection = other.TotalItemsInCollection;
      }
      if (other.artifactCollection_ != null) {
        if (artifactCollection_ == null) {
          ArtifactCollection = new global::Google.Protobuf.WellKnownTypes.Any();
        }
        ArtifactCollection.MergeFrom(other.ArtifactCollection);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ArtifactType = (global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactType) input.ReadEnum();
            break;
          }
          case 16: {
            FirstItemIndex = input.ReadInt32();
            break;
          }
          case 24: {
            LastItemIndex = input.ReadInt32();
            break;
          }
          case 32: {
            TotalItemsInCollection = input.ReadInt32();
            break;
          }
          case 42: {
            if (artifactCollection_ == null) {
              ArtifactCollection = new global::Google.Protobuf.WellKnownTypes.Any();
            }
            input.ReadMessage(ArtifactCollection);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ArtifactType = (global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactType) input.ReadEnum();
            break;
          }
          case 16: {
            FirstItemIndex = input.ReadInt32();
            break;
          }
          case 24: {
            LastItemIndex = input.ReadInt32();
            break;
          }
          case 32: {
            TotalItemsInCollection = input.ReadInt32();
            break;
          }
          case 42: {
            if (artifactCollection_ == null) {
              ArtifactCollection = new global::Google.Protobuf.WellKnownTypes.Any();
            }
            input.ReadMessage(ArtifactCollection);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///Object representation of a TemplateFormula's ß.
  /// </summary>
  public sealed partial class FormulaGrammar : pb::IMessage<FormulaGrammar>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FormulaGrammar> _parser = new pb::MessageParser<FormulaGrammar>(() => new FormulaGrammar());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FormulaGrammar> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactReflection.Descriptor.MessageTypes[33]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FormulaGrammar() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FormulaGrammar(FormulaGrammar other) : this() {
      singleTokenGrammar_ = other.singleTokenGrammar_ != null ? other.singleTokenGrammar_.Clone() : null;
      hybridGrammar_ = other.hybridGrammar_ != null ? other.hybridGrammar_.Clone() : null;
      hybridWithHybridsGrammar_ = other.hybridWithHybridsGrammar_ != null ? other.hybridWithHybridsGrammar_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FormulaGrammar Clone() {
      return new FormulaGrammar(this);
    }

    /// <summary>Field number for the "single_token_grammar" field.</summary>
    public const int SingleTokenGrammarFieldNumber = 1;
    private global::IWA.TTF.Taxonomy.Model.Artifact.SingleTokenGrammar singleTokenGrammar_;
    /// <summary>
    ///Grammar for single token templates.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::IWA.TTF.Taxonomy.Model.Artifact.SingleTokenGrammar SingleTokenGrammar {
      get { return singleTokenGrammar_; }
      set {
        singleTokenGrammar_ = value;
      }
    }

    /// <summary>Field number for the "hybrid_grammar" field.</summary>
    public const int HybridGrammarFieldNumber = 2;
    private global::IWA.TTF.Taxonomy.Model.Artifact.HybridTokenGrammar hybridGrammar_;
    /// <summary>
    ///Grammar for hybrid token templates.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::IWA.TTF.Taxonomy.Model.Artifact.HybridTokenGrammar HybridGrammar {
      get { return hybridGrammar_; }
      set {
        hybridGrammar_ = value;
      }
    }

    /// <summary>Field number for the "hybrid_with_hybrids_grammar" field.</summary>
    public const int HybridWithHybridsGrammarFieldNumber = 3;
    private global::IWA.TTF.Taxonomy.Model.Artifact.HybridTokenWithHybridChildrenGrammar hybridWithHybridsGrammar_;
    /// <summary>
    ///Grammar for nested hybrids.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::IWA.TTF.Taxonomy.Model.Artifact.HybridTokenWithHybridChildrenGrammar HybridWithHybridsGrammar {
      get { return hybridWithHybridsGrammar_; }
      set {
        hybridWithHybridsGrammar_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FormulaGrammar);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FormulaGrammar other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(SingleTokenGrammar, other.SingleTokenGrammar)) return false;
      if (!object.Equals(HybridGrammar, other.HybridGrammar)) return false;
      if (!object.Equals(HybridWithHybridsGrammar, other.HybridWithHybridsGrammar)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (singleTokenGrammar_ != null) hash ^= SingleTokenGrammar.GetHashCode();
      if (hybridGrammar_ != null) hash ^= HybridGrammar.GetHashCode();
      if (hybridWithHybridsGrammar_ != null) hash ^= HybridWithHybridsGrammar.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (singleTokenGrammar_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(SingleTokenGrammar);
      }
      if (hybridGrammar_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(HybridGrammar);
      }
      if (hybridWithHybridsGrammar_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(HybridWithHybridsGrammar);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (singleTokenGrammar_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(SingleTokenGrammar);
      }
      if (hybridGrammar_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(HybridGrammar);
      }
      if (hybridWithHybridsGrammar_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(HybridWithHybridsGrammar);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (singleTokenGrammar_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SingleTokenGrammar);
      }
      if (hybridGrammar_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(HybridGrammar);
      }
      if (hybridWithHybridsGrammar_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(HybridWithHybridsGrammar);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FormulaGrammar other) {
      if (other == null) {
        return;
      }
      if (other.singleTokenGrammar_ != null) {
        if (singleTokenGrammar_ == null) {
          SingleTokenGrammar = new global::IWA.TTF.Taxonomy.Model.Artifact.SingleTokenGrammar();
        }
        SingleTokenGrammar.MergeFrom(other.SingleTokenGrammar);
      }
      if (other.hybridGrammar_ != null) {
        if (hybridGrammar_ == null) {
          HybridGrammar = new global::IWA.TTF.Taxonomy.Model.Artifact.HybridTokenGrammar();
        }
        HybridGrammar.MergeFrom(other.HybridGrammar);
      }
      if (other.hybridWithHybridsGrammar_ != null) {
        if (hybridWithHybridsGrammar_ == null) {
          HybridWithHybridsGrammar = new global::IWA.TTF.Taxonomy.Model.Artifact.HybridTokenWithHybridChildrenGrammar();
        }
        HybridWithHybridsGrammar.MergeFrom(other.HybridWithHybridsGrammar);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (singleTokenGrammar_ == null) {
              SingleTokenGrammar = new global::IWA.TTF.Taxonomy.Model.Artifact.SingleTokenGrammar();
            }
            input.ReadMessage(SingleTokenGrammar);
            break;
          }
          case 18: {
            if (hybridGrammar_ == null) {
              HybridGrammar = new global::IWA.TTF.Taxonomy.Model.Artifact.HybridTokenGrammar();
            }
            input.ReadMessage(HybridGrammar);
            break;
          }
          case 26: {
            if (hybridWithHybridsGrammar_ == null) {
              HybridWithHybridsGrammar = new global::IWA.TTF.Taxonomy.Model.Artifact.HybridTokenWithHybridChildrenGrammar();
            }
            input.ReadMessage(HybridWithHybridsGrammar);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (singleTokenGrammar_ == null) {
              SingleTokenGrammar = new global::IWA.TTF.Taxonomy.Model.Artifact.SingleTokenGrammar();
            }
            input.ReadMessage(SingleTokenGrammar);
            break;
          }
          case 18: {
            if (hybridGrammar_ == null) {
              HybridGrammar = new global::IWA.TTF.Taxonomy.Model.Artifact.HybridTokenGrammar();
            }
            input.ReadMessage(HybridGrammar);
            break;
          }
          case 26: {
            if (hybridWithHybridsGrammar_ == null) {
              HybridWithHybridsGrammar = new global::IWA.TTF.Taxonomy.Model.Artifact.HybridTokenWithHybridChildrenGrammar();
            }
            input.ReadMessage(HybridWithHybridsGrammar);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///Hybrid Token Grammar
  /// </summary>
  public sealed partial class HybridTokenGrammar : pb::IMessage<HybridTokenGrammar>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<HybridTokenGrammar> _parser = new pb::MessageParser<HybridTokenGrammar>(() => new HybridTokenGrammar());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HybridTokenGrammar> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactReflection.Descriptor.MessageTypes[34]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HybridTokenGrammar() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HybridTokenGrammar(HybridTokenGrammar other) : this() {
      parent_ = other.parent_ != null ? other.parent_.Clone() : null;
      childrenStart_ = other.childrenStart_;
      childTokens_ = other.childTokens_.Clone();
      childrenEnd_ = other.childrenEnd_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HybridTokenGrammar Clone() {
      return new HybridTokenGrammar(this);
    }

    /// <summary>Field number for the "parent" field.</summary>
    public const int ParentFieldNumber = 1;
    private global::IWA.TTF.Taxonomy.Model.Artifact.SingleTokenGrammar parent_;
    /// <summary>
    ///Parent token
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::IWA.TTF.Taxonomy.Model.Artifact.SingleTokenGrammar Parent {
      get { return parent_; }
      set {
        parent_ = value;
      }
    }

    /// <summary>Field number for the "children_start" field.</summary>
    public const int ChildrenStartFieldNumber = 2;
    private string childrenStart_ = "";
    /// <summary>
    /// "("
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ChildrenStart {
      get { return childrenStart_; }
      set {
        childrenStart_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "child_tokens" field.</summary>
    public const int ChildTokensFieldNumber = 3;
    private static readonly pb::FieldCodec<global::IWA.TTF.Taxonomy.Model.Artifact.SingleTokenGrammar> _repeated_childTokens_codec
        = pb::FieldCodec.ForMessage(26, global::IWA.TTF.Taxonomy.Model.Artifact.SingleTokenGrammar.Parser);
    private readonly pbc::RepeatedField<global::IWA.TTF.Taxonomy.Model.Artifact.SingleTokenGrammar> childTokens_ = new pbc::RepeatedField<global::IWA.TTF.Taxonomy.Model.Artifact.SingleTokenGrammar>();
    /// <summary>
    ///Collection of child tokens.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::IWA.TTF.Taxonomy.Model.Artifact.SingleTokenGrammar> ChildTokens {
      get { return childTokens_; }
    }

    /// <summary>Field number for the "children_end" field.</summary>
    public const int ChildrenEndFieldNumber = 4;
    private string childrenEnd_ = "";
    /// <summary>
    /// ")"
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ChildrenEnd {
      get { return childrenEnd_; }
      set {
        childrenEnd_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HybridTokenGrammar);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HybridTokenGrammar other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Parent, other.Parent)) return false;
      if (ChildrenStart != other.ChildrenStart) return false;
      if(!childTokens_.Equals(other.childTokens_)) return false;
      if (ChildrenEnd != other.ChildrenEnd) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (parent_ != null) hash ^= Parent.GetHashCode();
      if (ChildrenStart.Length != 0) hash ^= ChildrenStart.GetHashCode();
      hash ^= childTokens_.GetHashCode();
      if (ChildrenEnd.Length != 0) hash ^= ChildrenEnd.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (parent_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Parent);
      }
      if (ChildrenStart.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ChildrenStart);
      }
      childTokens_.WriteTo(output, _repeated_childTokens_codec);
      if (ChildrenEnd.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ChildrenEnd);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (parent_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Parent);
      }
      if (ChildrenStart.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ChildrenStart);
      }
      childTokens_.WriteTo(ref output, _repeated_childTokens_codec);
      if (ChildrenEnd.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ChildrenEnd);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (parent_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Parent);
      }
      if (ChildrenStart.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ChildrenStart);
      }
      size += childTokens_.CalculateSize(_repeated_childTokens_codec);
      if (ChildrenEnd.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ChildrenEnd);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HybridTokenGrammar other) {
      if (other == null) {
        return;
      }
      if (other.parent_ != null) {
        if (parent_ == null) {
          Parent = new global::IWA.TTF.Taxonomy.Model.Artifact.SingleTokenGrammar();
        }
        Parent.MergeFrom(other.Parent);
      }
      if (other.ChildrenStart.Length != 0) {
        ChildrenStart = other.ChildrenStart;
      }
      childTokens_.Add(other.childTokens_);
      if (other.ChildrenEnd.Length != 0) {
        ChildrenEnd = other.ChildrenEnd;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (parent_ == null) {
              Parent = new global::IWA.TTF.Taxonomy.Model.Artifact.SingleTokenGrammar();
            }
            input.ReadMessage(Parent);
            break;
          }
          case 18: {
            ChildrenStart = input.ReadString();
            break;
          }
          case 26: {
            childTokens_.AddEntriesFrom(input, _repeated_childTokens_codec);
            break;
          }
          case 34: {
            ChildrenEnd = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (parent_ == null) {
              Parent = new global::IWA.TTF.Taxonomy.Model.Artifact.SingleTokenGrammar();
            }
            input.ReadMessage(Parent);
            break;
          }
          case 18: {
            ChildrenStart = input.ReadString();
            break;
          }
          case 26: {
            childTokens_.AddEntriesFrom(ref input, _repeated_childTokens_codec);
            break;
          }
          case 34: {
            ChildrenEnd = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///Nested Hybrid grammar
  /// </summary>
  public sealed partial class HybridTokenWithHybridChildrenGrammar : pb::IMessage<HybridTokenWithHybridChildrenGrammar>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<HybridTokenWithHybridChildrenGrammar> _parser = new pb::MessageParser<HybridTokenWithHybridChildrenGrammar>(() => new HybridTokenWithHybridChildrenGrammar());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HybridTokenWithHybridChildrenGrammar> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactReflection.Descriptor.MessageTypes[35]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HybridTokenWithHybridChildrenGrammar() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HybridTokenWithHybridChildrenGrammar(HybridTokenWithHybridChildrenGrammar other) : this() {
      parent_ = other.parent_ != null ? other.parent_.Clone() : null;
      hybridChildrenStart_ = other.hybridChildrenStart_;
      hybridChildTokens_ = other.hybridChildTokens_.Clone();
      hybridChildrenEnd_ = other.hybridChildrenEnd_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HybridTokenWithHybridChildrenGrammar Clone() {
      return new HybridTokenWithHybridChildrenGrammar(this);
    }

    /// <summary>Field number for the "parent" field.</summary>
    public const int ParentFieldNumber = 1;
    private global::IWA.TTF.Taxonomy.Model.Artifact.SingleTokenGrammar parent_;
    /// <summary>
    ///Parent token
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::IWA.TTF.Taxonomy.Model.Artifact.SingleTokenGrammar Parent {
      get { return parent_; }
      set {
        parent_ = value;
      }
    }

    /// <summary>Field number for the "hybrid_children_start" field.</summary>
    public const int HybridChildrenStartFieldNumber = 2;
    private string hybridChildrenStart_ = "";
    /// <summary>
    /// "("
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string HybridChildrenStart {
      get { return hybridChildrenStart_; }
      set {
        hybridChildrenStart_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "hybrid_child_tokens" field.</summary>
    public const int HybridChildTokensFieldNumber = 3;
    private static readonly pb::FieldCodec<global::IWA.TTF.Taxonomy.Model.Artifact.HybridTokenGrammar> _repeated_hybridChildTokens_codec
        = pb::FieldCodec.ForMessage(26, global::IWA.TTF.Taxonomy.Model.Artifact.HybridTokenGrammar.Parser);
    private readonly pbc::RepeatedField<global::IWA.TTF.Taxonomy.Model.Artifact.HybridTokenGrammar> hybridChildTokens_ = new pbc::RepeatedField<global::IWA.TTF.Taxonomy.Model.Artifact.HybridTokenGrammar>();
    /// <summary>
    ///Collection of child tokens.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::IWA.TTF.Taxonomy.Model.Artifact.HybridTokenGrammar> HybridChildTokens {
      get { return hybridChildTokens_; }
    }

    /// <summary>Field number for the "hybrid_children_end" field.</summary>
    public const int HybridChildrenEndFieldNumber = 4;
    private string hybridChildrenEnd_ = "";
    /// <summary>
    /// ")"
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string HybridChildrenEnd {
      get { return hybridChildrenEnd_; }
      set {
        hybridChildrenEnd_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HybridTokenWithHybridChildrenGrammar);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HybridTokenWithHybridChildrenGrammar other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Parent, other.Parent)) return false;
      if (HybridChildrenStart != other.HybridChildrenStart) return false;
      if(!hybridChildTokens_.Equals(other.hybridChildTokens_)) return false;
      if (HybridChildrenEnd != other.HybridChildrenEnd) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (parent_ != null) hash ^= Parent.GetHashCode();
      if (HybridChildrenStart.Length != 0) hash ^= HybridChildrenStart.GetHashCode();
      hash ^= hybridChildTokens_.GetHashCode();
      if (HybridChildrenEnd.Length != 0) hash ^= HybridChildrenEnd.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (parent_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Parent);
      }
      if (HybridChildrenStart.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(HybridChildrenStart);
      }
      hybridChildTokens_.WriteTo(output, _repeated_hybridChildTokens_codec);
      if (HybridChildrenEnd.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(HybridChildrenEnd);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (parent_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Parent);
      }
      if (HybridChildrenStart.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(HybridChildrenStart);
      }
      hybridChildTokens_.WriteTo(ref output, _repeated_hybridChildTokens_codec);
      if (HybridChildrenEnd.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(HybridChildrenEnd);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (parent_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Parent);
      }
      if (HybridChildrenStart.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(HybridChildrenStart);
      }
      size += hybridChildTokens_.CalculateSize(_repeated_hybridChildTokens_codec);
      if (HybridChildrenEnd.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(HybridChildrenEnd);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HybridTokenWithHybridChildrenGrammar other) {
      if (other == null) {
        return;
      }
      if (other.parent_ != null) {
        if (parent_ == null) {
          Parent = new global::IWA.TTF.Taxonomy.Model.Artifact.SingleTokenGrammar();
        }
        Parent.MergeFrom(other.Parent);
      }
      if (other.HybridChildrenStart.Length != 0) {
        HybridChildrenStart = other.HybridChildrenStart;
      }
      hybridChildTokens_.Add(other.hybridChildTokens_);
      if (other.HybridChildrenEnd.Length != 0) {
        HybridChildrenEnd = other.HybridChildrenEnd;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (parent_ == null) {
              Parent = new global::IWA.TTF.Taxonomy.Model.Artifact.SingleTokenGrammar();
            }
            input.ReadMessage(Parent);
            break;
          }
          case 18: {
            HybridChildrenStart = input.ReadString();
            break;
          }
          case 26: {
            hybridChildTokens_.AddEntriesFrom(input, _repeated_hybridChildTokens_codec);
            break;
          }
          case 34: {
            HybridChildrenEnd = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (parent_ == null) {
              Parent = new global::IWA.TTF.Taxonomy.Model.Artifact.SingleTokenGrammar();
            }
            input.ReadMessage(Parent);
            break;
          }
          case 18: {
            HybridChildrenStart = input.ReadString();
            break;
          }
          case 26: {
            hybridChildTokens_.AddEntriesFrom(ref input, _repeated_hybridChildTokens_codec);
            break;
          }
          case 34: {
            HybridChildrenEnd = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///Outermost grouping container for the formula for a whole template either a parent or hybrid child.
  /// </summary>
  public sealed partial class SingleTokenGrammar : pb::IMessage<SingleTokenGrammar>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SingleTokenGrammar> _parser = new pb::MessageParser<SingleTokenGrammar>(() => new SingleTokenGrammar());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SingleTokenGrammar> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactReflection.Descriptor.MessageTypes[36]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SingleTokenGrammar() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SingleTokenGrammar(SingleTokenGrammar other) : this() {
      groupStart_ = other.groupStart_;
      baseTokenToolingSymbol_ = other.baseTokenToolingSymbol_;
      behaviors_ = other.behaviors_ != null ? other.behaviors_.Clone() : null;
      propertySets_ = other.propertySets_ != null ? other.propertySets_.Clone() : null;
      groupEnd_ = other.groupEnd_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SingleTokenGrammar Clone() {
      return new SingleTokenGrammar(this);
    }

    /// <summary>Field number for the "group_start" field.</summary>
    public const int GroupStartFieldNumber = 2;
    private string groupStart_ = "";
    /// <summary>
    /// "["
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GroupStart {
      get { return groupStart_; }
      set {
        groupStart_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "base_token_tooling_symbol" field.</summary>
    public const int BaseTokenToolingSymbolFieldNumber = 3;
    private string baseTokenToolingSymbol_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BaseTokenToolingSymbol {
      get { return baseTokenToolingSymbol_; }
      set {
        baseTokenToolingSymbol_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "behaviors" field.</summary>
    public const int BehaviorsFieldNumber = 4;
    private global::IWA.TTF.Taxonomy.Model.Artifact.BehaviorList behaviors_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::IWA.TTF.Taxonomy.Model.Artifact.BehaviorList Behaviors {
      get { return behaviors_; }
      set {
        behaviors_ = value;
      }
    }

    /// <summary>Field number for the "property_sets" field.</summary>
    public const int PropertySetsFieldNumber = 5;
    private global::IWA.TTF.Taxonomy.Model.Artifact.PropertySetList propertySets_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::IWA.TTF.Taxonomy.Model.Artifact.PropertySetList PropertySets {
      get { return propertySets_; }
      set {
        propertySets_ = value;
      }
    }

    /// <summary>Field number for the "group_end" field.</summary>
    public const int GroupEndFieldNumber = 6;
    private string groupEnd_ = "";
    /// <summary>
    /// "]"
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GroupEnd {
      get { return groupEnd_; }
      set {
        groupEnd_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SingleTokenGrammar);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SingleTokenGrammar other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GroupStart != other.GroupStart) return false;
      if (BaseTokenToolingSymbol != other.BaseTokenToolingSymbol) return false;
      if (!object.Equals(Behaviors, other.Behaviors)) return false;
      if (!object.Equals(PropertySets, other.PropertySets)) return false;
      if (GroupEnd != other.GroupEnd) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (GroupStart.Length != 0) hash ^= GroupStart.GetHashCode();
      if (BaseTokenToolingSymbol.Length != 0) hash ^= BaseTokenToolingSymbol.GetHashCode();
      if (behaviors_ != null) hash ^= Behaviors.GetHashCode();
      if (propertySets_ != null) hash ^= PropertySets.GetHashCode();
      if (GroupEnd.Length != 0) hash ^= GroupEnd.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (GroupStart.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(GroupStart);
      }
      if (BaseTokenToolingSymbol.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(BaseTokenToolingSymbol);
      }
      if (behaviors_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Behaviors);
      }
      if (propertySets_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(PropertySets);
      }
      if (GroupEnd.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(GroupEnd);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (GroupStart.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(GroupStart);
      }
      if (BaseTokenToolingSymbol.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(BaseTokenToolingSymbol);
      }
      if (behaviors_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Behaviors);
      }
      if (propertySets_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(PropertySets);
      }
      if (GroupEnd.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(GroupEnd);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (GroupStart.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GroupStart);
      }
      if (BaseTokenToolingSymbol.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BaseTokenToolingSymbol);
      }
      if (behaviors_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Behaviors);
      }
      if (propertySets_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PropertySets);
      }
      if (GroupEnd.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GroupEnd);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SingleTokenGrammar other) {
      if (other == null) {
        return;
      }
      if (other.GroupStart.Length != 0) {
        GroupStart = other.GroupStart;
      }
      if (other.BaseTokenToolingSymbol.Length != 0) {
        BaseTokenToolingSymbol = other.BaseTokenToolingSymbol;
      }
      if (other.behaviors_ != null) {
        if (behaviors_ == null) {
          Behaviors = new global::IWA.TTF.Taxonomy.Model.Artifact.BehaviorList();
        }
        Behaviors.MergeFrom(other.Behaviors);
      }
      if (other.propertySets_ != null) {
        if (propertySets_ == null) {
          PropertySets = new global::IWA.TTF.Taxonomy.Model.Artifact.PropertySetList();
        }
        PropertySets.MergeFrom(other.PropertySets);
      }
      if (other.GroupEnd.Length != 0) {
        GroupEnd = other.GroupEnd;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 18: {
            GroupStart = input.ReadString();
            break;
          }
          case 26: {
            BaseTokenToolingSymbol = input.ReadString();
            break;
          }
          case 34: {
            if (behaviors_ == null) {
              Behaviors = new global::IWA.TTF.Taxonomy.Model.Artifact.BehaviorList();
            }
            input.ReadMessage(Behaviors);
            break;
          }
          case 42: {
            if (propertySets_ == null) {
              PropertySets = new global::IWA.TTF.Taxonomy.Model.Artifact.PropertySetList();
            }
            input.ReadMessage(PropertySets);
            break;
          }
          case 50: {
            GroupEnd = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 18: {
            GroupStart = input.ReadString();
            break;
          }
          case 26: {
            BaseTokenToolingSymbol = input.ReadString();
            break;
          }
          case 34: {
            if (behaviors_ == null) {
              Behaviors = new global::IWA.TTF.Taxonomy.Model.Artifact.BehaviorList();
            }
            input.ReadMessage(Behaviors);
            break;
          }
          case 42: {
            if (propertySets_ == null) {
              PropertySets = new global::IWA.TTF.Taxonomy.Model.Artifact.PropertySetList();
            }
            input.ReadMessage(PropertySets);
            break;
          }
          case 50: {
            GroupEnd = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///Grammar for behaviors
  /// </summary>
  public sealed partial class BehaviorList : pb::IMessage<BehaviorList>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BehaviorList> _parser = new pb::MessageParser<BehaviorList>(() => new BehaviorList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BehaviorList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactReflection.Descriptor.MessageTypes[37]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BehaviorList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BehaviorList(BehaviorList other) : this() {
      listStart_ = other.listStart_;
      behaviorToolingSymbols_ = other.behaviorToolingSymbols_.Clone();
      listEnd_ = other.listEnd_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BehaviorList Clone() {
      return new BehaviorList(this);
    }

    /// <summary>Field number for the "list_start" field.</summary>
    public const int ListStartFieldNumber = 1;
    private string listStart_ = "";
    /// <summary>
    /// "{"
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ListStart {
      get { return listStart_; }
      set {
        listStart_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "behavior_tooling_symbols" field.</summary>
    public const int BehaviorToolingSymbolsFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_behaviorToolingSymbols_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> behaviorToolingSymbols_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// lowercase letters for individual behaviors, UPPERCASE for behaviorGroup
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> BehaviorToolingSymbols {
      get { return behaviorToolingSymbols_; }
    }

    /// <summary>Field number for the "list_end" field.</summary>
    public const int ListEndFieldNumber = 3;
    private string listEnd_ = "";
    /// <summary>
    /// "}"
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ListEnd {
      get { return listEnd_; }
      set {
        listEnd_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BehaviorList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BehaviorList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ListStart != other.ListStart) return false;
      if(!behaviorToolingSymbols_.Equals(other.behaviorToolingSymbols_)) return false;
      if (ListEnd != other.ListEnd) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ListStart.Length != 0) hash ^= ListStart.GetHashCode();
      hash ^= behaviorToolingSymbols_.GetHashCode();
      if (ListEnd.Length != 0) hash ^= ListEnd.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ListStart.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ListStart);
      }
      behaviorToolingSymbols_.WriteTo(output, _repeated_behaviorToolingSymbols_codec);
      if (ListEnd.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ListEnd);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ListStart.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ListStart);
      }
      behaviorToolingSymbols_.WriteTo(ref output, _repeated_behaviorToolingSymbols_codec);
      if (ListEnd.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ListEnd);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ListStart.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ListStart);
      }
      size += behaviorToolingSymbols_.CalculateSize(_repeated_behaviorToolingSymbols_codec);
      if (ListEnd.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ListEnd);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BehaviorList other) {
      if (other == null) {
        return;
      }
      if (other.ListStart.Length != 0) {
        ListStart = other.ListStart;
      }
      behaviorToolingSymbols_.Add(other.behaviorToolingSymbols_);
      if (other.ListEnd.Length != 0) {
        ListEnd = other.ListEnd;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ListStart = input.ReadString();
            break;
          }
          case 18: {
            behaviorToolingSymbols_.AddEntriesFrom(input, _repeated_behaviorToolingSymbols_codec);
            break;
          }
          case 26: {
            ListEnd = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ListStart = input.ReadString();
            break;
          }
          case 18: {
            behaviorToolingSymbols_.AddEntriesFrom(ref input, _repeated_behaviorToolingSymbols_codec);
            break;
          }
          case 26: {
            ListEnd = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///Grammar for property sets
  /// </summary>
  public sealed partial class PropertySetList : pb::IMessage<PropertySetList>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PropertySetList> _parser = new pb::MessageParser<PropertySetList>(() => new PropertySetList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PropertySetList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactReflection.Descriptor.MessageTypes[38]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PropertySetList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PropertySetList(PropertySetList other) : this() {
      listStart_ = other.listStart_;
      propertySets_ = other.propertySets_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PropertySetList Clone() {
      return new PropertySetList(this);
    }

    /// <summary>Field number for the "list_start" field.</summary>
    public const int ListStartFieldNumber = 1;
    private string listStart_ = "";
    /// <summary>
    /// "+"
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ListStart {
      get { return listStart_; }
      set {
        listStart_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "property_sets" field.</summary>
    public const int PropertySetsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::IWA.TTF.Taxonomy.Model.Artifact.PropertySetListItem> _repeated_propertySets_codec
        = pb::FieldCodec.ForMessage(18, global::IWA.TTF.Taxonomy.Model.Artifact.PropertySetListItem.Parser);
    private readonly pbc::RepeatedField<global::IWA.TTF.Taxonomy.Model.Artifact.PropertySetListItem> propertySets_ = new pbc::RepeatedField<global::IWA.TTF.Taxonomy.Model.Artifact.PropertySetListItem>();
    /// <summary>
    ///model builder should put a comma between multiple sets.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::IWA.TTF.Taxonomy.Model.Artifact.PropertySetListItem> PropertySets {
      get { return propertySets_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PropertySetList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PropertySetList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ListStart != other.ListStart) return false;
      if(!propertySets_.Equals(other.propertySets_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ListStart.Length != 0) hash ^= ListStart.GetHashCode();
      hash ^= propertySets_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ListStart.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ListStart);
      }
      propertySets_.WriteTo(output, _repeated_propertySets_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ListStart.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ListStart);
      }
      propertySets_.WriteTo(ref output, _repeated_propertySets_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ListStart.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ListStart);
      }
      size += propertySets_.CalculateSize(_repeated_propertySets_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PropertySetList other) {
      if (other == null) {
        return;
      }
      if (other.ListStart.Length != 0) {
        ListStart = other.ListStart;
      }
      propertySets_.Add(other.propertySets_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ListStart = input.ReadString();
            break;
          }
          case 18: {
            propertySets_.AddEntriesFrom(input, _repeated_propertySets_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ListStart = input.ReadString();
            break;
          }
          case 18: {
            propertySets_.AddEntriesFrom(ref input, _repeated_propertySets_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PropertySetListItem : pb::IMessage<PropertySetListItem>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PropertySetListItem> _parser = new pb::MessageParser<PropertySetListItem>(() => new PropertySetListItem());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PropertySetListItem> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::IWA.TTF.Taxonomy.Model.Artifact.ArtifactReflection.Descriptor.MessageTypes[39]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PropertySetListItem() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PropertySetListItem(PropertySetListItem other) : this() {
      propertySetSymbol_ = other.propertySetSymbol_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PropertySetListItem Clone() {
      return new PropertySetListItem(this);
    }

    /// <summary>Field number for the "property_set_symbol" field.</summary>
    public const int PropertySetSymbolFieldNumber = 2;
    private string propertySetSymbol_ = "";
    /// <summary>
    /// starts with ph followed by Camel case name or symbol.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PropertySetSymbol {
      get { return propertySetSymbol_; }
      set {
        propertySetSymbol_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PropertySetListItem);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PropertySetListItem other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PropertySetSymbol != other.PropertySetSymbol) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PropertySetSymbol.Length != 0) hash ^= PropertySetSymbol.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (PropertySetSymbol.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(PropertySetSymbol);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (PropertySetSymbol.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(PropertySetSymbol);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PropertySetSymbol.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PropertySetSymbol);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PropertySetListItem other) {
      if (other == null) {
        return;
      }
      if (other.PropertySetSymbol.Length != 0) {
        PropertySetSymbol = other.PropertySetSymbol;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 18: {
            PropertySetSymbol = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 18: {
            PropertySetSymbol = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
