{
  "artifact": {
    "artifactSymbol": {
      "id": "4c2730f5-dc5f-4949-87e3-71f3a6e6cae9",
      "type": "TEMPLATE_FORMULA",
      "visual": "[&tau;<sub>N</sub>{<i>~d,t,s,e,b</i>}+&phi;File]",
      "tooling": "[tN{~d,t,s,e,b}+phFile]",
      "version": "1.0",
      "templateValidated": false
    },
    "name": "[tN{~d,t,s,e,b}+phFile]",
    "aliases": [
      "Document",
      "File",
      "Invoice",
      "PDF"
    ],
    "artifactDefinition": {
      "businessDescription": "Used to represent a document that may be a scanned or PDF printed document. It records the document hash to check for tampering, a file path to fetch the file from storage as well as the ability to be encumbered. Implements the File property-set.",
      "businessExample": "For example: you may choose to create an invoice token from an invoice document.  You can then allow another token or contract representing a loan or proof of financing to encumber the document establishing a link between the two.",
      "analogies": [
        {
          "name": "Scanned Document",
          "description": "A scanned copy of a certificate, like a diploma or industry certification",
          "artifactDefinition": null
        }
      ],
      "comments": "",
      "artifact": null
    },
    "dependencies": [],
    "incompatibleWithSymbols": [],
    "influencedBySymbols": [],
    "artifactFiles": [
      {
        "content": "CONTROL",
        "fileName": "[tN{~d,t,s,e,b}+phFile].proto",
        "fileData": "",
        "artifact": null
      },
      {
        "content": "UML",
        "fileName": "[tN{~d,t,s,e,b}+phFile].md",
        "fileData": "",
        "artifact": null
      }
    ],
    "maps": {}
  },
  "templateType": "SINGLE_TOKEN",
  "tokenBase": {
    "base": {
      "id":"53101d87-3c93-4d8b-ab39-1e629406d062",
      "type": "BASE",
      "visual": "&tau<sub>N</sub>{<i>s</i>}",
      "tooling": "tN{s}",
      "version": "1.0",
      "templateValidated": true
    }
  },
  "behaviors": [
    {
      "behavior": {
      "id":"af119e58-6d84-4ca6-9656-75e8d312f038",
      "type": "BEHAVIOR",
      "visual": "<i>t</i>",
      "tooling": "t",
      "version": "1.0",
      "templateValidated": false
      }
    },
    {
      "behavior": {
        "id":"dc8d5961-59e8-4a10-8b38-d9e99394d251",
        "type": "BEHAVIOR",
        "visual": "<i>e</i>",
        "tooling": "e",
        "version": "1.0",
        "templateValidated": false
      }
    },
    {
      "behavior": {
        "id":"803297a1-c0f9-4898-9d44-29c9d41cca97",
        "type": "BEHAVIOR",
        "visual": "<i>b</i>",
        "tooling": "b",
        "version": "1.0",
        "templateValidated": false
      }
    },
    {
      "behavior": {
        "id":"d5807a8e-879b-4885-95fa-f09ba2a22172",
        "type": "BEHAVIOR",
        "visual": "<i>~d</i>",
        "tooling": "~d",
        "version": "1.0",
        "templateValidated": false
      }
    },
    {
      "behavior": {
        "id":"c1189d7a-e142-4504-bf26-44c35b76c9d6",
        "type": "BEHAVIOR",
        "visual": "<i>s</i>",
        "tooling": "s",
        "version": "1.0",
        "templateValidated": false
      }
    }
  ],
  "behaviorGroups": [],
  "propertySets": [
    {
      "propertySet": {
        "id":"79d40648-02ba-4055-b700-01dce32196ec",
        "type": "PROPERTY_SET",
        "visual": "&phi;<i>File</i>",
        "tooling": "phFile",
        "version": "1.0",
        "templateValidated": false
      }
    }
  ],
  "childTokens": []
}
  
