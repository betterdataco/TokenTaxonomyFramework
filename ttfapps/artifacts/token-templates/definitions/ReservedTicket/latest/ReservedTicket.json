{
  "artifact": {
    "artifactSymbol": {
      "id": "8dab45c9-cf5d-4752-b4dd-d2192a22886a",
      "type": "TEMPLATE_DEFINITION",
      "visual": "&tau<sub>N</sub><i>{~d,t,g,SC}</i>",
      "tooling": "tN{~d,t,g,SC}",
      "version": "1.0",
      "templateValidated": true
    },
    "name": "ReservedTicket",
    "aliases": [
      "Reserved Seating",
      "Airline Ticket"
    ],
    "artifactDefinition": {
      "businessDescription": "This is a Variable Supply Whole Non-Fungible where the total supply can vary. The tokens in this class will be of the same series, sharing those properties, but also have unique values like seat number. It is Whole by setting the Decimals property on the dividable behavior = 0. A token instance can be burned.",
      "businessExample": "This token can be used to represent a unique item in a shared context, like a reserved seat at a concert.",
      "analogies": [
        {
          "name": "Reserved Seating",
          "description": "All tokens in the class share the venue, date and time for the event, but have a unique seat number.",
          "artifactDefinition": null
        }
      ],
      "comments": "",
      "artifact": null
    },
    "dependencies": [],
    "incompatibleWithSymbols": [],
    "influencedBySymbols": [],
    "controlUri": "",
    "artifactFiles": [
      {
        "content": "CONTROL",
        "fileName": "ReservedTicket.proto",
        "fileData": "",
        "artifact": null
      },
      {
        "content": "UML",
        "fileName": "ReservedTicket.md",
        "fileData": "",
        "artifact": null
      }
    ],
    "maps": {
      "codeReferences": [
        {
          "mappingType": "SOURCE_CODE",
          "name": "Open Zeppelin - ERC-751",
          "platform": "ETHEREUM_SOLIDITY",
          "referencePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721Full.sol",
          "maps": null
        }
      ],
      "implementationReferences": [
          {
            "mappingType": "IMPLEMENTATION",
            "name": "Open Zeppelin - ERC-751",
            "referencePath": "https://docs.openzeppelin.com/contracts/2.x/api/token/erc721#ERC721Full",
            "maps": null
          }
      ],
      "resources": [],
      "artifact": null
    },
    "contributors": [
      {
        "name": "Marley Gray",
        "organization": "Microsoft"
      }
    ]
  },
  "formulaReference": {
    "id": "38ead4b1-1f94-4bc3-8b1f-2d0dda0c72bb",
    "type": "TEMPLATE_FORMULA",
    "referenceNotes": "ReservedTicket",
    "values": null
  },
  "tokenBase": {
    "reference": {
      "id": "3c05a856-c901-4c30-917e-df9feed1c8de",
      "type": "BASE",
      "referenceNotes": "Whole non-fungible",
      "values": {
        "controlUri": "",
        "artifactFiles": [],
        "maps": {
          "codeReferences": [],
          "implementationReferences": [],
          "resources": [],
          "artifact": null
        }
      }
    },
    "valueType": "REFERENCE",
    "supply": "FIXED",
    "name": "",
    "symbol": "",
    "owner": "",
    "quantity": "0",
    "decimals": 0,
    "tokenProperties": {},
    "constructorName": "Constructor",
    "constructor": null
  },
  "behaviors": [
    {
      "reference": {
        "id": "d5807a8e-879b-4885-95fa-f09ba2a22172",
        "type": "BEHAVIOR",
        "referenceNotes": "Non-Subdividable",
        "values": {
          "controlUri": "",
          "artifactFiles": [],
          "maps": {
            "codeReferences": [
              {
                "mappingType": "SOURCE_CODE",
                "name": "Code 1",
                "platform": "DAML",
                "referencePath": "",
                "maps": null
              }
            ],
            "implementationReferences": [
              {
                "mappingType": "IMPLEMENTATION",
                "name": "Implementation 1",
                "platform": "CHAINCODE_GO",
                "referencePath": "",
                "maps": null
              }
            ],
            "resources": [
              {
                "mappingType": "RESOURCE",
                "name": "Regulation Reference 1",
                "description": "",
                "resourcePath": "",
                "maps": null
              }
            ],
            "artifact": null
          }
        }
      },
      "isExternal": true,
      "constructorType": "",
      "constructor": null,
      "appliesTo": [],
      "invocations": [],
      "influenceBindings": [],
      "properties": [
        {
          "name": "Decimals",
          "valueDescription": "Set to Zero, not allowing any subdivision, usually this is applied to the base token.",
          "templateValue": "0",
          "propertyInvocations": [
            {
              "id": "2ca7fbb2-ce98-4dda-a6ae-e4ac2527bb33",
              "name": "GetDecimals",
              "description": "Should return 0",
              "request": {
                "controlMessageName": "GetDecimalsRequest",
                "description": "",
                "inputParameters": []
              },
              "response": {
                "controlMessageName": "GetDecimalsResponse",
                "description": "Return 0",
                "outputParameters": [
                  {
                    "name": "Decimals",
                    "valueDescription": "0"
                  }
                ]
              }
            }
          ],
          "properties": []
        }
      ]
    },
    {
      "reference": {
        "id": "af119e58-6d84-4ca6-9656-75e8d312f038",
        "type": "BEHAVIOR",
        "referenceNotes": "Transferable",
        "values": {
          "controlUri": "",
          "artifactFiles": [],
          "maps": {
            "codeReferences": [
              {
                "mappingType": "SOURCE_CODE",
                "name": "Code 1",
                "platform": "DAML",
                "referencePath": "",
                "maps": null
              }
            ],
            "implementationReferences": [
              {
                "mappingType": "IMPLEMENTATION",
                "name": "Implementation 1",
                "platform": "CHAINCODE_GO",
                "referencePath": "",
                "maps": null
              }
            ],
            "resources": [
              {
                "mappingType": "RESOURCE",
                "name": "Regulation Reference 1",
                "description": "",
                "resourcePath": "",
                "maps": null
              }
            ],
            "artifact": null
          }
        }
      },
      "isExternal": true,
      "constructorType": "",
      "constructor": null,
      "appliesTo": [],
      "invocations": [
        {
          "id": "5d4b8f10-7857-4a2f-9b8c-d61e367a6bcc",
          "name": "Transfer",
          "description": ">A transfer request will invoke a transfer from the owner of the token to the party or account provided in the To field of the request. For fungible or dividable non-fungible tokens, this request may also include value in the Amount field of the request to transfer more than one token of the class in a single request.",
          "request": {
            "controlMessageName": "TransferRequest",
            "description": "The request",
            "inputParameters": [
              {
                "name": "To",
                "valueDescription": "AccountId to transfer ownership to."
              },
              {
                "name": "Quantity",
                "valueDescription": "Number of tokens to transfer."
              }
            ]
          },
          "response": {
            "controlMessageName": "TransferResponse",
            "description": "The response",
            "outputParameters": [
              {
                "name": "Confirmation",
                "valueDescription": "A confirmation receipt or error may be returned to the owner based on the outcome of the transfer request."
              }
            ]
          }
        },
        {
          "id": "516b4e2f-4a14-4c4f-a6f2-1419d4af35c6",
          "name": "TransferFrom",
          "description": ">A transfer request will invoke a transfer from the owner of the token to the party or account provided in the To field of the request. For fungible or dividable non-fungible tokens, this request may also include value in the Amount field of the request to transfer more than one token of the class in a single request.",
          "request": {
            "controlMessageName": "TransferFromRequest",
            "description": "The request",
            "inputParameters": [
              {
                "name": "From",
                "valueDescription": "AccountId to transfer ownership from."
              },
              {
                "name": "To",
                "valueDescription": "AccountId to transfer ownership to."
              },
              {
                "name": "Quantity",
                "valueDescription": "Number of tokens to transfer."
              }
            ]
          },
          "response": {
            "controlMessageName": "TransferFromResponse",
            "description": "The response",
            "outputParameters": [
              {
                "name": "Confirmation",
                "valueDescription": "A confirmation receipt or error may be returned to the owner based on the outcome of the transfer from request."
              }
            ]
          }
        }
      ],
      "influenceBindings": [],
      "properties": []
    },
    {
      "reference": {
        "id": "a3d02076-6009-4a65-9ed4-2deffe5291e1",
        "type": "BEHAVIOR",
        "referenceNotes": "Delegable",
        "values": {
          "controlUri": "",
          "artifactFiles": [],
          "maps": {
            "codeReferences": [
              {
                "mappingType": "SOURCE_CODE",
                "name": "Code 1",
                "platform": "DAML",
                "referencePath": "",
                "maps": null
              }
            ],
            "implementationReferences": [
              {
                "mappingType": "IMPLEMENTATION",
                "name": "Implementation 1",
                "platform": "CHAINCODE_GO",
                "referencePath": "",
                "maps": null
              }
            ],
            "resources": [
              {
                "mappingType": "RESOURCE",
                "name": "Regulation Reference 1",
                "description": "",
                "resourcePath": "",
                "maps": null
              }
            ],
            "artifact": null
          }
        }
      },
      "isExternal": true,
      "constructorType": "",
      "constructor": null,
      "appliesTo": [
        {
          "id":"803297a1-c0f9-4898-9d44-29c9d41cca97",
          "type": "BEHAVIOR",
          "visual": "<i>b</i>",
          "tooling": "b",
          "version": "1.0",
          "templateValidated": false
        },
        {
          "id":"af119e58-6d84-4ca6-9656-75e8d312f038",
          "type": "BEHAVIOR",
          "visual": "<i>t</i>",
          "tooling": "t",
          "version": "1.0",
          "templateValidated": false
        }
      ],
      "invocations": [
        {
          "id": "2e0fd8e5-2090-4c62-b094-232c32a78022",
          "name": "Allowance",
          "description": "A Request by a party or account to the owner of a token(s) to have the right to perform a delegated behavior on their behalf.",
          "request": {
            "controlMessageName": "AllowanceRequest",
            "description": "The request",
            "inputParameters": [
              {
                "name": "Quantity",
                "valueDescription": "Number of Tokens to be allowed."
              }
            ]
          },
          "response": {
            "controlMessageName": "AllowanceResponse",
            "description": "The response",
            "outputParameters": [
              {
                "name": "Confirmation",
                "valueDescription": "A confirmation receipt or denial be returned to the allowance requestor."
              }
            ]
          }
        },
        {
          "id": "6d5df99d-2f5e-4c7a-aea4-d2d54176abfd",
          "name": "Approve Allowance",
          "description": "Same control message as the AllowanceRequest.  This could allow for an AllowanceRequest to be forwarded to multiple parties needed to Approve and shield this from the requestor. When all Approvals are obtained, an AllowanceResponse could be sent.",
          "request": {
            "controlMessageName": "AllowanceRequest",
            "description": "The request",
            "inputParameters": [
              {
                "name": "Quantity",
                "valueDescription": "Number of Tokens to be allowed."
              }
            ]
          },
          "response": {
            "controlMessageName": "ApproveResponse",
            "description": "The response",
            "outputParameters": [
              {
                "name": "Confirmation",
                "valueDescription": "A confirmation response from the owner approving the an allowance request, indicating a allowance quantity the requestor has the option to invoke the Delegable behaviors on the token(s)."
              }
            ]
          }
        }
      ],
      "influenceBindings": [],
      "properties": []
    }
  ],
  "behaviorGroups": [],
  "propertySets": [],
  "childTokens": []
}