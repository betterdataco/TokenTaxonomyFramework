{
  "artifact": {
    "artifactSymbol": {
      "id":"51a62eba-0e84-433a-a3f1-9b3e7f72d928",
      "type": "BEHAVIOR",
      "visual": "<i>q</i>",
      "tooling": "q",
      "version": "1.0",
      "templateValidated": false
    },
    "name": "Redeemable",
    "aliases": [
      "Burn",
      "Retire"
    ],
    "artifactDefinition": {
      "businessDescription": "This behavior only applies to unique tokens. Redeemed tokens can no longer be spent. Redeeming a token removes an asset from the business network and guarantees that it can no longer be transferred or changed. You redeem a quantity represented in a token or tokens you own. If the redemption amount is less that the quantity represented in your token submitted, the remaining quantity after redemption is deposited into a new token and returned to you as the owner. For example, if you have a token representing 100 dollars, and want to redeem 50, the redeem transaction will create a new token worth 50 dollars, and transfer another 50 to a restricted account without an owner.",
      "businessExample": "If an item in a supply chain reaches its final destination, or a financial asset reaches its term, the token representing the asset can be redeemed since the asset no longer needs to be used.",
      "analogies": [
        {
          "name": "Oil Barrels",
          "description": "If you receive a token for each barrel of oil as a refiner, you will redeem the barrel when it is refined to remove it from circulation.",
          "artifactDefinition": null
        },
        {
          "name": "Admission Ticket",
          "description": "A token that is a coupon or single use ticket, should be marked or torn when it is redeemed so it cannot be used again.",
          "artifactDefinition": null
        }
      ],
      "comments": "",
      "artifact": null
    },
    "dependencies": [],
    "incompatibleWithSymbols": [
      {
        "id":"89ca6daf-5585-469e-abd1-19bc44e7a012",
        "type": "BASE",
        "visual": "&tau;<sub>F</sub>{<i>d</i>}",
        "tooling": "tF{d}",
        "version": "1.0",
        "templateValidated": true
      },
      {
        "id":"8314a797-df3c-409b-835c-0e80af92714f",
        "type": "BASE",
        "visual": "&tau<sub>N</sub>{<i>d</i>}",
        "tooling": "tN{d}",
        "version": "1.0",
        "templateValidated": true
      },
      {
        "id":"b1eacdf8-35d8-454a-b1af-92eb0b6f45d4",
        "type": "BASE",
        "visual": "&tau;<sub>F</sub>{<i>~d</i>}",
        "tooling": "tF{~d}",
        "version": "1.0",
        "templateValidated": true
      },
      {
        "id":"3c05a856-c901-4c30-917e-df9feed1c8de",
        "type": "BASE",
        "visual": "&tau<sub>N</sub>{<i>~d</i>}",
        "tooling": "tN{~d}",
        "version": "1.0",
        "templateValidated": true
      }
    ],
    "influencedBySymbols": [
      {
        "description": "If Compliance is present, a CheckBurnAllowed request has to be made and verified before a Burn request or a BurnFrom request.",
        "symbol": {
          "id":"03dd1c48-dfdb-4ec1-86c8-69c3abac76b7",
          "type": "BEHAVIOR",
          "visual": "<i>c</i>",
          "tooling": "c",
          "version": "1.0",
          "templateValidated": false
        }
      }
    ],
    "artifactFiles": [
      {
        "content": "CONTROL",
        "fileName": "redeemable.proto",
        "fileData": "",
        "artifact": null
      },
      {
        "content": "UML",
        "fileName": "burnable.md",
        "fileData": "",
        "artifact": null
      }
    ],
    "maps": {
      "codeReferences": [
        {
          "mappingType": "SOURCE_CODE",
          "name": "FabToken",
          "platform": "CHAINCODE_GO",
          "referencePath": "https://github.com/hyperledger/fabric/blob/v2.0.0-alpha/token/cmd/redeem.go",
          "maps": null
        }
      ],
      "resources": [],
      "artifact": null
    }
  },
  "invocations": [
    {
      "id": "c6a0ef93-0d7d-4c68-a3b4-8f5d0bbadcbe",
      "name": "Redeem",
      "description": "A redeem request will redeem a quantity transfer from tokens provided to an account that has no owner, removing them permanently from circulation, as long as tokens being redeemed need to belong to the transaction initiator and are unspent. Any remaining quantity will be returned as a new unspent quantity to the invoker/owner.",
      "request": {
        "controlMessageName": "RedeemRequest",
        "description": "The request includes an asset quantity to redeem and a list of tokens that have quantities that equal or exceed the quantity to redeem. Any remaining balance will be deposited into a new token with the invoker as the owner.",
        "inputParameters": [
          {
            "name": "TokenIds",
            "valueDescription": "List of Token Identifiers submitted to draw the quantity to redeem from. This data type is defined at implementation."
          },
          {
            "name": "Quantity",
            "valueDescription": "Number of tokens to transfer."
          },
          {
            "name": "Recipient",
            "valueDescription": "Always null, empty or to a know account that has no owner."
          }
        ]
      },
      "response": {
        "controlMessageName": "RedeemResponse",
        "description": "The response",
        "outputParameters": [
          {
            "name": "Confirmation",
            "valueDescription": "A confirmation receipt or error may be returned to the invoker based on the outcome of the fabricate request."
          }
        ]
      }
    }
  ],
  "properties": []
}
