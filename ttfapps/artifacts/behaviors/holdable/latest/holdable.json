{
  "artifact": {
    "artifactSymbol": {
      "id":"9d137226-b7b0-4d3e-9e82-4d27d4227fba",
      "type": "BEHAVIOR",
      "visual": "<i>h</i>",
      "tooling": "h",
      "version": "1.0",
      "templateValidated": false
    },
    "name": "Holdable",
    "aliases": [],
    "artifactDefinition": {
      "businessDescription": "Every token instance has an owner. The Transferable behavior provides the owner the ability to transfer the ownership to another party or account. A hold specifies a payer, a payee, a maximum amount, a notary and an expiration time. When the hold is created, the specified token balance from the payer is put on hold. A held balance cannot be transferred until the hold is either executed or released. The hold can only be executed (partially or the full amount) by the notary, which triggers the transfer of the tokens from the payer to the payee. If a hold is released, either by the notary at any time, or by anyone after the expiration, no transfer is carried out and the amount is available again for the payer. This behavior is Delegable. If the token definition is Delegable, HoldFrom will be available.",
      "businessExample": "When checking in a hotel, the hotel will put a hold on the guest's account to ensure that enough balance is available to pay for the room before handing over the keys.",
      "analogies": [
        {
          "name": "Escrow",
          "description": "Holds are similar to escrows in that they are firm and lead to final settlement.",
          "artifactDefinition": null
        }
      ],
      "comments": "",
      "artifact": null
    },
    "dependencies": [
      {
        "description": "Holds require transfers to be allowed",
        "symbol": {
          "id":"af119e58-6d84-4ca6-9656-75e8d312f038",
          "type": "BEHAVIOR",
          "visual": "<i>t</i>",
          "tooling": "t",
          "version": "1.0",
          "templateValidated": false
        }
      }
    ],
    "incompatibleWithSymbols": [
      {
        "id":"a4fa4ca8-6afd-452b-91f5-7103b6fee5e5",
        "type": "BEHAVIOR",
        "visual": "<i>~t</i>",
        "tooling": "~t",
        "version": "1.0",
        "templateValidated": false
      }
    ],
    "influencedBySymbols": [
      {
        "description": "If the token is Delegable, HoldFrom should be enabled.",
        "symbol": {
          "id":"a3d02076-6009-4a65-9ed4-2deffe5291e1",
          "type": "BEHAVIOR",
          "visual": "<i>g</i>",
          "tooling": "g",
          "version": ""
        }
      }
    ],
    "artifactFiles": [
      {
        "content": "CONTROL",
        "fileName": "holdable.proto",
        "fileData": "",
        "artifact": null
      },
      {
        "content": "UML",
        "fileName": "holdable.md",
        "fileData": "",
        "artifact": null
      }
    ],
    "maps": {
      "codeReferences": [
        {
          "mappingType": "SOURCE_CODE",
          "name": "Standard Implementation",
          "platform": "ETHEREUM_SOLIDITY",
          "referencePath": "https://github.com/IoBuilders/holdable-token/blob/master/contracts/Holdable.sol",
          "maps": null
        }
      ],
      "artifact": null
    },
    "contributors": [
      {
        "name": "Julio Faura",
        "organization": "Adhara"
      },
      {
        "name": "Daniel Lehrner",
        "organization": "IO Builders"
      }
    ]
  },
  "invocations": [
    {
      "id": "6cc942c8-afa4-4bab-9737-27a0b7b24a5b",
      "name": "Hold",
      "description": "Request the create a hold on behalf of the owner of the token in favor of to the party or account provided in the To field of the request. It specifies a notary who is responsible to either execute or release the hold.",
      "request": {
        "controlMessageName": "HoldRequest",
        "description": "The request",
        "inputParameters": [
          {
            "name": "OperationId",
            "valueDescription": "An unique ID to identify the hold"
          },
          {
            "name": "To",
            "valueDescription": "AccountId to transfer ownership of token(s) to after the hold is executed."
          },
          {
            "name": "Notary",
            "valueDescription": "AccountId of the notary"
          },
          {
            "name": "Quantity",
            "valueDescription": "Number of tokens to be put on hold."
          },
          {
            "name": "TimeToExpiration",
            "valueDescription": "The duration until the hold is expired. If it is '0' the hold must be perpetual."
          }
        ]
      },
      "response": {
        "controlMessageName": "HoldResponse",
        "description": "The response",
        "outputParameters": [
          {
            "name": "Confirmation",
            "valueDescription": "A confirmation receipt or error may be returned to the owner based on the outcome of the hold request."
          }
        ]
      }
    },
    {
      "id": "67f2d012-5b2d-46bc-8ee7-befdf90f66d8",
      "name": "HoldFrom",
      "description": "Request the create a hold on behalf of the party or account provided in the From field in favor of to the party or account provided in the To field of the request. It specifies a notary who is responsible to either execute or release the hold.",
      "request": {
        "controlMessageName": "HoldFromRequest",
        "description": "The request",
        "inputParameters": [
          {
            "name": "OperationId",
            "valueDescription": "An unique ID to identify the hold"
          },
          {
            "name": "From",
            "valueDescription": "AccountId oon which behalf the hold should be created."
          },
          {
            "name": "To",
            "valueDescription": "AccountId to transfer ownership of token(s) to after the hold is executed."
          },
          {
            "name": "Notary",
            "valueDescription": "AccountId of the notary"
          },
          {
            "name": "Quantity",
            "valueDescription": "Number of tokens to be put on hold."
          },
          {
            "name": "TimeToExpiration",
            "valueDescription": "The duration until the hold is expired. If it is '0' the hold must be perpetual."
          }
        ]
      },
      "response": {
        "controlMessageName": "HoldFromResponse",
        "description": "The response",
        "outputParameters": [
          {
            "name": "Confirmation",
            "valueDescription": "A confirmation receipt or error may be returned to the owner based on the outcome of the hold from request."
          }
        ]
      }
    },
    {
      "id": "4946eea9-c59e-4192-9115-2ba57821936c",
      "name": "ExecuteHold",
      "description": "Request to execute a hold. Execute means that the specified value is transferred the owner of the token in favor of to the party or account provided in the To field of the Hold / HoldFrom request. If the specified value is less than the hold value the remaining amount is available again to the owner of the tokens. Only the account specified in the Notary field of the Hold / HoldFrom request can make a successful request.",
      "request": {
        "controlMessageName": "ExecuteHoldRequest",
        "description": "The request",
        "inputParameters": [
          {
            "name": "OperationId",
            "valueDescription": "An unique ID to identify the hold"
          },
          {
            "name": "Quantity",
            "valueDescription": "Number of tokens to be put on hold."
          }
        ]
      },
      "response": {
        "controlMessageName": "ExecuteHoldResponse",
        "description": "The response",
        "outputParameters": [
          {
            "name": "Confirmation",
            "valueDescription": "A confirmation receipt or error may be returned to the requester based on the outcome of the execute hold request."
          }
        ]
      }
    },
    {
      "id": "d07c8a5a-be40-479c-aa0d-7ac80b7ca9b3",
      "name": "ReleaseHold",
      "description": "Request to release a hold. Release means that the transfer is not executed and the held amount is available again for the owner of the token. Until a hold has expired it can only be released by the notary or the party or account provided in the To field of the Hold / HoldFrom request. After it has expired it can be released by any account.",
      "request": {
        "controlMessageName": "ReleaseHoldRequest",
        "description": "The request",
        "inputParameters": [
          {
            "name": "OperationId",
            "valueDescription": "An unique ID to identify the hold"
          }
        ]
      },
      "response": {
        "controlMessageName": "ReleaseHoldResponse",
        "description": "The response",
        "outputParameters": [
          {
            "name": "Confirmation",
            "valueDescription": "A confirmation receipt or error may be returned to the requester based on the outcome of the release hold request."
          }
        ]
      }
    }
  ]
}
